{"status":"ok","feed":{"title":"\u4f59\u821c\u54f2\u7684 One Piece","link":"http:\/\/chocoluffy.com\/","author":"Shunzhe Yu","description":null,"image":""},"items":[{"title":"\u5199\u7ed9\u9ad8\u8003\u4e09\u5e74\u540e\u81ea\u5df1\u7684\u4e00\u5c01\u4fe1","link":"http:\/\/chocoluffy.com\/2016\/06\/11\/%E5%86%99%E7%BB%99%E9%AB%98%E8%80%83%E4%B8%89%E5%B9%B4%E5%90%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%80%E5%B0%81%E4%BF%A1\/","guid":"http:\/\/chocoluffy.com\/2016\/06\/11\/\u5199\u7ed9\u9ad8\u8003\u4e09\u5e74\u540e\u81ea\u5df1\u7684\u4e00\u5c01\u4fe1\/","pubDate":"2016-06-11T20:49:24.000Z","categories":["\u516c\u4f17\u53f7\u6587\u7ae0","\u65e5\u8bb0","\u539f\u521b"],"author":"Shunzhe Yu","thumbnail":"","description":"<p>\u8fd9\u7bc7\u968f\u7b14\uff0c\u8bb0\u4e3a\u6211\u5bf9\u6211\u9ad8\u4e2d\u601d\u7ef4\u7684\u5ba1\u5224\u3002 \u5199\u7ed9\u9ad8\u8003\u7ed3\u675f\u4e09\u5e74\u540e\u7684\u81ea\u5df1\uff0c \u4e5f\u5199\u7ed9\u6240\u6709\u521a\u521a\u7ed3\u675f\u9ad8\u8003\u4e43\u81f3\u5373\u5c06\u5f00\u59cb\u9ad8\u4e2d\u751f\u6d3b\u7684\u5c0f\u4f19\u4f34\u4eec\u3002<\/p>","content":"<p>\u8fd9\u7bc7\u968f\u7b14\uff0c\u8bb0\u4e3a\u6211\u5bf9\u6211\u9ad8\u4e2d\u601d\u7ef4\u7684\u5ba1\u5224\u3002 \u5199\u7ed9\u9ad8\u8003\u7ed3\u675f\u4e09\u5e74\u540e\u7684\u81ea\u5df1\uff0c \u4e5f\u5199\u7ed9\u6240\u6709\u521a\u521a\u7ed3\u675f\u9ad8\u8003\u4e43\u81f3\u5373\u5c06\u5f00\u59cb\u9ad8\u4e2d\u751f\u6d3b\u7684\u5c0f\u4f19\u4f34\u4eec\u3002<\/p>\n<a><\/a>\n<blockquote>\u201cOne Piece\u5230\u5e95\u5b58\u4e0d\u5b58\u5728\uff0c\u6211\u4e0d\u60f3\u77e5\u9053\u3002\u201d<\/blockquote>\n\n<p><img src=\"http:\/\/ww2.sinaimg.cn\/large\/72f96cbagw1f4ryvevg44j21fn0cl79q\" alt=\"one piece\"><\/p>\n<p>3\u5e74\u524d\uff0c \u6211\u521a\u7ed3\u675f\u9ad8\u8003\uff0c \u5750\u5728\u7238\u5988\u7684\u8f66\u4e0a\u4e00\u8d77\u4ece\u5b66\u6821\u56de\u5bb6\uff0c \u8def\u4e0a\u6ca1\u591a\u5c11\u8f66\uff0c \u5f88\u50cf\u6211\u5f53\u65f6\u7a7a\u7a7a\u7684\u5fc3\u3002<\/p>\n<p>\u6211\u662f\u4e00\u4e2a\u5f88\u5bb9\u6613\u6709\u62bd\u79bb\u611f\u7684\u4eba\uff0c \u548c\u5468\u56f4\u7684\u4eba\u4e0e\u58f0\u97f3\u95f9\u817e\u4e45\u4e86\uff0c \u4eff\u4f5b\u50cf\u4e00\u6839\u9488\u6233\u7834\u4e86\u6ce1\u6ce1\uff0c\u6211\u4f1a\u5b89\u9759\u4e0b\u6765\u3002 \u8fd8\u8bb0\u5f97\u90a3\u5929\u9ad8\u8003\u6700\u540e\u4e00\u95e8\u7ed3\u675f\u4e4b\u540e\uff0c \u4e00\u7fa4\u5bb6\u957f\u62e5\u6324\u4e86\u8bfe\u5ba4\uff0c \u7a81\u7136\u4e00\u4e0b\u5b50\u628a\u6211\u63a8\u8fdb\u4e86\u964c\u751f\u7684\u70ed\u6c14\u817e\u817e\u3002 \u7136\u800c\u6211\u5df2\u7ecf\u4e0d\u8bb0\u5f97\u5f53\u65f6\u7684\u6211\u9001\u4e0a\u4e86\u591a\u5c11\u7b11\u8138\uff0c \u4f46\u6211\u6e05\u695a\u7684\u8bb0\u5f97\u90a3\u79cd\u4ece\u672a\u6709\u8fc7\u7684\u7a7a\u65f7\uff0c \u662f\u9ad8\u8003\u7684\u621b\u7136\u800c\u6b62\u610f\u72b9\u672a\u5c3d\u4e5f\u597d\uff0c \u8fd8\u662f\u4e00\u79cd\u62b5\u8fbe\u7ec8\u70b9\u7684\u75b2\u6001\u5f77\u5fa8\uff0c \u6211\u7ad9\u5728\u90a3\u91cc\uff0c \u542c\u7740\u6700\u719f\u6089\u800c\u964c\u751f\u7684\u5bd2\u6684\uff0c \u65e0\u6240\u9002\u4ece\u3002\u76f4\u5230\u5728\u4eba\u7fa4\u91cc\u7785\u89c1\u4e86\u7238\u7238\u5988\u5988\uff0c \u6211\u624d\u56de\u8fc7\u4e86\u795e\uff0c \u5f53\u65f6\u5c31\u60f3\u4e00\u76f4\u62b1\u7740\u4ed6\u4eec\u3002<\/p>\n<p>\u592a\u591a\u4eba\u7684\u638c\u58f0\u548c\u6b22\u547c\u8ba9\u4f60\u89c9\u5f97\u9ad8\u8003\u5c31\u662f\u7ec8\u70b9\uff0c \u53ef\u6ca1\u6709\u591a\u5c11\u4eba\u7406\u89e3\u4f60\u7684\u5f77\u5fa8\u548c\u5f20\u671b\u3002<\/p>\n<p>\u201c\u597d\u50cf\u4e00\u4e0b\u5b50\u4ec0\u4e48\u90fd\u7ed3\u675f\u4e86\u2026\u2026\u201d<\/p>\n<p>3\u5e74\u540e\uff0c\u6216\u662f\u547d\u8fd0\u7684\u5076\u7136\u548c\u7737\u987e\uff0c \u6211\u78be\u8f6c\u5728\u4e2d\u5c71\u5927\u5b66\uff0c \u52a0\u5dde\u4f2f\u514b\u5229\u5927\u5b66\uff0c \u5e76\u4e8e\u53bb\u5e74\u843d\u811a\u5728\u591a\u4f26\u591a\u5927\u5b66\u3002 \u56de\u671b\u9ad8\u4e2d\u6bd5\u4e1a\u8fd9\u51e0\u5e74\u6211\u8d70\u8fc7\u7684\u811a\u5370\uff0c \u592a\u591a\u592a\u591a\u7684\u4eba\u4e0e\u4e8b\u7275\u626f\u7740\u6211\uff0c \u9707\u64bc\u7740\u6211\uff0c \u6539\u53d8\u7740\u6211\u3002 \u76f8\u6bd4\u73b0\u5728\u80fd\u591f\u638c\u63e1\u7740\u81ea\u5df1\u52aa\u529b\u7684\u75d5\u8ff9\u548c\u65b9\u5411\uff0c \u201c\u9ad8\u8003\u201d\u4e24\u5b57\u5bf9\u73b0\u5728\u7684\u6211\u800c\u8a00\uff0c \u66f4\u50cf\u662f\u7ffb\u770b\u513f\u65f6\u65e5\u8bb0\u90a3\u822c\u54ed\u7b11\u4e0d\u5f97\u65f3\u5acc\u5f03\u548c\u60cb\u60dc\u3002 \u5acc\u5f03\u5f53\u65f6\u81ea\u5df1\u90a3\u79cd\u4e0d\u80fd\u591f\u518d\u771f\u5b9e\u7684\u7a7a\u9614\u65e0\u52a9\uff0c \u60cb\u60dc\uff0c \u6216\u8bb8\u80fd\u591f\u66f4\u65e9\u4e9b\u4e3a\u70ed\u7231\u7684\u4e1c\u897f\u4ed8\u51fa\u66f4\u591a\u7684\u673a\u4f1a\u3002\u4e5f\u6b63\u662f\u8fd9\u4efd\u5207\u5207\u5b9e\u5b9e\u7684\u60f3\u6cd5\uff0c \u6709\u65f6\u5019\u8ba9\u6211\u53d1\u68a6\uff1a\u5982\u679c\u8ba9\u6211\u56de\u53bb\u4e09\u5e74\u524d\uff0c \u770b\u7740\u8bfe\u684c\u524d\u50bb\u4e4e\u4e4e\u7684\u81ea\u5df1\uff0c \u6211\u4f1a\u548c\u81ea\u5df1\u8bf4\u5199\u4ec0\u4e48\u3002<\/p>\n<p>\u4e00\u3001<\/p>\n<p>\u6211\u76f8\u4fe1\u5076\u7136\uff0c \u4e0d\u662f\u5426\u5b9a\u53bb\u52e4\u594b\u3001\u53bb\u52aa\u529b\u7684\u610f\u4e49\uff0c \u4e0d\u662f\u53bb\u53cd\u9a73\u4eba\u5b9a\u80dc\u5929\u3001\u94c1\u6775\u6210\u9488\u7684\u7cbe\u795e\uff0c \u800c\u662f\u6211\u5e0c\u671b\u66f4\u591a\u7684\u5bbd\u5bb9\u3002\u521d\u4e2d\u9ad8\u4e2d\u5927\u91cf\u5927\u91cf\u4e0d\u9700\u8981\u5929\u8d4b\u800c\u5f3a\u8c03\u8bb0\u5fc6\u7684\u8bad\u7ec3\uff0c \u4e2d\u8003\u9ad8\u8003\u524d\u5f25\u6f2b\u7684\u4e09\u4e2a\u6708\u82e6\u5b66\u9006\u88ad\u7684\u6545\u4e8b\u4e0e\u6fc0\u52b1\uff0c \u592a\u5bb9\u6613\u8ba9\u6211\u4eec\u53bb\u63a5\u53d7\u4e00\u4e2a\u7ebf\u6027\u56e0\u679c\u8bba\u7684\u4e16\u754c\uff0c \u56e0\u4e3a\u6211\u8fd9\u822c\u8fd9\u822c\u7684\u201c\u4ed8\u51fa\u201d\u4e0e\u8bad\u7ec3\uff0c \u6211\u4e00\u5b9a\u80fd\u5f97\u5230\u5373\u65f6\u53ef\u89c1\u7684\u6210\u679c\uff0c \u800c\u5f80\u5f80\u6210\u7ee9\u4e5f\u5f88\u670d\u6c14\u7684\u63d0\u9ad8\u66f4\u8ba9\u6211\u76f8\u4fe1\uff0c \u201c\u8fd9\u6761\u8def\u6211\u6ca1\u6709\u9009\u9519\uff0c \u53ea\u662f\u6211\u8fd8\u4e0d\u591f\u52aa\u529b\u800c\u5df2\u201d\uff0c \u201c\u4ed6\u4eec\u7684\u6210\u7ee9\u8fd8\u6ca1\u6709\u63d0\u9ad8\uff0c \u4e00\u5b9a\u662f\u8fd8\u4e0d\u591f\u52aa\u529b\u201d\u7684\u5e7b\u60f3\u3002 \u5f88\u96be\u8bb2\u8fd9\u79cd\u601d\u8def\u5bf9\u90a3\u4e2a\u4eba\u7684\u9ad8\u8003\u5e2e\u52a9\u5230\u5e95\u5927\u4e0d\u5927\uff0c \u4f46\u8fd9\u5374\u662f\u4e00\u79cd\u5f88\u6b8b\u9177\u7684\u903b\u8f91\u3002<\/p>\n<p>\u8bd5\u60f3\u60f3\uff0c \u5728\u4e00\u4e2a\u4ed8\u51fa\u5c31\u6709\u56de\u62a5\u7684\u4e16\u754c\u91cc\uff0c \u4f60\u6240\u6709\u7684\u6210\u529f\u4e0e\u8363\u5149\uff0c \u90fd\u53ea\u4e0e\u4f60\u81ea\u5df1\u76f8\u5173\uff0c \u522b\u4eba\u7684\u5931\u624b\u632b\u6298\uff0c \u90fd\u53ea\u56e0\u4e3a\u4ed6\u4eec\u4ed8\u51fa\u7684\u4e0d\u591f\u591a\uff1b \u5bcc\u4eba\u7684\u5bcc\uff0c \u662f\u5929\u7ecf\u5730\u4e49\u7684\uff0c \u800c\u7a77\u4eba\u7684\u7a77\uff0c \u4e5f\u90fd\u65e0\u975e\u662f\u4ed6\u4eec\u6d3b\u8be5\uff1b \u5584\u826f\u4e0e\u540c\u60c5\u53d8\u5f97\u80c6\u602f\u4e86\uff0c \u4f38\u51fa\u7684\u63f4\u624b\u597d\u50cf\u4e5f\u56e0\u4e3a\u201c\u5230\u5e95\u4ed6\u503c\u4e0d\u503c\u5f97\u6211\u7684\u5e2e\u52a9\u201d\u7684\u6253\u91cf\u800c\u98a4\u6296\uff0c \u6211\u4eec\u751f\u6d3b\u5728\u8fd9\u6837\u7684\u4e16\u754c\u91cc\uff0c \u592a\u5bb9\u6613\u53d8\u5f97\u575a\u786c\u800c\u81ea\u8d1f\uff0c \u4eba\u5b9a\u80dc\u5929\u4e0d\u518d\u662f\u9762\u5bf9\u8fc7\u7a0b\u7684\u9f13\u52b1\u800c\u6210\u4e86\u9762\u5bf9\u7ed3\u679c\u7684\u56a3\u5f20\u3002\u4e00\u4e2a\u5931\u53bb\u4e86\u5c0a\u91cd\u548c\u60ca\u559c\u7684\u4e16\u754c\uff0c \u6211\u4e0d\u559c\u6b22\u3002<\/p>\n<p>\u6211\u4eec\u60f3\u8981\u5c0a\u91cd\u4e0e\u60ca\u559c\uff0c \u6211\u4eec\u4f1a\u56e0\u6b64\u60f3\u8981\u7406\u89e3\u5bf9\u65b9\u7684\u4e0d\u540c\u548c\u5141\u8bb8\u90a3\u53d8\u5e7b\u83ab\u6d4b\u7684\u8fd0\u6c14\uff0c \u4f1a\u60f3\u8d77\u5bbd\u5bb9\u3002 \u4e0d\u662f\u201c\u5982\u4f55\u5982\u4f55\u539f\u8c05\u522b\u4eba\u7684\u9519\u8bef\u201d\uff0c\u800c\u662f\u76f8\u4fe1\u81ea\u5df1\u7684\u4efb\u4f55\u6210\u5c31\u90fd\u79bb\u4e0d\u5f00\u5468\u906d\u4eba\u7684\u76f8\u52a9\u4e0e\u6559\u8bf2\uff0c \u90fd\u79bb\u4e0d\u5f00\u524d\u4eba\u7684\u7ecf\u9a8c\u548c\u6559\u8bad\uff0c \u76f8\u4fe1\u6ca1\u6709\u90a3\u4e48\u7406\u6240\u5f53\u7136\u3002 \u611f\u89c9\u53c8\u50cf\u8bf4\u8d77\u4e86\u5927\u9053\u7406\uff0c \u53ef\u5bf9\u4e8e\u4e00\u4e2a\u9ad8\u4e2d\u751f\uff0c \u4e43\u81f3\u73b0\u5728\u8bb8\u591a\u7684\u6210\u5e74\u4eba\u8fc7\u5206\u7684\u81ea\u6211\u4ef7\u503c\u8ffd\u6c42\uff0c \u8fd9\u6700\u6700\u7b80\u5355\u7684\u4e00\u6761\uff0c \u5374\u4e00\u76f4\u4e0d\u80af\u627f\u8ba4\u3002<\/p>\n<p>\u6211\u8bb0\u5f97\u5f88\u6e05\u695a\uff0c \u6211\u521d\u9ad8\u4e2d\u65f6\u5019\u7684\u201c\u52aa\u529b\u8f68\u8ff9\u201d\u3002\u5230\u521d\u4e09\u524d\u4e00\u76f4\u662f\u540a\u8f66\u5c3e\uff0c \u53ea\u5230\u53d1\u73b0\u81ea\u5df1\u73a9\u7684\u6700\u597d\u7684\u4e00\u7fa4\u5c0f\u4f19\u4f34\u548c\u81ea\u5df1\u559c\u6b22\u7684\u5973\u751f\u90fd\u53ef\u4ee5\u6beb\u4e0d\u8d39\u529b\u5730\u8fdb\u7701\u7ea7\u91cd\u70b9\u73ed\uff0c \u8fd9\u6210\u4e86\u81ea\u5df1\u5f53\u65f6\u52aa\u529b\u7684\u7406\u7531\uff1b \u4e00\u76f4\u559c\u6b22\u542c\u5ba3\u5e03\u81ea\u5df1\u7406\u79d1\u6210\u7ee9\u7684\u90a3\u4e00\u523b\u7684\u638c\u58f0\u548c\u8d5e\u53f9\uff0c \u8fd9\u6210\u4e86\u6211\u9009\u62e9\u5965\u6570\u3001\u5965\u5316\u7684\u7406\u7531\uff1b \u56e0\u4e3a\u8001\u5e08\u5728\u4f5c\u4e1a\u672c\u4e0a\u7ed9\u6211\u5199\u4e86\u4e2a\u201c\u6709\u7075\u6c14\u201d\uff0c \u6210\u4e86\u6211\u90a3\u4e09\u5e74\u90a3\u95e8\u8bfe\u5fc5\u987b\u8003\u6ee1\u5206\u7684\u7406\u7531\uff1b \u56e0\u4e3a\u60f3\u8981\u8bc1\u660e\u6211\u6bd4\u53e6\u4e00\u4e2a\u540c\u5b66\u66f4\u5389\u5bb3\uff0c \u6210\u4e86\u6211\u5fc5\u987b\u4fdd\u6301\u5e74\u7eaa\u524d\u5217\u4e0d\u65ad\u53bb\u4e89\u7b2c\u4e00\u7684\u7406\u7531\u3002\u6797\u6797\u603b\u603b\u7684\u7406\u7531\uff0c \u6709\u7b11\u6709\u6cea\u5176\u4e2d\u4e0d\u4e4f\u5145\u6ee1\u4e86\u8bb0\u5fc6\u4e0e\u611f\u52a8\u7684\u7406\u7531\uff0c \u53ea\u53ef\u60dc\uff0c \u6ca1\u6709\u4e00\u4e2a\u7406\u7531\u662f\u56e0\u4e3a\u6211\u559c\u6b22\u2026\u2026<\/p>\n<p>\u6211\u6240\u8c13\u7684\u6210\u5c31\uff0c \u4e0d\u8fc7\u662f\u5728\u67d0\u5b66\u79d1\u67d0\u8003\u8bd5\u4e0a\u8003\u7684\u76f8\u5bf9\u597d\u4e00\u70b9\u7f62\u4e86\uff0c \u53ef\u6211\u6240\u4ed8\u51fa\u7684\uff0c \u5374\u662f\u4e00\u6bb5\u201c\u592a\u4e13\u6ce8\u201d\u7684\u51b2\u523a\uff0c \u4ee5\u81f4\u4e8e\u6839\u672c\u6ca1\u6765\u5f97\u53ca\u60f3\u81ea\u5df1\u7684\u70ed\u60c5\u548c\u5174\u8da3\u6240\u5728\uff0c \u800c\u81ea\u987e\u81ea\u5730\u8ba4\u4e3a\u201c\u6211\u503c\u5f97\u4e00\u5207\u7ed3\u679c\u4e0e\u8363\u8a89\u201d\u3002 \u5c31\u50cf\u8dd1\u5728\u8dd1\u9053\u91cc\u7684\u6211\u4eec\uff0c \u4ece\u6765\u597d\u50cf\u90fd\u6ca1\u6709\u8d28\u7591\u8fc7\u8dd1\u9053\u7684\u65b9\u5411\uff0c \u800c\u8d8a\u8dd1\u8d8a\u5fd8\u8bb0\u4e86\u81ea\u5df1\u6240\u5c5e\u7684\u90a3\u4e2a\u65b9\u5411\uff0c \u4e43\u81f3\u5954\u8dd1\u7684\u610f\u4e49\u3002<\/p>\n<p>\u6bcf\u4e2a\u4eba\u90fd\u6709\u8d70\u8fd1\u821e\u53f0\u4e2d\u592e\u7684\u65f6\u523b\uff0c \u5b66\u4f1a\u5bbd\u5bb9\u6253\u5728\u81ea\u5df1\u8eab\u4e0a\u7684\u5149\uff0c\u5b66\u4f1a\u7406\u89e3\u8fd0\u6c14\u548c\u5076\u7136\uff0c \u60f3\u7684\u6e05\u695a\u522b\u4eba\u7684\u6276\u6301\u4e0e\u5e2e\u52a9\uff0c \u66f4\u770b\u5f97\u6e05\u81ea\u5df1\u7a76\u7adf\u5c5e\u4e0d\u5c5e\u4e8e\u8fd9\u4e2a\u821e\u53f0\uff0c \u6bd5\u7adf\u8fd9\u4e2a\u4e16\u754c\u4e0a\u6700\u7b80\u5355\u800c\u7c97\u66b4\u7684\u5ffd\u60a0\uff0c \u5c31\u662f\u53eb\u4f60\u53bb\u770b\u7740\u522b\u4eba\u8dd1\u5230\u54ea\u513f\uff0c \u4f60\u4e5f\u53bb\u90a3\u513f\u3002 <\/p>\n<p>\u4e8c\u3001<\/p>\n<p>\u6ca1\u6709\u4e00\u4e2a\u80fd\u89e3\u51b3\u6240\u6709\u95ee\u9898\u7684\u7b54\u6848\uff0c \u4f46\u662f\u53ef\u4ee5\u6709\u4e00\u4e2a\u66f4\u503e\u5411\u6539\u53d8\u7684\u89d2\u5ea6\u3002<\/p>\n<p>\u4e0b\u9762\u8fd9\u4e2a\u6545\u4e8b\u662f\u6211\u5728\u77e5\u4e4e\u4e0a\u770b\u5230\u7684\u4e00\u4e2a\u5370\u8c61\u5f88\u6df1\u523b\u7684\u6545\u4e8b\u3002 2016\u5e74\u666e\u5229\u5179\u514b\u5efa\u7b51\u5956\u5f97\u4e3bAlejandro Aravena\u57282014\u5e74Ted\u8bba\u575b\u4e0a\u7684\u8bb2\u8ff0\u4ed6\u7684\u8bbe\u8ba1\u54f2\u5b66\uff0c\u5f00\u7bc7\u8bf4\u9053\uff1a\u5982\u679c\u8bbe\u8ba1\u6709\u4efb\u4f55\u529b\u91cf\u7684\u8bdd\uff0c\u90a3\u5c31\u662f\u6574\u5408\u7684\u529b\u91cf\u3002<\/p>\n<p>\u4e8b\u60c5\u7684\u8d77\u56e0\u6e90\u4e8e12\u5e74\u524dAlejandro\u66fe\u63a5\u5230\u7684\u4e00\u4e2a\u9879\u76ee\uff0c\u4ed6\u8981\u4e3a\u667a\u5229\u5317\u90e8\u4f0a\u57fa\u514b\u5e02\u4e2d\u5fc3\u975e\u6cd5\u5360\u636e\u4e86\u534a\u516c\u9877\u571f\u5730\u7684100\u4e2a\u5bb6\u5ead\u8bbe\u8ba1\u4e00\u5957\u793e\u4f1a\u4fdd\u969c\u6027\u4f4f\u623f\u3002\u800c\u5f97\u5230\u7684\u9884\u7b97\u662f1\u4e07\u7f8e\u5143\u30021\u4e07\u7f8e\u5143\u7684\u7528\u9014\uff0c\u5305\u62ec\u4e70\u5730\uff0c\u5efa\u623f\u5b50\uff0c\u4ee5\u53ca\u5efa\u76f8\u5173\u57fa\u7840\u8bbe\u65bd\u3002\u7edd\u5bf9\u7684\u8d44\u91d1\u532e\u4e4f\u8ba9\u4ed6\u63d0\u51fa\u4e86\u4e00\u4e2a\u7edd\u5999\u7684\u65b9\u6848\uff1a\u201c\u4e00\u4e2a\u666e\u901a\u4e2d\u4ea7\u5bb6\u5ead\u62e5\u670980\u5e73\u65b9\u7c73\u7684\u4f4f\u623f\u662f\u53ef\u63a5\u53d7\u7684\uff0c\u4f46\u5982\u679c\u8d44\u91d1\u4e0d\u591f\uff0c\u8fd9\u4e2a\u5bb6\u5ead\u53ef\u80fd\u53ea\u597d\u53bb\u4e7040\u5e73\u65b9\u7c73\u7684\u5c0f\u623f\u5b50\u3002\u5982\u679c\u6211\u4eec\u628a\u8fd9\u4e2a40\u5e73\u65b9\u7c73\u7684\u5c0f\u623f\u5b50\uff0c\u770b\u505a\u662f\u4e00\u4e2a80\u5e73\u65b9\u7c73\u7684\u201c\u597d\u623f\u5b50\u7684\u4e00\u534a\u201d\uff08half of a good house\uff09\uff0c\u6765\u5efa\u9020\u5e76\u63d0\u4f9b\u7ed9\u8fd9\u4e9b\u5bb6\u5ead\uff0c\u7ed9\u4e88\u8fd9\u4e9b\u5bb6\u5ead\u53e6\u591640\u5e73\u65b9\u7c73\u7684\u53ef\u62d3\u5c55\u7a7a\u95f4\uff0c\u90a3\u4e48\u8fd9\u65e0\u7591\u9f13\u52b1\u4e86\u8fd9\u4e9b\u5bb6\u5ead\u5728\u672a\u6765\u8d22\u529b\u8db3\u591f\u7684\u65f6\u5019\u201c\u6269\u5efa\u201d\u81ea\u5df1\u7684\u623f\u5b50\uff0c\u6210\u529f\u62e5\u6709\u4e00\u4e2a\u5b8c\u6574\u7684\u597d\u623f\u5b50\u3002\u201d\uff08\u6458\u81ea\u77e5\u4e4e\u539f\u6587\uff09\u5f88\u60ca\u559c\u7684\u662f\uff0c \u8fd9\u4e9b\u5bb6\u5ead\u5927\u90e8\u5206\u90fd\u540c\u610f\u4e86\u5174\u5efa\uff0c \u4e0d\u4ec5\u540c\u610f\uff0c \u5728\u4e3b\u52a8\u52a9\u529b\u4fee\u5efa\u5de5\u4f5c\uff0c \u56e0\u4e3a\u672a\u6765\u7684\u53e6\u4e00\u534a\u4e5f\u662f\u8981\u4ed6\u4eec\u81ea\u5df1\u5efa\u7684\uff0c \u8fd9\u662f\u4ed6\u4eec\u81ea\u5df1\u7684\u623f\u5b50\u3002\u6bcf\u6237\u5bb6\u5ead\u60f3\u5230\u7684\u4e0d\u518d\u662f\u5982\u4f55\u548c\u653f\u5e9c\u62c9\u952f\u8c08\u5224\uff0c \u800c\u662f\u5bf9\u672a\u6765\u81ea\u5df1\u7684\u623f\u5b50\u7684\u61a7\u61ac\u548c\u671f\u5f85\u3002\u4e00\u4e2a\u5f88\u7b80\u5355\u5374\u4e5f\u66f4\u6709\u4eba\u60c5\u5473\u7684\u89d2\u5ea6\uff0c \u201c\u64ac\u52a8\u4e86\u4eba\u4eec\u7684\u81ea\u53d1\u6027\uff0c\u6211\u8ba4\u4e3a\uff0c\u8fd9\u5c31\u662f\u4e00\u79cd\u201c\u6574\u5408\u201d\uff0c\u5c31\u662f\u201c\u8bbe\u8ba1\u7684\u529b\u91cf\u201d\u201d\u3002<\/p>\n<p>\u7ecf\u6d4e\u5b66\u7684\u5c0f\u4f19\u4f34\u53ef\u80fd\u5f88\u5feb\u5c31\u770b\u51fa\u6765\u4e86\uff0c \u8fd9\u8c8c\u4f3c\u5c31\u662f\u6240\u8c13\u7684\u201c\u5916\u90e8\u5229\u76ca\u5185\u90e8\u5316\u201d\u7684\u4e00\u4e2a\u66f4\u7ecf\u5178\u7684\u4f8b\u5b50\u561b\u3002 \u5c0f\u5230\u591a\u4eba\u5408\u79df\u623f\u95f4\u7684\u6253\u626b\u536b\u751f\uff0c \u5de5\u4f5c\u5728\u5927\u516c\u53f8\u6210\u4e3a\u5176\u4e2d\u4e00\u9897\u9f7f\u8f6e\uff0c \u5927\u5230\u4fdd\u62a4\u5730\u7403\u751f\u6001\u73af\u5883\uff0c \u201c\u642d\u4fbf\u8f66\u884c\u4e3a\u201d\u65e0\u6240\u4e0d\u5728\uff0c \u201c\u516c\u5730\u60b2\u5267\u201d\u4e5f\u4e0d\u65ad\u4e0a\u6f14\u3002 \u975e\u8981\u6df1\u7a76\u539f\u56e0\u7684\u8bdd\uff0c \u4e66\u4e0a\u8bf4\u662f\u56e0\u4e3a\u201c\u516c\u5171\u7269\u54c1\u4ea7\u6743\u96be\u4ee5\u754c\u5b9a\u201d\uff0c \u6211\u8bf4\uff0c \u4e5f\u4e0d\u8fc7\u5c31\u662f\u5f53\u89c4\u6a21\u5927\u4e86\uff0c \u6d89\u53ca\u7684\u4eba\u591a\u4e86\uff0c \u5c31\u6162\u6162\u5931\u53bb\u4e86\u5f52\u5c5e\u611f\u7f62\u4e86\u3002\u5f52\u5c5e\u611f\uff0c \u4e00\u4e2a\u5e26\u7740\u6e29\u5ea6\u7684\u8bcd\u8bed\u3002 \u6211\u4e0d\u60f3\u53bb\u6df1\u5165\u63a2\u8ba8\u201c\u62e5\u6709\u201d\uff08\u6240\u8c13\u7684\u201c\u4ea7\u6743\u201d\uff09\u548c\u201c\u5f52\u5c5e\u201d\u5230\u5e95\u533a\u522b\u5728\u54ea\u91cc\uff0c \u7b80\u5355\u6765\u8bb2\uff0c \u4f60\u201c\u62e5\u6709\u7684\u201d\u5e76\u4e0d\u4e00\u5b9a\u80fd\u5e26\u7ed9\u4f60\u201c\u5f52\u5c5e\u201d\u611f\uff0c \u800c\u5f52\u5c5e\uff0c \u81ea\u613f\u4ed8\u51fa\uff0c \u672c\u8eab\u5c31\u6cbe\u7740\u627f\u8bfa\u4e0e\u8d23\u4efb\u7684\u5473\u9053\u3002<\/p>\n<p>\u201c\u62e5\u6709\u597d\u623f\u5b50\u7684\u4e00\u534a\uff08half of a good house\uff09\u201d\u8fd9\u7b80\u5355\u7684\u53e3\u53f7\u6ca1\u6709\u89e3\u51b3\u4efb\u4f55\u8d44\u6e90\u7a00\u7f3a\u7684\u95ee\u9898\uff0c \u800c\u53ea\u662f\uff0c \u7ed9\u4e86\u4f0a\u57fa\u514b\u5e02\u4e2d\u5fc3\u7684\u5c45\u6c11\u4eec\u91cd\u65b0\u6e05\u6670\u7684\u5f52\u5c5e\u611f\uff0c \u623f\u5b50\u662f\u81ea\u5df1\u672a\u6765\u597d\u623f\u5b50\u7684\u4e00\u534a\uff0c \u6211\u4f1a\u8ba4\u771f\u7c89\u5237\uff0c \u4ed4\u7ec6\u6253\u626e\uff0c \u6089\u5fc3\u51c6\u5907\u88c5\u9970\u90a3\u53e6\u4e00\u534a\u7684\u5230\u6765\u2026\u2026\u6ca1\u6709\u4e00\u4e2a\u80fd\u89e3\u51b3\u6240\u6709\u95ee\u9898\u7684\u7b54\u6848\uff0c \u4f46\u662f\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u66f4\u52a0\u6253\u52a8\u7684\u89d2\u5ea6\uff0c \u4e00\u4e2a\u66f4\u6709\u4eba\u60c5\u5473\u513f\u7684\u89d2\u5ea6\uff0c \u6bd5\u7adf\u6240\u6709\u95ee\u9898\u6700\u7ec8\u5f52\u6839\u7ed3\u5e95\u90fd\u56de\u5230\u4eba\uff0c \u800c\u4eba\uff0c \u56e0\u4e3a\u66fe\u88ab\u6e29\u67d4\u76f8\u5f85\u7684\u5f52\u5c5e\uff0c \u66f4\u503e\u5411\u6539\u53d8\u3002<\/p>\n<p>\u7c7b\u4f3c\u5730\uff0c \u7cbe\u81f4\u6709\u5fc3\u65f3\u8bbe\u8ba1\uff0c \u771f\u5b9e\u5ba2\u89c2\u7684\u6444\u5f71\uff0c \u590d\u6742\u800c\u9971\u6ee1\u7684\u620f\u5267\uff0c \u8fd9\u4e9b\u827a\u672f\u89e3\u51b3\u4e0d\u4e86\u5927\u90e8\u5206\u73b0\u5b9e\u95ee\u9898\uff0c \u5374\u82e6\u52e4\u4e8e\u4eba\u5fc3\u3002 \u4ed6\u4eec\u52aa\u529b\u63d0\u51fa\u4e00\u4e2a\u89d2\u5ea6\uff0c \u65e0\u8c13\u5bf9\u4e0e\u9519\uff0c \u66f4\u6ca1\u529e\u6cd5\u7528\u9ad8\u4e2d\u4e60\u60ef\u7684\u5224\u5206\u6807\u51c6\u53c2\u8003\u7b54\u6848\u6765\u5ba1\u5224\uff0c \u5f80\u5f80\u51fa\u5176\u4e0d\u610f\uff0c \u5f80\u5f80\u4fdd\u5b88\u8bef\u89e3\uff0c \u53ef\u4e5f\u56e0\u90a3\u66f4\u591a\u6570\u7684\u7406\u89e3\u548c\u611f\u52a8\u800c\u5b75\u80b2\u7740\u6539\u53d8\u3002\u5f88\u96be\u8bb2\u827a\u672f\u7684\u610f\u4e49\u7a76\u7adf\u662f\u4ec0\u4e48\uff0c \u4f46\u5982\u679c\u4e00\u5b9a\u8981\u7528\u4e00\u53e5\u8bdd\u6765\u6982\u62ec\uff0c \u6211\u60f3\u662f\uff1a<\/p>\n<p>\u6211\u4e5f\u4f1a\u60f3\u6210\u4e3a\u6e29\u67d4\u7684\u4eba\uff0c \u56e0\u4e3a\u66fe\u88ab\u6e29\u67d4\u7684\u4eba\u90a3\u6837\u5bf9\u5f85\uff0c \u6df1\u6df1\u4e86\u89e3\u90a3\u79cd\u88ab\u6e29\u67d4\u76f8\u5f85\u7684\u611f\u89c9\u3002<\/p>\n<p>\u6216\u8bb8\u8fd9\u5c31\u662f\u6539\u53d8\u7684\u521d\u8877\u5427\u3002<\/p>\n<p>\u4e09\u3001<\/p>\n<p>\u201cOne Piece\u5230\u5e95\u5b58\u4e0d\u5b58\u5728\uff0c\u6211\u4e0d\u60f3\u77e5\u9053\u3002\u201d<\/p>\n<p>\u300a\u6d77\u8d3c\u738b\u300b\u91cc\u9762\u63cf\u8ff0\u8fc7\u5f88\u591a\u4e0d\u540c\u8eab\u4e16\u80cc\u666f\u7684\u4f19\u4f34\u548c\u8def\u98de\u4e00\u8d77\u6218\u6597\u7684\u7cbe\u5f69\u5267\u60c5\uff0c \u4f46\u5bf9\u6211\u6765\u8bf4\u540c\u6837\u96be\u5fd8\u7684\uff0c \u8fd8\u6709\u53e6\u4e00\u5e55\uff0c \u5f53\u4e4c\u7d22\u666e\u95ee\u51a5\u738b\u96f7\u5229\uff0c \u201c\u90a3\u4e2a\u72ec\u4e00\u65e0\u4e8c\u7684\u5927\u79d8\u5b9dOne Piece\uff0c \u7a76\u7adf\u2026\u2026\u201d\uff0c \u8fd8\u6ca1\u7b49\u4e4c\u7d22\u666e\u8bf4\u5b8c\uff0c \u8def\u98de\u5927\u543c\u4e00\u58f0\uff0c \u8c01\u4e5f\u6ca1\u6709\u89c1\u8fc7\u8def\u98de\u8fd9\u6837\u4e25\u8083\u7684\u8868\u60c5\uff0c \u201c\u5b9d\u85cf\u5728\u54ea\u91cc\u6211\u4e0d\u60f3\u77e5\u9053\uff0c\u8fde\u5b9d\u85cf\u53c8\u6ca1\u6709\u6211\u4e5f\u4e0d\u60f3\u77e5\u9053\uff0c \u867d\u7136\u4ec0\u4e48\u90fd\u4e0d\u77e5\u9053\uff0c \u4f46\u662f\u5927\u5bb6\u90fd\u662f\u8fd9\u6837\u8d4c\u4e0a\u6027\u547d\u51fa\u6d77\u7684\uff0c \u8981\u662f\u5728\u8fd9\u91cc\u5c31\u88ab\u5927\u53d4\u900f\u9732\u4e86\u2026\u2026\u6211\u5c31\u4e0d\u5f53\u6d77\u8d3c\u4e86\u201d\u3002<\/p>\n<p>\u5bf9\u4e8e\u7ec8\u70b9\u548c\u610f\u4e49\u7684\u8ba8\u8bba\u4ece\u6765\u6ca1\u6709\u505c\u6b62\u8fc7\uff0c \u800c\u9ad8\u8003\uff0c \u5728\u5176\u91cd\u5927\u7684\u793e\u4f1a\u8d23\u4efb\u4e0b\u80cc\u8d1f\u4e86\u592a\u591a\u5851\u9020\u4e00\u751f\u3001\u51b3\u5b9a\u4e00\u751f\u7684\u540d\u58f0\uff0c \u53ef\u5c31\u50cf\u751f\u547d\u91cc\u5176\u4ed6\u91cd\u8981\u7684\u9009\u62e9\u4e00\u6837\uff0c \u542c\u8fc7\u638c\u58f0\uff0c \u8d70\u8fc7\u4f4e\u8c37\uff0c \u6211\u4eec\u4f9d\u65e7\u8981\u7ee7\u7eed\u4e0a\u8def\u3002\u610f\u4e49\u662f\u5f88\u79c1\u4eba\u7684\u4e1c\u897f\uff0c \u4f60\u505a\u4e0d\u5230\u8ba9\u522b\u4eba\u5e2e\u4f60\u751f\u6d3b\uff0c \u4e5f\u505a\u4e0d\u5230\u6309\u56fe\u7d22\u9aa5\u53bb\u53c2\u609f\u65c5\u884c\u7684\u610f\u4e49\uff0c \u5e0c\u5180\u7684\u5feb\u4e50\u4e5f\u8fdc\u8fdc\u4e0d\u540c\u4e8e\u4e16\u754c\u4e0a\u5176\u4ed6\u4efb\u4f55\u4eba\u3002 \u8fc7\u65e9\u5730\u63a5\u53d7\u4e86\u7ec8\u70b9\u7684\u6a21\u6837\u800c\u64e6\u8eab\u800c\u8fc7\u65e0\u6570\u6216\u7f8e\u5999\u6216\u82e6\u6da9\u5374\u90fd\u7cbe\u5f69\u65e0\u6bd4\u7684\u53ef\u80fd\u6027\uff0c \u6216\u8bb8\u6b63\u662f\u6240\u8c13\u7684\u201c\u7ec8\u70b9\u201d\u6700\u5927\u7684\u8bc5\u5492\u4e86\u5427\u3002<\/p>\n<p>\u51a5\u738b\u96f7\u5229\u5e7d\u5e7d\u5730\u95ee\u9053\uff0c \u201c\u4f1f\u5927\u822a\u8def\u7684\u8270\u9669\u8fdc\u8fdc\u8d85\u51fa\u4e86\u4f60\u4eec\u7684\u60f3\u8c61\uff0c \u654c\u4eba\u90fd\u5f88\u5f3a\u608d\uff0c \u4f60\u529e\u5f97\u5230\u5417\uff1f\u7edf\u6cbb\u8fd9\u7247\u5927\u6d77\u3002\u201d\uff0c \u8def\u98de\u770b\u7740\u96f7\u5229\uff0c \u54a7\u5f00\u4e00\u4e2a\u7b11\u5bb9\uff0c \u201c\u6211\u624d\u4e0d\u8981\u7edf\u6cbb\u5462\uff0c \u8fd9\u7247\u5927\u6d77\u4e0a\u6700\u81ea\u7531\u7684\u4eba\uff0c \u5c31\u662f\u6d77\u8d3c\u738b\uff01\u201d<\/p>\n<p>\u65f6\u95f4\u4eff\u4f5b\u505c\u6b62\u5728\u8fd9\u4e00\u523b\uff0c \u601d\u7eea\u5b9b\u82e5\u5377\u5165\u4e00\u5e55\u5e55\u7535\u5f71\u573a\u666f\u822c\u8df3\u8dc3\uff0c \u8083\u7acb\u5728\u821e\u53f0\u7684\u6b63\u4e2d\u592e\u770b\u7740\u706f\u5149\u6162\u6162\u805a\u62e2\uff0c \u5149\u811a\u6e38\u8d70\u5728\u67d4\u548c\u7684\u68ee\u6797\uff0c \u518d\u8df3\u5165\u73af\u6e38\u4e16\u754c\u7684\u6d77\u8d3c\u8239\u628a\u624b\u81c2\u9ad8\u9ad8\u4e3e\u8d77\u2026\u2026\u60f3\u8d77\u4e86\u597d\u591a\u597d\u591a\uff0c \u611f\u6168\u4e86\u597d\u591a\u597d\u591a\uff0c \u7ec8\u4e8e\u56de\u8fc7\u795e\uff0c \u624d\u604d\u7136\u81ea\u5df1\u6709\u591a\u4e48\u5e78\u8fd0\u3002 \u9ad8\u4e2d\u7684\u5b66\u4e60\u8bfe\u4f59\u751f\u6d3b\u8ba9\u6211\u6210\u957f\u4e86\u592a\u591a\uff0c \u5728\u7701\u5b9e\u4e5f\u8ba9\u6211\u8ba4\u8bc6\u4e86\u53ef\u4ee5\u4e00\u8d77\u6492\u5a07\u6253\u8be8\u5f88\u4e45\u5f88\u4e45\u7684\u670b\u53cb\u3002 \u4f46\u540c\u65f6\u6211\u4e5f\u6162\u6162\u610f\u8bc6\u5230\uff0c \u9762\u5411\u9ad8\u8003\u7684\u6559\u80b2\u4eff\u4f5b\u65e0\u53ef\u907f\u514d\u5730\u8ba9\u6211\u4eec\u66f4\u5bb9\u6613\u63a5\u53d7\u7ebf\u6027\u56e0\u679c\u7684\u4e16\u754c\u89c2\uff0c \u5b58\u5728\u9762\u9762\u4ff1\u5230\u7684\u6807\u51c6\u7b54\u6848\u548c\u4e00\u79cd\u98ce\u5149\u5374\u9053\u542c\u9014\u8bf4\u7684\u751f\u6d3b\u3002<\/p>\n<p>\u8fd9\u7bc7\u968f\u7b14\uff0c\u8bb0\u4e3a\u6211\u5bf9\u6211\u9ad8\u4e2d\u601d\u7ef4\u7684\u5ba1\u5224\u3002 \u5199\u7ed9\u9ad8\u8003\u7ed3\u675f\u4e09\u5e74\u540e\u7684\u81ea\u5df1\uff0c \u4e5f\u5199\u7ed9\u6240\u6709\u521a\u521a\u7ed3\u675f\u9ad8\u8003\u4e43\u81f3\u5373\u5c06\u5f00\u59cb\u9ad8\u4e2d\u751f\u6d3b\u7684\u5c0f\u4f19\u4f34\u4eec\u3002<\/p>\n<p>\u8bf4\u5b9e\u8bdd\uff0c \u5728\u6211\u521a\u4e0a\u9ad8\u4e2d\u90a3\u5e74\u7ea7\uff0c \u8111\u5b50\u91cc\u9664\u4e86\u8dd1\u8dd1\u5361\u4e01\u8f66\uff0c \u5c31\u662f\u602a\u7269\u730e\u4eba\u4e86\u5427\u3002 \u65e5\u5b50\u8fc7\u5f97\u7279\u522b\u6162\uff0c \u8c01\u4f1a\u82b1\u529f\u592b\u60f3\u8fd9\u4e9b\u6298\u817e\u5462\uff01<\/p>\n<p>\u867d\u7136\u4e00\u76f4\u4e0d\u64c5\u4e8e\u6587\u5b57\uff0c \u5374\u5f88\u5e86\u5e78\u81ea\u5df1\u8fd8\u5b58\u7559\u7740\u5bf9\u6587\u5b57\u7684\u7737\u604b\u3002\u4e5f\u662f\u60f3\u770b\u770b\u548c\u6587\u5b57\u91cc\u7684\u81ea\u5df1\u4e00\u8d77\u6210\u957f\u5427\u3002 <\/p>\n<p>\u65b0\u4e16\u76f8\u6700\u8fd1\u4e00\u7bc7\u5173\u4e8e\u9ad8\u8003\u7684\u6587\u7ae0\u5f88\u6709\u610f\u601d\uff0c \u8fd8\u8bb0\u5f97\u91cc\u9762\u5f00\u5934\u7684\u4e00\u4e2a\u63d0\u95ee\uff0c \u8fc7\u53bb\u5f88\u591a\u5e74\uff0c\u6211\u771f\u7684\u4ece\u9ad8\u8003\u4e2d\u593a\u56de\u81ea\u5df1\u7684\u63a7\u5236\u6743\u5417\uff1f<\/p>\n<p>Yes, finally.<\/p>"},{"title":"socket.io\u5f00\u53d1\u591a\u4eba\u804a\u5929\u5ba4\u6559\u7a0b","link":"http:\/\/chocoluffy.com\/2016\/05\/23\/socket-io%E5%BC%80%E5%8F%91%E5%A4%9A%E4%BA%BA%E8%81%8A%E5%A4%A9%E5%AE%A4%E6%95%99%E7%A8%8B\/","guid":"http:\/\/chocoluffy.com\/2016\/05\/23\/socket-io\u5f00\u53d1\u591a\u4eba\u804a\u5929\u5ba4\u6559\u7a0b\/","pubDate":"2016-05-24T02:43:41.000Z","categories":["AWS","nodejs","web design","\u6280\u672f"],"author":"Shunzhe Yu","thumbnail":"","description":"<p>\u7528socket.io\u642d\u914dexpress\u5199\u7684\u4e00\u4e2a\u591a\u4eba\u804a\u5929\u5ba4\u5e94\u7528\uff0c \u540c\u65f6\u501f\u8fd9\u4e2a\u673a\u4f1a\u590d\u4e60\u4e86\u4e00\u4e0bsocket\u53caTCP\/IP\u7684\u4e00\u4e9b\u7ec6\u8282\u77e5\u8bc6\uff0c \u5728UI\u4e0a\u7528jquery\uff0c \u7b80\u6d01\u800c\u5feb\u901f\u5730\u5b8c\u6210\u4e00\u4e9b\u57fa\u7840\u524d\u7aef\u6837\u5f0f\u7684\u5f00\u53d1\uff0c \u5f00\u53d1\u65f6\u7528nodemon\u548cbrowser-sync\u6765\u8f85\u52a9\u5f00\u53d1\u6d41\u7a0b\u3002<a href=\"http:\/\/52.20.64.23\/chatroom\">\u5728\u7ebfDemo-\u7f51\u9875\u7248<\/a>, <a href=\"https:\/\/github.com\/chocoluffy\/chatroom\">github\u6e90\u4ee3\u7801<\/a>, \u6b22\u8fce\u63d0\u4ea4bug issue\u6216\u8005pull request~<\/p>","content":"<p>\u7528socket.io\u642d\u914dexpress\u5199\u7684\u4e00\u4e2a\u591a\u4eba\u804a\u5929\u5ba4\u5e94\u7528\uff0c \u540c\u65f6\u501f\u8fd9\u4e2a\u673a\u4f1a\u590d\u4e60\u4e86\u4e00\u4e0bsocket\u53caTCP\/IP\u7684\u4e00\u4e9b\u7ec6\u8282\u77e5\u8bc6\uff0c \u5728UI\u4e0a\u7528jquery\uff0c \u7b80\u6d01\u800c\u5feb\u901f\u5730\u5b8c\u6210\u4e00\u4e9b\u57fa\u7840\u524d\u7aef\u6837\u5f0f\u7684\u5f00\u53d1\uff0c \u5f00\u53d1\u65f6\u7528nodemon\u548cbrowser-sync\u6765\u8f85\u52a9\u5f00\u53d1\u6d41\u7a0b\u3002<a href=\"http:\/\/52.20.64.23\/chatroom\" target=\"_blank\" rel=\"external\">\u5728\u7ebfDemo-\u7f51\u9875\u7248<\/a>, <a href=\"https:\/\/github.com\/chocoluffy\/chatroom\" target=\"_blank\" rel=\"external\">github\u6e90\u4ee3\u7801<\/a>, \u6b22\u8fce\u63d0\u4ea4bug issue\u6216\u8005pull request~<\/p>\n<a><\/a>\n<p><img src=\"http:\/\/ac-tc2vc5tu.clouddn.com\/1a5c1f59080e5cc1.png\" alt=\"socket.io\"><\/p>\n<h2>\u4ec0\u4e48\u662fsocket?<\/h2><p>socket\u662f\u5bf9TCP\/IP\u534f\u8bae\u7684\u5c01\u88c5\uff0c \u672c\u8eab\u662f\u4e00\u4e2a\u8c03\u7528\u63a5\u53e3\uff0c \u4e5f\u5c31\u662f\u6211\u4eec\u5e38\u8bf4\u7684API\uff0c \u7528socket\u53ef\u4ee5\u8ba9\u7a0b\u5e8f\u5458\u66f4\u65b9\u4fbf\u7684\u4f7f\u7528TCP\/IP\u534f\u8bae\u800c\u5df2\u3002 <\/p>\n<p>\u5728\u5b66\u4e60C\u8bed\u8a00(csc209)\u7684\u65f6\u5019\u5927\u5bb6\u63a5\u89e6\u5230\u7684socket\u7684\u63a5\u53e3\u51fd\u6570\u6bd4\u5982<code>create\/listen\/connect\/accept\/send\/read\/write<\/code>\uff0c \u5b9e\u9645\u4e0a\u6b63\u662f\u9488\u5bf9TCP\u7f16\u7a0b\u7684\u63a5\u53e3\uff0c \u5728\u8bfe\u7a0b\u91cc\u6211\u4eec\u7528C\u8bed\u8a00\u6765\u5b9e\u73b0TCP\u6700\u57fa\u7840\u7684\u4e00\u4e2asocket\u94fe\u63a5\uff0c \u76d1\u542c\uff0c \u5305\u62ecserver-client\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u540c\u6837\u7684\uff0c socket\u8fd9\u4e2a\u8c03\u7528\u63a5\u53e3\u4e5f\u53ef\u4ee5\u7528java, python\u548cnodejs\u4efb\u4f55\u540e\u7aef\u8bed\u8a00\u6765\u5b9e\u73b0\uff0c \u4e5f\u4f1a\u51fa\u73b0\u5728\u5404\u79cd\u5404\u6837\u9700\u8981\u670d\u52a1\u5668\u7aef\u548c\u5ba2\u6237\u7aef\u901a\u4fe1\u7684\u5e94\u7528\u4e2d\u3002<\/p>\n<p>\u800c\u4ec0\u4e48\u662fTCP\u5462\uff1f<\/p>\n<p>Transmission Control Protocol (TCP) \u5c31\u662f\u5176\u4e2d\u53d1\u9001\u6587\u672c\u4fe1\u606f\u7684<strong>\u89c4\u5219\u89c4\u8303<\/strong>\u800c\u5df2\u3002 TCP\u4f9d\u8d56\u66f4\u5e95\u5c42\u7684\u51fd\u6570\u5b9e\u73b0\u6765\u5728\u7f51\u7edc\u4e0a\u4f20\u8f93binary data\u3002 \u8fd9\u91cc\u548c\u5927\u5bb6\u4ecb\u7ecdtelnet\\putty\u8fd9\u4e9b\u5229\u7528TCP\u5728command line\u4e0a\u5e2e\u52a9\u4f60\u53d1\u9001\u548c\u63a5\u53d7\u7eaf\u6587\u672c\u6d88\u606f\u7684\u5e94\u7528\uff0c \u4f60\u53ef\u4ee5\u5229\u7528telnet\u6765\uff0c \u6bd4\u5982\uff0c \u53d1\u9001\u6d88\u606f\u5230google.com\uff1a<code>telnet google.com 80<\/code> \u5728\u7aef\u53e380\u8fde\u63a5\u5230google.com(80\u9ed8\u8ba4\u7ed9\u7f51\u7edc\u8bf7\u6c42)\u3002\u6211\u4eec\u5f53\u7136\u4e0d\u4f1a\u968f\u4fbf\u53d1\u6587\u672c\u6d88\u606f\u7ed9google.com\uff0c \u56e0\u4e3a\u6211\u4eec\u77e5\u9053google.com\u4e0d\u4f1a\u63a5\u53d7\u968f\u610f\u7684\uff0c \u6ca1\u6709\u7ed3\u6784\u7684\u6587\u672c\u8bf7\u6c42\u3002 \u662f\u7684\uff0c \u6211\u4eec\u9700\u8981\u4e00\u4e2a<strong>\u6807\u51c6(protocol)<\/strong>\u6765\u89c4\u8303\u4ea4\u6d41\u7684\u65b9\u5f0f\u3002\u6211\u4eec\u5728\u6d4f\u89c8\u5668\u8f93\u51fa<a href=\"http:\/\/google.com%EF%BC%8C\/\" target=\"_blank\" rel=\"external\">http:\/\/google.com\uff0c<\/a> \u8fd9\u610f\u5473\u7740\uff1a<\/p>\n<ul><li>\u5728port 80\u7528TCP\u534f\u8bae\u8fde\u63a5google.com\u7684\u670d\u52a1\u5668\u3002<\/li>\n<li>\u8bf7\u6c42\u8fd4\u56de\u8d44\u6e90\u201c\uff0f\u201d\uff08\u9ed8\u8ba4\u8d44\u6e90\uff09\u3002<\/li>\n<li>\u5c06\u8bf7\u6c42\u7528http\uff08hypertext transfer protocol\uff09\u7684\u5f62\u5f0f\u6765\u89c4\u8303\u3002<\/li>\n<\/ul><h2>\u4ec0\u4e48\u662fsocket.io?<\/h2><p>\u201cSocket.IO goes a step beyond just providing an easy-to-use and more robust API on top<br>of web sockets. It also provides the ability to seamlessly use other real-time protocols if WebSockets are not available. For example, it will fall back on JSON long polling in the absence of WebSocket support.\u201d from Rohit Rai<\/p>\n<p>\u7b80\u5355\u6765\u8bf4\uff0csocket.io\u6765socket\u672c\u8eab\u7684\u63a5\u53e3\u51fd\u6570\u4e0a\u518d\u62bd\u8c61\u4e86\u4e00\u5c42\uff0c \u8ba9\u7a0b\u5e8f\u5458\u53ef\u4ee5\u4e13\u6ce8\u5e94\u7528\u903b\u8f91\u7684\u5f00\u53d1\uff0c \u800c\u7531socket.io\u6765\u64cd\u4f5c\u5e95\u5c42\u7684\u51fd\u6570\u8c03\u7528\u548c\u4f18\u5316\uff0c \u6bd4\u5982\u6709\u4e9b\u65f6\u5019\uff0c \u7531\u4e8e\u6d4f\u89c8\u5668\u7684\u539f\u56e0\u4e0d\u80fd\u4f7f\u7528web socket\u65f6\uff0c \u53ef\u4ee5\u9ed8\u8ba4\u7528long polling\u6765\u8fbe\u5230\u540c\u6837\u7684\u6548\u679c\u3002<\/p>\n<p>\u5728socket.io\u51fa\u73b0\u4e4b\u524d\uff0c\u6211\u4eec\u4f1a\u91c7\u7528\u5f88\u591a\u7684hack\u6765\u89e3\u51b3\u4e00\u4e2a\u95ee\u9898\uff1a<strong>\u600e\u6837\u5728server\u548cclient\u7aef\u66f4\u6709\u6548\u7387\u5730\u53cc\u5411\u4f20\u9012\u4fe1\u606f\uff1f<\/strong>\u6bd4\u5982\u4e0a\u6587\u63d0\u5230\u7684long polling,  client\u7aef\u53d1\u9001XHR\u8bf7\u6c42\uff0c \u7136\u540e\u5728server\u7aef\u6302\u4f4f\uff0c \u76f4\u5230server\u6536\u5230\u6570\u636e\uff0c \u5c31\u56de\u4f20\u6570\u636e\uff0c \u8fd8\u662f\u6bd4\u8f83\u5e38\u89c1\u7684hack\u3002<\/p>\n<p>\u76f4\u5230HTML5\u7684\u5927\u89c4\u6a21\u4f7f\u7528\uff0c \u51fa\u73b0\u4e86\u4e24\u79cd\u4ece\u670d\u52a1\u5668\u7aef\u63a8\u9001\u6570\u636e\u5230\u5ba2\u6237\u7aef\u7684\u65b0\u65b9\u6cd5\uff0c \u4e00\u4e2a\u662fServer-Sent Events (SSE)\uff0c \u53e6\u4e00\u4e2a\u662f\u4eca\u5929\u7684\u4e3b\u89d2\uff0c \u652f\u6301\u53cc\u5411\u901a\u4fe1\u7684WebSockets.<\/p>\n<h2>\u600e\u4e48\u7528socket.io?<\/h2><h3>http\u6a21\u5757\u5b9e\u73b0<\/h3><p>\u4e0b\u9762\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660esocket\u7684\u4f7f\u7528\uff0c \u5f88\u660e\u786e\uff0c \u5728\u670d\u52a1\u5668\u6bb5\u5f53\u6709\u65b0\u7684\u8fde\u63a5\u7684\u65f6\u5019\uff0c \u5411\u5ba2\u6237\u7aef\u53d1\u9001\u4e00\u4e2a\u201dgreeting-from-server\u201d\u7684\u6d88\u606f\uff0c \u540c\u65f6\u8fd8\u76d1\u542c\u5ba2\u6237\u7aef\u53d1\u6765\u7684\u201dgreeting-from-client\u201d\u7684\u4e8b\u4ef6\uff0c\u5c06\u6d88\u606f\u6253\u5370\u5728console\u91cc\u9762\u3002 <\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><span>20<\/span><br><span>21<\/span><br><span>22<\/span><br><span>23<\/span><br><span>24<\/span><br><span>25<\/span><br><span>26<\/span><br><span>27<\/span><br><span>28<\/span><br><\/pre><\/td><td><pre><span><span>\/\/ plain http's version of server.js<\/span><\/span><br><span><span>var<\/span> http = <span>require<\/span>(<span>'http'<\/span>);<\/span><br><span>\tsocketIO = <span>require<\/span>(<span>'socket.io'<\/span>);<\/span><br><span>\tfs = <span>require<\/span>(<span>'fs'<\/span>);<\/span><br><span><\/span><br><span><span>\/\/ if using express framework, we can define router easier!<\/span><\/span><br><span><span>var<\/span> server = http.createServer(<span><span>function<\/span>(<span>req, res<\/span>)<\/span>{<\/span><br><span>\tfs.readFile(__dirname + <span>'\/index.html'<\/span>, <span><span>function<\/span>(<span>err, data<\/span>)<\/span>{<\/span><br><span>\t\tres.writeHead(<span>200<\/span>);<\/span><br><span>\t\tres.end(data);<\/span><br><span>\t});<\/span><br><span>});<\/span><br><span><\/span><br><span><span>\/\/ The above code is used for create a server to serve the static index.html file under the current directory. The following part is the main idea of how to use socket.io to construct and listen to events.<\/span><\/span><br><span>server.listen(<span>3000<\/span>);<\/span><br><span><span>console<\/span>.log(<span>'listen on http:\/\/localhost:3000'<\/span>);<\/span><br><span><\/span><br><span>io = socketIO(server);<\/span><br><span><\/span><br><span>io.on(<span>'connection'<\/span>, <span><span>function<\/span>(<span>socket<\/span>)<\/span>{<\/span><br><span>\tsocket.emit(<span>'greeting-from-server'<\/span>, {<\/span><br><span>\t\tgreeting: <span>'Hello client!'<\/span><\/span><br><span>\t});<\/span><br><span><\/span><br><span>\tsocket.on(<span>'greeting-from-client'<\/span>, <span><span>function<\/span>(<span>msg<\/span>)<\/span>{<\/span><br><span>\t\t<span>console<\/span>.log(msg);<\/span><br><span>\t});<\/span><br><span>});<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><span>20<\/span><br><\/pre><\/td><td><pre><span><span>&lt;!-- client side index.html  --&gt;<\/span><\/span><br><span><span>&lt;!DOCTYPE html&gt;<\/span><\/span><br><span><span>&lt;<span>html<\/span>&gt;<\/span><\/span><br><span>    <span>&lt;<span>head<\/span>&gt;<\/span><\/span><br><span>    <span>&lt;\/<span>head<\/span>&gt;<\/span><\/span><br><span>    <span>&lt;<span>body<\/span>&gt;<\/span><\/span><br><span>        <span>&lt;<span>script<\/span> <span>src<\/span>=<span>\"\/socket.io\/socket.io.js\"<\/span>&gt;<\/span><span><\/span><span>&lt;\/<span>script<\/span>&gt;<\/span><\/span><br><span>        <span>&lt;<span>script<\/span>&gt;<\/span><span><\/span><br><span>            <span>var<\/span> socket = io(<span>'http:\/\/localhost:3000'<\/span>);<\/span><br><span>            socket.on(<span>'greeting-from-server'<\/span>, <span><span>function<\/span> (<span>message<\/span>) <\/span>{<\/span><br><span>                <span>document<\/span>.body.appendChild(<\/span><br><span>                    <span>document<\/span>.createTextNode(message.greeting)<\/span><br><span>                );<\/span><br><span>                socket.emit(<span>'greeting-from-client'<\/span>, {<\/span><br><span>                    greeting: <span>'Hello Server'<\/span><\/span><br><span>                });<\/span><br><span>            });<\/span><br><span>        <\/span><span>&lt;\/<span>script<\/span>&gt;<\/span><\/span><br><span>    <span>&lt;\/<span>body<\/span>&gt;<\/span><\/span><br><span><span>&lt;\/<span>html<\/span>&gt;<\/span><\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>\u4ee3\u7801\u5f88\u7b80\u6d01\u3002\u4ee5\u4e0a\u662f\u7528node\u539f\u751f\u7684http\u6a21\u5757\u6765\u642d\u5efa\u7684\u672c\u5730\u670d\u52a1\u5668\uff0c \u8fd8\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528express\u8fd9\u4e2a\u6700\u8d1f\u76db\u540d\u7684node\u6846\u67b6\u4e4b\u4e00\u6765\u91cd\u65b0\u5b9e\u73b0\u4e00\u4e0b\u76f8\u540c\u7684\u903b\u8f91\u3002<\/p>\n<h3>Express\u6a21\u5757\u5b9e\u73b0<\/h3><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><span>20<\/span><br><span>21<\/span><br><span>22<\/span><br><span>23<\/span><br><span>24<\/span><br><\/pre><\/td><td><pre><span><span>\/\/ express's version of server.js<\/span><\/span><br><span><span>var<\/span> express = <span>require<\/span>(<span>'express'<\/span>),<\/span><br><span>    app = express(),<\/span><br><span>    http = <span>require<\/span>(<span>'http'<\/span>),<\/span><br><span>    socketIO = <span>require<\/span>(<span>'socket.io'<\/span>),<\/span><br><span>    server, io;<\/span><br><span><\/span><br><span>app.get(<span>'\/'<\/span>, <span><span>function<\/span> (<span>req, res<\/span>) <\/span>{<\/span><br><span>  res.sendFile(__dirname + <span>'\/index.html'<\/span>);<\/span><br><span>});<\/span><br><span><\/span><br><span>server = http.Server(app);<\/span><br><span>server.listen(<span>5000<\/span>);<\/span><br><span>io = socketIO(server);<\/span><br><span><\/span><br><span>io.on(<span>'connection'<\/span>, <span><span>function<\/span> (<span>socket<\/span>) <\/span>{<\/span><br><span>  socket.emit(<span>'greeting-from-server'<\/span>, {<\/span><br><span>      greeting: <span>'Hello Client'<\/span><\/span><br><span>  });<\/span><br><span>  <\/span><br><span>  socket.on(<span>'greeting-from-client'<\/span>, <span><span>function<\/span> (<span>message<\/span>) <\/span>{<\/span><br><span>    <span>console<\/span>.log(message);<\/span><br><span>  });<\/span><br><span>});<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><blockquote>\n<p>Express is a collection of HTTP utilities and middleware that make it easier to use Node as a web server.<\/p>\n<\/blockquote>\n<p>\u7528<code>var app = express()<\/code>\u6765\u521b\u5efa\u4e00\u4e2aExpress\u5e94\u7528\uff0c\u5c06\u8fd9\u4e2aExpress app\u5f53\u4f5c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u5165HTTP\u6a21\u5757\u5f97\u5230\u672c\u5730\u7684\u7b80\u6613\u670d\u52a1\u5668\uff0cwe told Node that we wanted to use Express as our handler for HTTP requests. \u800c\u8fd9\u4e2a\u670d\u52a1\u5668\u7684\u4f5c\u7528\u662f\u5728\u63a5\u6536\u5230\u5bf9\u201c\uff0f\u201d\u9ed8\u8ba4\u8d44\u6e90\u7684\u8bf7\u6c42\u65f6\uff0c \u5c06index.html\u6587\u4ef6\u4f20\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u7684\u6d4f\u89c8\u5668\u4e0a\u663e\u793a\u51fa\u5185\u5bb9\u3002<\/p>\n<p>Next, we passed the HTTP server directly to the SocketIO method exactly as we would have if we were using a nonExpress HTTP server. Socket.IO took the server instance to listen for new socket connections on it. <\/p>\n<p>\u5176\u4e2d\u4e00\u4e2a\u5c0f\u7ec6\u8282\uff1a\u7528 <code>emit<\/code> \u6765\u4f20\u8f93named message, \u7528 <code>send<\/code> \u6765\u4f20\u8f93a message without name.<\/p>\n<h2>\u591a\u4eba\u5728\u7ebf\u804a\u5929\u5ba4<\/h2><p>\u4e0b\u9762\u662f\u5bf9\u4ee5\u4e0a\u5e94\u7528\u7684\u4e00\u4e2a\u7b80\u5355\u62d3\u5c55\u3002\u4f7f\u7528\u4e00\u4e2a\u8f6e\u64ad(broadcasting)\u7684\u65b9\u5f0f\uff0c \u5c06\u5ba2\u6237\u7aef\u4f20\u6765\u7684\u6d88\u606f\u663e\u793a\u7ed9\u6bcf\u4e00\u4e2a\u5728\u7ebf\u7684\u7528\u6237\u3002<\/p>\n<p><a href=\"https:\/\/github.com\/chocoluffy\/chatroom\" target=\"_blank\" rel=\"external\">github\u6e90\u4ee3\u7801    <\/a><\/p>\n<p><a href=\"http:\/\/52.20.64.23\/chatroom\" target=\"_blank\" rel=\"external\">\u5728\u7ebfDemo-\u7f51\u9875\u7248<\/a><\/p>\n<p>\u5728\u624b\u673a\u4e0a\u4e5f\u662f\u53ef\u4ee5\u7528\u7684\uff0c \u4e0d\u8fc7UI\u6ca1\u6709\u4e13\u95e8\u9488\u5bf9\u79fb\u52a8\u7aef\u4f18\u5316\uff0c \u4f1a\u6709\u70b9\u7cd7\u7684\u611f\u89c9\ud83d\ude2d\u3002\u6709bug\u6c47\u62a5\u5230Issue\u5440\uff0c \u8c22\u8c22~<\/p>\n<h3>\u6548\u679c\u56feDemo:<\/h3><p>[1] pick a nickname:<br><img src=\"http:\/\/ac-tc2vc5tu.clouddn.com\/8d0dd106f5f226f4.png\" alt=\"demo-nickname\"><\/p>\n<p>[2] chatroom initialization:<br><img src=\"http:\/\/ac-tc2vc5tu.clouddn.com\/8b9309129959f85e.png\" alt=\"demo-init\"><\/p>\n<p>[3] multi users chatting(one in chrome, another in safari):<br><img src=\"http:\/\/ac-tc2vc5tu.clouddn.com\/4aa537ca52ea8080.png\" alt=\"demo-multusers\"><\/p>\n<h3>server\u7aef\u6e90\u4ee3\u7801<\/h3><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><span>20<\/span><br><span>21<\/span><br><span>22<\/span><br><span>23<\/span><br><span>24<\/span><br><span>25<\/span><br><span>26<\/span><br><span>27<\/span><br><span>28<\/span><br><span>29<\/span><br><span>30<\/span><br><span>31<\/span><br><span>32<\/span><br><span>33<\/span><br><span>34<\/span><br><span>35<\/span><br><span>36<\/span><br><span>37<\/span><br><span>38<\/span><br><span>39<\/span><br><span>40<\/span><br><span>41<\/span><br><span>42<\/span><br><span>43<\/span><br><span>44<\/span><br><span>45<\/span><br><span>46<\/span><br><span>47<\/span><br><span>48<\/span><br><span>49<\/span><br><span>50<\/span><br><span>51<\/span><br><span>52<\/span><br><span>53<\/span><br><span>54<\/span><br><span>55<\/span><br><span>56<\/span><br><span>57<\/span><br><span>58<\/span><br><span>59<\/span><br><\/pre><\/td><td><pre><span><span>\/\/ A fragment of server.js<\/span><\/span><br><span><span>var<\/span> port = process.env.PORT || <span>3000<\/span>;<\/span><br><span>server.listen(port);<\/span><br><span><span>console<\/span>.log(<span>'listen on '<\/span> + port);<\/span><br><span><\/span><br><span><span>var<\/span> io = socketIO(server);<\/span><br><span><span>var<\/span> sockets = [];<\/span><br><span><span>var<\/span> ID2user = {}; <span>\/\/ username <\/span><\/span><br><span><\/span><br><span>io.on(<span>'connection'<\/span>, <span><span>function<\/span>(<span>socket<\/span>)<\/span>{<\/span><br><span>\tsockets.push(socket);<\/span><br><span>\t<\/span><br><span>\t<span>var<\/span> updateUserNum = <span><span>function<\/span>(<span>skt<\/span>)<\/span>{<\/span><br><span>\t\t<span>var<\/span> people = sockets.length === <span>1<\/span> ? <span>'person'<\/span> : <span>'people'<\/span>;<\/span><br><span>\t\tskt.emit(<span>'greeting-from-server'<\/span>, {<\/span><br><span>\t\t\tgreeting: <span>'Welcome! '<\/span> + sockets.length + <span>' '<\/span> + people + <span>' online now!'<\/span><\/span><br><span>\t\t});<\/span><br><span>\t};<\/span><br><span><\/span><br><span>\tupdateUserNum(socket);<\/span><br><span><\/span><br><span>\t<span>\/\/ boardcast?!<\/span><\/span><br><span>\tsocket.on(<span>'message'<\/span>, <span><span>function<\/span>(<span>message<\/span>)<\/span>{<\/span><br><span>\t\t<span>var<\/span> userlistChanged = <span>false<\/span>;<\/span><br><span>\t\t<span>if<\/span>(!ID2user[socket.id]){ <span>\/\/ if new user comes in.<\/span><\/span><br><span>\t\t\t<span>var<\/span> profile = {<\/span><br><span>\t\t\t\tusername: message.username,<\/span><br><span>\t\t\t\tavatar: message.avatar<\/span><br><span>\t\t\t};<\/span><br><span>\t\t\tID2user[socket.id] = profile;<\/span><br><span>\t\t\tuserlistChanged = <span>true<\/span>;<\/span><br><span>\t\t}<\/span><br><span>\t\t<span>for<\/span>(<span>var<\/span> i=<span>0<\/span>; i &lt; sockets.length; i++){<\/span><br><span>\t\t\tsockets[i].emit(<span>'message'<\/span>, message);<\/span><br><span>\t\t\t<span>if<\/span>(userlistChanged){ <span>\/\/ update userlist when new user comes in.<\/span><\/span><br><span>\t\t\t\t<span>console<\/span>.log(ID2user[socket.id].username + <span>'(id: '<\/span> + socket.id + <span>' )'<\/span> + <span>'joins!'<\/span>);<\/span><br><span>\t\t\t\tsockets[i].emit(<span>'userlist'<\/span>, ID2user);<\/span><br><span>\t\t\t\tupdateUserNum(sockets[i]);<\/span><br><span>\t\t\t}<\/span><br><span>\t\t}<\/span><br><span>\t});<\/span><br><span><\/span><br><span>\tsocket.on(<span>'disconnect'<\/span>, <span><span>function<\/span>(<span><\/span>)<\/span>{<\/span><br><span>\t\t<span>for<\/span>(<span>var<\/span> i=<span>0<\/span>; i&lt;sockets.length; i++){<\/span><br><span>\t\t\t<span>if<\/span>(sockets[i].id === socket.id){<\/span><br><span>\t\t\t\tsockets.splice(i, <span>1<\/span>);<\/span><br><span>\t\t\t}<\/span><br><span>\t\t}<\/span><br><span>\t\t<span>var<\/span> usernameOut = ID2user[socket.id].username;<\/span><br><span>\t\t<span>delete<\/span> ID2user[socket.id]; <span>\/\/ remove user from online users.<\/span><\/span><br><span>\t\t<span>\/\/ send to client an updated userlist.<\/span><\/span><br><span>\t\t<span>for<\/span>(<span>var<\/span> i=<span>0<\/span>; i &lt; sockets.length; i++){<\/span><br><span>\t\t\t<span>console<\/span>.log(usernameOut + <span>'(id: '<\/span> + socket.id + <span>' )'<\/span> + <span>'leaves...'<\/span>);<\/span><br><span>\t\t\tsockets[i].emit(<span>'userlist'<\/span>, ID2user);<\/span><br><span>\t\t\tupdateUserNum(sockets[i]);<\/span><br><span>\t\t}<\/span><br><span>\t\t<span>console<\/span>.log(<span>\"There are \"<\/span> + sockets.length + <span>\" active sockets remaining.\"<\/span>);<\/span><br><span>\t});<\/span><br><span>});<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>\u7531\u4e8e\u6211\u4eec\u9700\u8981\u5c06\u8fd9\u4e2a\u5e94\u7528\u653e\u5728\u670d\u52a1\u5668\u4e0a\u770b\u6548\u679c\uff0c \u6240\u4ee5port number\u5c31\u4e0d\u80fd\u4e00\u76f4\u662f\u672c\u5730\u7684localhost\u4e86\uff0c \u9700\u8981\u6539\u6210<code>var port = process.env.PORT || 3000;<\/code>\u3002<\/p>\n<h3>\u8fbe\u5230\u7684\u6548\u679c<\/h3><ul><li>\u663e\u793a\u540c\u65f6\u5728\u7ebf\u7684\u4eba\u6570\u548cuser list\u3002\u6839\u636e\u4f60\u81ea\u5df1\u9009\u7684nickname\u5728user list\u4e0a\u663e\u793a\u3002<\/li>\n<li>\u6bcf\u5f53\u6709\u4eba\u52a0\u5165\u6216\u8005disconnect\u7684\u65f6\u5019\uff0c\u66f4\u65b0\u6240\u6709\u5ba2\u6237\u7aef\u7684user list\u3002\u540c\u65f6console\u90fd\u4f1a\u6709\u8bb0\u5f55\u3002<\/li>\n<li>\u6bcf\u5f53\u6709\u5ba2\u6237\u7aef\u53d1\u9001\u6d88\u606f\u7684\u65f6\u5019\uff0c broadcasting\u7ed9\u6240\u6709\u5728\u7ebf\u7528\u6237\u3002<\/li>\n<\/ul><h3>TODOs<\/h3><ul><li>local cache most frequent online users, to make the message transfer much much more efficient and effective. <\/li>\n<li>support image transfer, which should be quite similar to text message, but rather using binary image data. <\/li>\n<li>introduce animation!! this part should be quite familiar to me but I\u2019s just being lazy\u2026\u2026<\/li>\n<li>social media ;)<\/li>\n<\/ul><h3>client\u7aef\u6e90\u4ee3\u7801<\/h3><p>\u4e0b\u9762\u662f\u90e8\u5206client\u7aef\u7684\u4ee3\u7801\uff1a\u7531\u4e8e\u76d1\u542c\u4e86\u4e00\u4e9b\u4e8b\u4ef6\uff08\u6bd5\u7adf\u6211\u8fd8\u662f\u8c03\u6574\u4e86\u524d\u7aef\u7684\ud83d\ude02\uff09, \u6240\u4ee5\u4ee3\u7801\u6709\u70b9\u957f\uff0c \u4e0b\u9762\u53ea\u663e\u793a\u6838\u5fc3\u90e8\u5206\uff1a<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><span>20<\/span><br><span>21<\/span><br><span>22<\/span><br><span>23<\/span><br><span>24<\/span><br><span>25<\/span><br><span>26<\/span><br><span>27<\/span><br><span>28<\/span><br><span>29<\/span><br><span>30<\/span><br><span>31<\/span><br><span>32<\/span><br><span>33<\/span><br><span>34<\/span><br><span>35<\/span><br><span>36<\/span><br><span>37<\/span><br><span>38<\/span><br><span>39<\/span><br><span>40<\/span><br><span>41<\/span><br><span>42<\/span><br><span>43<\/span><br><span>44<\/span><br><span>45<\/span><br><span>46<\/span><br><span>47<\/span><br><span>48<\/span><br><span>49<\/span><br><span>50<\/span><br><\/pre><\/td><td><pre><span>\/\/ part of index.html's script<\/span><br><span>var socket = io();<\/span><br><span>socket.on('connect', function(){<\/span><br><span><\/span><br><span>    \/\/ ... some codes here ...<\/span><br><span><\/span><br><span>\tsocket.on('greeting-from-server', function(msg){<\/span><br><span>\t\t$('#greeting').empty();<\/span><br><span>\t\t$('<span>&lt;<span>div<\/span>&gt;<\/span><span>&lt;\/<span>div<\/span>&gt;<\/span>').addClass('headline').text(msg.greeting).appendTo($('#greeting'));<\/span><br><span>\t})<\/span><br><span><\/span><br><span>    \/\/ MAIN IDEA: if message comes, append to right place, and self adjust the view!<\/span><br><span>\tsocket.on('message', function(msg){<\/span><br><span><\/span><br><span>\t\tvar container = $('<span>&lt;<span>div<\/span>&gt;<\/span><span>&lt;\/<span>div<\/span>&gt;<\/span>').attr('id', 'container');<\/span><br><span>\t\tvar bubble = $('<span>&lt;<span>div<\/span>&gt;<\/span><span>&lt;\/<span>div<\/span>&gt;<\/span>').addClass('talk-bubble tri-right left-in border');<\/span><br><span>\t\tvar textWrapper = $('<span>&lt;<span>div<\/span>&gt;<\/span><span>&lt;\/<span>div<\/span>&gt;<\/span>').addClass('talktext').appendTo(bubble);<\/span><br><span>\t\t$('<span>&lt;<span>p<\/span>&gt;<\/span><span>&lt;\/<span>p<\/span>&gt;<\/span>').html(msg.messageText).appendTo(textWrapper);<\/span><br><span><\/span><br><span>\t\t\/\/ append the jquery clone to target destination.<\/span><br><span>\t\tvar nameClone = username2jqy(msg.username);<\/span><br><span>\t\tvar avaClone = avatar2jqy(msg.avatar);<\/span><br><span><\/span><br><span>\t\tavaClone.appendTo(container);<\/span><br><span>\t\tnameClone.appendTo(container);<\/span><br><span>\t\tbubble.clone().appendTo(container);<\/span><br><span>\t\tcontainer.clone().appendTo($('#messages'));<\/span><br><span><\/span><br><span>\t\t$('<span>&lt;<span>br<\/span>&gt;<\/span>').appendTo($('#messages'));<\/span><br><span><\/span><br><span>\t\t\/\/ self-adjust scrolling height.<\/span><br><span>\t\tvar msgWrapper = document.getElementById('messages');<\/span><br><span>\t\tmsgWrapper.scrollTop = msgWrapper.scrollHeight;<\/span><br><span>\t});<\/span><br><span><\/span><br><span>    \/\/ MAIN IDEA: when user list need to update, do it!<\/span><br><span>\tsocket.on('userlist', function(userlist){<\/span><br><span>\t\t$('#userlist').empty();<\/span><br><span>\t\t$('<span>&lt;<span>h2<\/span>&gt;<\/span><span>&lt;\/<span>h2<\/span>&gt;<\/span>').text('Online users:').appendTo($('#userlist'));<\/span><br><span>\t\tObject.keys(userlist).map(function(d){<\/span><br><span>\t\t\tvar usrImg = $('<span>&lt;<span>img<\/span>&gt;<\/span><span>&lt;\/<span>img<\/span>&gt;<\/span>').attr('src', userlist[d].avatar);<\/span><br><span>\t\t\tvar usrName = $('<span>&lt;<span>div<\/span>&gt;<\/span><span>&lt;\/<span>div<\/span>&gt;<\/span>').text(userlist[d].username).addClass('listname');<\/span><br><span>\t\t\tvar profileWrapper = $('<span>&lt;<span>div<\/span>&gt;<\/span><span>&lt;\/<span>div<\/span>&gt;<\/span>').addClass('userlistProfile');<\/span><br><span>\t\t\tusrImg.appendTo(profileWrapper);<\/span><br><span>\t\t\tusrName.appendTo(profileWrapper);<\/span><br><span>\t\t\tprofileWrapper.appendTo($('#userlist'));<\/span><br><span>\t\t})<\/span><br><span>\t});<\/span><br><span><\/span><br><span>});<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><h2>\u80cc\u666f\u77e5\u8bc6\u8865\u5145<\/h2><p>\u5b8c\u6210\u4e00\u4e2a\u5c0fdemo\u7684\u5f00\u53d1\u540c\u6837\u4f1a\u9700\u8981\u5f88\u591a\u8fb9\u89d2\u6599\u4fe1\u606f\u7684\u8865\u5145\uff0c \u6ca1\u6709\u4eba\u4f1a\u8bb0\u5f97\u6240\u6709javascript\u5404\u79cd\u5904\u7406\u5bf9\u8c61\u7684\u51fd\u6570\uff0c \u4e5f\u6ca1\u6709\u4eba\u9700\u8981\u8bb0\u5f97\u3002\u7559\u4e2anote\u7ed9\u81ea\u5df1\uff0c \u4e5f\u518d\u4ee5\u540e\u67e5\u7ea0\u7684\u4e4b\u540e\u65b9\u4fbf\u56de\u5fc6\u3002<\/p>\n<ul><li><a href=\"http:\/\/ios.jobbole.com\/85230\/\" target=\"_blank\" rel=\"external\">\u5fae\u4fe1,QQ\u8fd9\u7c7bIM app\u600e\u4e48\u505a\u2014\u2014\u8c08\u8c08Websocket<\/a><\/li>\n<li><a href=\"http:\/\/betterexplained.com\/articles\/a-simple-introduction-to-computer-networking\/\" target=\"_blank\" rel=\"external\">A Simple Introduction To Computer Networking<\/a><\/li>\n<li><code>array.splice(i, 1);<\/code> will remove one item from ith index in that array, namely, in this case, remove the ith item from array.<\/li>\n<li><code>docuemnt.createTextNode(string) \\ document.createElement('div'); \\  document.getElementById('SOMEID').appendChild(element);<\/code> are some common DOM objects munipulations example.<\/li>\n<li>refer to this post: <a href=\"http:\/\/stackoverflow.com\/questions\/8894226\/javascript-submit-textbox-on-enter\" target=\"_blank\" rel=\"external\">send message by pressing enter<\/a>, by adding an eventlistener function to message-box, we listent on the keyCode we press, if it is 13(Enter key), then we trigger the message send function.<\/li>\n<li>refer to this post: <a href=\"http:\/\/codepen.io\/Founts\/pen\/gmhcl\" target=\"_blank\" rel=\"external\">styling for chat bubble<\/a><\/li>\n<li>Know how to create DOM elements in jquery: <code>$('&lt;div&gt;&lt;\/div&gt;').addClass('headline').html(msg).appendTo($('#greeting'));<\/code><\/li>\n<li>create modal in a visually good-looking way, refer to this post: <a href=\"https:\/\/github.com\/kylefox\/jquery-modal\" target=\"_blank\" rel=\"external\">jquery.modal.js<\/a><\/li>\n<li>add user a good-looking avatar! <a href=\"https:\/\/github.com\/adorableio\/avatars-api\" target=\"_blank\" rel=\"external\">adorable avatar!<\/a><\/li>\n<li>change html input focus, refer to this post: <a href=\"https:\/\/api.jquery.com\/focus\/\" target=\"_blank\" rel=\"external\">html input focus<\/a><\/li>\n<li>auto-adjust the scrolling top to the latest message, refer to this post: <a href=\"http:\/\/stackoverflow.com\/questions\/15432691\/css-overflow-value-for-chat\" target=\"_blank\" rel=\"external\">srollTop = scrollHeight<\/a><\/li>\n<\/ul>"},{"title":"\u524d\u7aef\u5f00\u53d1\u5de5\u5177\u5e93[\u7b2c\u4e00\u671f]-npm script","link":"http:\/\/chocoluffy.com\/2016\/05\/15\/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E5%BA%93-%E7%AC%AC%E4%B8%80%E6%9C%9F-npm-script\/","guid":"http:\/\/chocoluffy.com\/2016\/05\/15\/\u524d\u7aef\u5f00\u53d1\u5de5\u5177\u5e93-\u7b2c\u4e00\u671f-npm-script\/","pubDate":"2016-05-15T21:48:45.000Z","categories":["javascript","nodejs","\u6280\u672f"],"author":"Shunzhe Yu","thumbnail":"","description":"<p>\u5728\u81ea\u52a8\u6784\u5efa\u5de5\u5177grunt\\webpack\u7b49\u7ea2\u566a\u4e00\u65f6\u7684\u80cc\u666f\u4e0b\uff0c\u4e3a\u4ec0\u4e48\u6211\u60f3\u7528npm script\u800c\u4e0d\u662fgrunt\u548cgulp\u7b49\u5176\u4ed6\u5de5\u5177?<\/p>","content":"<p>\u5728\u81ea\u52a8\u6784\u5efa\u5de5\u5177grunt\\webpack\u7b49\u7ea2\u566a\u4e00\u65f6\u7684\u80cc\u666f\u4e0b\uff0c\u4e3a\u4ec0\u4e48\u6211\u60f3\u7528npm script\u800c\u4e0d\u662fgrunt\u548cgulp\u7b49\u5176\u4ed6\u5de5\u5177?<\/p>\n<a><\/a>\n<h2>\u524d\u8a00<\/h2><p>\u4e3a\u4ec0\u4e48\u6211\u4eec\u9700\u8981\u81ea\u52a8\u6784\u5efa\u5de5\u5177\uff1f<\/p>\n<p>\u5728\u524d\u7aef\u5f00\u53d1\u7684\u65f6\u5019\uff0c\u4f1a\u9047\u5230\u5f88\u591a\u5b9e\u9645\u4ea7\u54c1\u5f00\u53d1\u4e4b\u5916\u4e0a\u7684\u9700\u6c42\uff0c\u6bd4\u5982\u5f00\u53d1\u8005\u5e0c\u671b\u505a\u5230\u201c\u6240\u5199\u5373\u6240\u5f97\u201d\uff0c\u53ef\u4ee5\u4e00\u8fb9\u5728\u7f16\u8f91\u5668\u91cc\u9762\u4fee\u6539\u548c\u5f00\u53d1\u4ee3\u7801\uff0c\u6d4f\u89c8\u5668\u53ef\u4ee5\u540c\u6b65\u66f4\u65b0\u800c\u4e0d\u9700\u8981\u6211\u4eec\u624b\u52a8\u53bbrefresh\u9875\u9762\uff1b \u6bd4\u5982\u6211\u4eec\u5e0c\u671b\u53ef\u4ee5\u538b\u7f29\u6700\u540e\u7684\u6210\u54c1\u4ee3\u7801\uff0c \u56fe\u7247\u8d44\u6e90\u7684\u5927\u5c0f\uff0c\u8ba9\u6bcf\u6b21\u6d4f\u89c8\u5668\u4e0b\u8f7d\u6240\u9700\u8981\u7684js\u4ee3\u7801\u7684\u65f6\u95f4\u53ef\u4ee5\u66f4\u77ed\uff0c\u6216\u8005\u8003\u8651CDN\uff1b \u6bd4\u5982\u6211\u4eec\u5e0c\u671b\u6211\u4eec\u5199\u7684scss\u53ef\u4ee5\u9002\u914d\u4efb\u4f55\u7c7b\u578b\u7684\u6d4f\u89c8\u5668\u7b49\u7b49\u3002<\/p>\n<p>\u5f88\u591a\u529f\u80fd\u66fe\u7ecf\u662f\u8981\u5f00\u53d1\u8005\u624b\u52a8\u5f15\u5165script\u6587\u4ef6\u7684\uff0c\u4f46\u9274\u4e8enpm\u4e0a\u6d3b\u8dc3\u7684\u5f00\u53d1\u8005\u5c06\u5f88\u591a\u9700\u6c42\u7684module\u5f00\u53d1\u5e76\u53d1\u5e03\u51fa\u6765\uff0c \u6211\u4eec\u53ef\u4ee5\u5229\u7528npm\u8fd9\u4e2a\u5305\u7ba1\u7406\u5668\u6765\u914d\u7f6e\u4f7f\u7528\u8fd9\u4e9b\u65b9\u4fbf\u7684module\uff0c\u5728\u80fd\u591f\u8fbe\u5230\u540c\u6837\u529f\u80fd\u7684\u5de5\u5177\u91cc\u9762\u6bd4\u5982bower, grunt, gulp\uff0c\u6211\u8ba4\u4e3a\u5bf9\u4e8e\u4e00\u4e2a\u8f7b\u91cf\u7684\u5c0f\u9879\u76ee\uff0c \u4e2a\u4eba\u9879\u76ee\u6765\u8bf4, npm script\u662f\u6700\u65b9\u4fbf\u7684\uff0c \u6700\u5bb9\u6613\u4e0a\u624b\u7684\u3002<strong>\u6ca1\u6709\u6700\u597d\u7684\u5de5\u5177\uff0c \u53ea\u6709\u6700\u5408\u9002\u7684\u4f7f\u7528\u573a\u666f\u3002<\/strong><\/p>\n<p>\u800c\u4eca\u5929\u7684\u4e3b\u9898\uff1a\u5728\u914d\u7f6e\u5de5\u5177grunt\\webpack\u7b49\u7ea2\u566a\u4e00\u65f6\u7684\u80cc\u666f\u4e0b\uff0c\u4e3a\u4ec0\u4e48\u6211\u60f3\u7528npm script\u800c\u4e0d\u662fgrunt\u548cgulp\u7b49\u5176\u4ed6\u5de5\u5177?<\/p>\n<p><strong>\u56e0\u4e3asimplicity matters\u3002<\/strong>\u6ca1\u6709\u5fc5\u8981\u5728\u9700\u8981\u7528\u7684\u65f6\u5019\u624d\u53bb\u627e\u90a3\u4e9b\u6570\u91cf\u6709\u9650\u7684grunt, gulp plugins\uff0c\u800c\u76f4\u63a5\u5c06node modules\u62ff\u6765\u7528\u3002\u5bf9\u4e8e\u4e2a\u4eba\u5f00\u53d1\u548c\u7ef4\u62a4\u7684\u5c0f\u9879\u76ee\uff0c \u6709\u6ca1\u6709\u5fc5\u8981\u82b1\u65f6\u95f4\u53bb\u7814\u7a76Gruntfile.js\u600e\u4e48\u53bb\u914d\u7f6e\uff0c \u6216\u8005\u8bf4\uff0c \u5728\u914d\u7f6e\u4e0a\u82b1\u7684\u65f6\u95f4\u76f8\u5bf9\u77ed\u671f\u96c6\u4e2d\u5f00\u53d1\u7684\u65f6\u95f4\u6765\u8bf4\u503c\u4e0d\u503c\uff1f\u4e0d\u662f\u8bf4\u53cd\u5bf9\u4f7f\u7528grunt, gulp\u548cwebpack\u7b49\u5de5\u5177\uff0c \u800c\u662f\u6211\u4eec\u6ca1\u6709\u5fc5\u8981\u62ff\u5927\u70ae\u53bb\u6253\u868a\u5b50\uff0c \u6211\u4eec\u60f3\u8981agile development\u3002 \u4e5f\u6b63\u662fsimplicy\uff0c \u6240\u4ee5\u624d\u6709RoR, meteor\u7b49\u5168\u6808\u6846\u67b6\u7684\u51fa\u73b0\u6765\u6311\u6218java\u7b49\u8f83\u4e3a\u81c3\u80bf\u7684\u5f00\u53d1\u6d41\u7a0b\u4e0d\u662f\u4e48\uff1f<\/p>\n<p>\u4e0b\u56fe\u662f\u622a\u6b62\u81f3\u4eca\u5e741\u6708\u4e3a\u6b62\u7684\u5404\u5e73\u53f0\u7684\u63d2\u4ef6\u6570\u91cf\uff0c\u4ecd\u5728\u4e0d\u65ad\u5730\u589e\u52a0\u4e2d\u3002<\/p>\n<p><img src=\"http:\/\/ac-tc2vc5tu.clouddn.com\/f247d4b81bd3044a.png\" alt=\"npm script\"><\/p>\n<h2>\u4ec0\u4e48\u662fnpm script<\/h2><p>\u5176\u5b9enpm script\u5c31\u662f\u5e0c\u671b\u6267\u884c\u7684command\u7684alias\uff0c \u7c7b\u4f3c\u4e0ecommand line\u91cc\u9762\u7684make\uff0c \u901a\u8fc7\u63d0\u524d\u8bbe\u7f6e\u5e0c\u671b\u6267\u884c\u7684\u547d\u4ee4\uff0c \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7<code>npm run &lt;alias&gt;<\/code>\u6765\u6267\u884c\u6211\u4eec\u9884\u5148\u8bbe\u7f6e\u7684\u547d\u4ee4\u3002<\/p>\n<h2>\u5982\u4f55config\u4f60\u7684npm script<\/h2><p>\u800c\u76ee\u524dnpm\u4e0a\u6709\u5f88\u591a\u5f88\u68d2\u7684module\u53ef\u4ee5\u76f4\u63a5\u5904\u7406\u9879\u76ee\uff0c \u4e0b\u9762\u5217\u51fa\u6765\u7684\u662f\u6211\u5e73\u65f6\u81ea\u5df1\u7ecf\u5e38\u4f7f\u7528\u7684module: <\/p>\n<p>\u6bd4\u5982: browserfy\u5c06\u6587\u4ef6\u7684\u5404\u79cd\u6587\u4ef6\u548c\u6d4f\u89c8\u5668\u540c\u6b65; postcss\u548cautofixer\u53ef\u4ee5\u5c06css\u6587\u4ef6\u6dfb\u52a0\u9002\u914d\u5404\u79cd\u6d4f\u89c8\u5668\u7684\u524d\u7f00\u540c\u65f6\u8fdb\u884c\u538b\u7f29; js-lint\u7528\u6765\u68c0\u67e5js\u6587\u4ef6\u7684\u5404\u79cd\u683c\u5f0f\u7ec6\u8282; uglify\u7528\u6765\u538b\u7f29js\u6587\u4ef6\u7684\u5927\u5c0f; imagemin\u7528\u6765\u538b\u7f29\u5404\u79cd\u56fe\u7247\u6587\u4ef6\u7684\u5927\u5c0f\uff0c \u5728\u5404\u79cd\u5927\u578b\u7f51\u7ad9\u4e2d\uff0c \u56fe\u7247\u7684\u5927\u5c0f\u5360\u636e\u4e86\u5927\u90e8\u5206\u3002<\/p>\n<h3>node\uff0dsass<\/h3><p>\u4e0b\u9762\u662f\u4e00\u4e9b\u5177\u4f53\u4f7f\u7528\u7684\u4f8b\u5b50\uff1a\u6bd4\u5982\u6211\u4eec\u60f3\u5c06sass compile\u6210css\u3002<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><\/pre><\/td><td><pre><span>npm install --save-dev node-sass<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>\u5c06<code>node-sass<\/code>\u8fd9\u4e2amodule\u88c5\u5728developing\u73af\u5883\u4e4b\u540e\uff0c\u53ef\u4ee5\u76f4\u63a5<code>node-sass --output-style compressed -o dist\/css src\/scss<\/code>\u6765\u5c06\u201dsrc\/scss\u201c\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e0b\u9762\u7684sass\u6587\u4ef6compile\u51fa\u6765\u5e76\u4fdd\u5b58\u5728\u201ddist\/css\u201c\u6587\u4ef6\u5939\u4e0b\u9762\uff1b \u6216\u8005\u4e00\u4e2a\u66f4\u4fbf\u6377\u7684\u505a\u6cd5\uff0c\u662f\u4f7f\u7528npm script\uff1a<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><\/pre><\/td><td><pre><span><span>\"scripts\"<\/span>: {<\/span><br><span>  <span>\"scss\"<\/span>: <span>\"node-sass --output-style compressed -o dist\/css src\/scss\"<\/span><\/span><br><span>}<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>\u7136\u540e\u5728console\u91ccrun <code>npm run scss<\/code>\u5c31\u53ef\u4ee5\u6267\u884c\u8fd9\u4e2a\u76f8\u540c\u547d\u4ee4\u4e86\u3002\u548cmakefile\u7684\u539f\u7406\u548c\u4f7f\u7528\u4e60\u60ef\u53ef\u4ee5\u7c7b\u6bd4\uff0c \u53ea\u4e0d\u8fc7\u4f7f\u7528\u573a\u666f\u548c\u5e73\u53f0\u4e0d\u540c\u3002<\/p>\n<h3>autoprefixer<\/h3><p>\u540c\u7406\u5bf9\u4e0a\u6587\u63d0\u5230\u7684autoprefixer\u8fd9\u4e2amodule\uff0c <code>npm install --save-dev postcss-cli autoprefixer<\/code>\u6765\u5b89\u88c5\uff0c \u7136\u540e\u914d\u7f6escript\uff1a<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><\/pre><\/td><td><pre><span><span>\"scripts\"<\/span>: {<\/span><br><span>  ...<\/span><br><span>  <span>\"autoprefixer\"<\/span>: <span>\"postcss -u autoprefixer -r dist\/css\/*\"<\/span><\/span><br><span>}<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>\u90a3\u4e48<code>npm run autoprefixer<\/code>\u8fd9\u4e2a\u6548\u679c\u5c31\u76f8\u5f53\u4e8e<code>postcss -u autoprefixer --autoprefixer.browsers '&gt; 5%, ie 9' -r dist\/css\/*<\/code>\u3002<\/p>\n<h3>eslint<\/h3><p>\u7c7b\u4f3c\u5730\u8fd8\u6709eslint\u8fd9\u4e2a\u5bf9js\u6587\u4ef6\u8fdb\u884csyntax testing\u7684\u5e38\u7528module\uff1a<code>npm install --save-dev eslint<\/code>\u6216\u8005\u4f7f\u7528shortcut\uff1a<code>npm i -D eslint<\/code>, \u7136\u540e\u914d\u7f6epackage.json\u7684script\u90e8\u5206\uff1a<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><\/pre><\/td><td><pre><span><span>\"scripts\"<\/span>: {<\/span><br><span>  ...<\/span><br><span>  <span>\"lint\"<\/span>: <span>\"eslint src\/js\"<\/span><\/span><br><span>}<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><h2>\u9879\u76ee\u6e90\u4ee3\u7801\u793a\u4f8b<\/h2><p>\u4e00\u4e2a\u5b9e\u6218\u9879\u76ee\u7684\u6e90\u4ee3\u7801\u4f7f\u7528\u5728\u8fd9\u91cc\u548c\u5927\u5bb6\u5206\u4eab\uff1a<\/p>\n<p>\u8003\u8651\u5230\u5f00\u53d1\u548c\u751f\u4ea7\u73af\u5883\u7684\u4e0d\u540c\uff0c\u8fd8\u9700\u8981\u914d\u7f6e\u4e0d\u540c\u7684\u73af\u5883\uff0c\u8fd9\u4e2a\u9879\u76ee\u5728\u5f00\u53d1\u4e0a\u6709\u6d4f\u89c8\u5668\u540c\u6b65\u66f4\u65b0\uff0c\u8bed\u6cd5\u68c0\u67e5\uff0c\u538b\u7f29\u6e90\u6587\u4ef6\uff0c \u76d1\u542c\u7aef\u53e3\uff0c s3\u540c\u6b65\u5907\u4efd\u7684\u81ea\u52a8\u5316\u4f18\u52bf\uff0c \u8fd8\u5f15\u5165\u4e86\u524d\u7aef\u7684jade\u6846\u67b6\u4ee3\u66ffhtml\uff0c stylus\u6846\u67b6\u4ee3\u66ffcss\uff0cmocha\u7684testing\u6846\u67b6\u548ckarma\u9a71\u52a8\u3002<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><span>20<\/span><br><span>21<\/span><br><span>22<\/span><br><span>23<\/span><br><span>24<\/span><br><span>25<\/span><br><span>26<\/span><br><span>27<\/span><br><span>28<\/span><br><span>29<\/span><br><span>30<\/span><br><span>31<\/span><br><span>32<\/span><br><span>33<\/span><br><span>34<\/span><br><span>35<\/span><br><span>36<\/span><br><span>37<\/span><br><span>38<\/span><br><span>39<\/span><br><span>40<\/span><br><span>41<\/span><br><span>42<\/span><br><span>43<\/span><br><span>44<\/span><br><span>45<\/span><br><span>46<\/span><br><span>47<\/span><br><span>48<\/span><br><span>49<\/span><br><span>50<\/span><br><span>51<\/span><br><span>52<\/span><br><span>53<\/span><br><span>54<\/span><br><span>55<\/span><br><\/pre><\/td><td><pre><span>{<\/span><br><span>  <span>\"name\"<\/span>: <span>\"npm-scripts-example\"<\/span>,<\/span><br><span>  <span>\"version\"<\/span>: <span>\"1.0.0\"<\/span>,<\/span><br><span>  <span>\"description\"<\/span>: <span>\"An example of how to use npm scripts\"<\/span>,<\/span><br><span>  <span>\"main\"<\/span>: <span>\"index.js\"<\/span>,<\/span><br><span>  <span>\"license\"<\/span>: <span>\"MIT\"<\/span>,<\/span><br><span>  <span>\"devDependencies\"<\/span>: {<\/span><br><span>    <span>\"browserify\"<\/span>: <span>\"^6.3.2\"<\/span>,<\/span><br><span>    <span>\"hashmark\"<\/span>: <span>\"^2.0.0\"<\/span>,<\/span><br><span>    <span>\"http-server\"<\/span>: <span>\"^0.7.3\"<\/span>,<\/span><br><span>    <span>\"jade\"<\/span>: <span>\"^1.7.0\"<\/span>,<\/span><br><span>    <span>\"jshint\"<\/span>: <span>\"^2.5.10\"<\/span>,<\/span><br><span>    <span>\"karma\"<\/span>: <span>\"^0.12.28\"<\/span>,<\/span><br><span>    <span>\"karma-browserify\"<\/span>: <span>\"^1.0.0\"<\/span>,<\/span><br><span>    <span>\"karma-cli\"<\/span>: <span>\"^0.0.4\"<\/span>,<\/span><br><span>    <span>\"karma-mocha\"<\/span>: <span>\"^0.1.10\"<\/span>,<\/span><br><span>    <span>\"karma-phantomjs-launcher\"<\/span>: <span>\"^0.1.4\"<\/span>,<\/span><br><span>    <span>\"live-reload\"<\/span>: <span>\"^0.2.0\"<\/span>,<\/span><br><span>    <span>\"minifyify\"<\/span>: <span>\"^6.0.0\"<\/span>,<\/span><br><span>    <span>\"mocha\"<\/span>: <span>\"^2.0.1\"<\/span>,<\/span><br><span>    <span>\"nodemon\"<\/span>: <span>\"^1.2.1\"<\/span>,<\/span><br><span>    <span>\"opener\"<\/span>: <span>\"^1.4.0\"<\/span>,<\/span><br><span>    <span>\"parallelshell\"<\/span>: <span>\"^1.0.0\"<\/span>,<\/span><br><span>    <span>\"rimraf\"<\/span>: <span>\"^2.2.8\"<\/span>,<\/span><br><span>    <span>\"s3-cli\"<\/span>: <span>\"^0.11.1\"<\/span>,<\/span><br><span>    <span>\"stylus\"<\/span>: <span>\"^0.49.3\"<\/span><\/span><br><span>  },<\/span><br><span>  <span>\"scripts\"<\/span>: {<\/span><br><span>    <span>\"clean\"<\/span>: <span>\"rimraf dist\/*\"<\/span>,<\/span><br><span><\/span><br><span>    <span>\"prebuild\"<\/span>: <span>\"npm run clean -s\"<\/span>,<\/span><br><span>    <span>\"build\"<\/span>: <span>\"npm run build:scripts -s &amp;&amp; npm run build:styles -s &amp;&amp; npm run build:markup -s\"<\/span>,<\/span><br><span>    <span>\"build:scripts\"<\/span>: <span>\"browserify -d assets\/scripts\/main.js -p [minifyify --compressPath . --map main.js.map --output dist\/main.js.map] | hashmark -n dist\/main.js -s -l 8 -m assets.json 'dist\/{name}{hash}{ext}'\"<\/span>,<\/span><br><span>    <span>\"build:styles\"<\/span>: <span>\"stylus assets\/styles\/main.styl -m -o dist\/ &amp;&amp; hashmark -s -l 8 -m assets.json dist\/main.css 'dist\/{name}{hash}{ext}'\"<\/span>,<\/span><br><span>    <span>\"build:markup\"<\/span>: <span>\"jade assets\/markup\/index.jade --obj assets.json -o dist\"<\/span>,<\/span><br><span><\/span><br><span>    <span>\"test\"<\/span>: <span>\"karma start --singleRun\"<\/span>,<\/span><br><span><\/span><br><span>    <span>\"watch\"<\/span>: <span>\"parallelshell \\\"npm run watch:test -s\\\" \\\"npm run watch:build -s\\\"\"<\/span>,<\/span><br><span>    <span>\"watch:test\"<\/span>: <span>\"karma start\"<\/span>,<\/span><br><span>    <span>\"watch:build\"<\/span>: <span>\"nodemon -q -w assets\/ --ext '.' --exec 'npm run build'\"<\/span>,<\/span><br><span><\/span><br><span>    <span>\"open:prod\"<\/span>: <span>\"opener http:\/\/example.com\"<\/span>,<\/span><br><span>    <span>\"open:stage\"<\/span>: <span>\"opener http:\/\/staging.example.internal\"<\/span>,<\/span><br><span>    <span>\"open:dev\"<\/span>: <span>\"opener http:\/\/localhost:9090\"<\/span>,<\/span><br><span><\/span><br><span>    <span>\"deploy:prod\"<\/span>: <span>\"s3-cli sync .\/dist\/ s3:\/\/example-com\/prod-site\/\"<\/span>,<\/span><br><span>    <span>\"deploy:stage\"<\/span>: <span>\"s3-cli sync .\/dist\/ s3:\/\/example-com\/stage-site\/\"<\/span>,<\/span><br><span><\/span><br><span>    <span>\"serve\"<\/span>: <span>\"http-server -p 9090 dist\/\"<\/span>,<\/span><br><span>    <span>\"live-reload\"<\/span>: <span>\"live-reload --port 9091 dist\/\"<\/span>,<\/span><br><span><\/span><br><span>    <span>\"dev\"<\/span>: <span>\"npm run open:dev -s &amp;&amp; parallelshell \\\"npm run live-reload -s\\\" \\\"npm run serve -s\\\" \\\"npm run watch -s\\\"\"<\/span><\/span><br><span>  }<\/span><br><span>}<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>\u5f88\u591a\u65f6\u5019\u5c31\u662f\u56e0\u4e3a\u51c6\u5907\u7684\u5de5\u5177\u6548\u7387\u9ad8\uff0c \u5f00\u53d1\u8005\u4e5f\u56e0\u6b64\u5f97\u4ee5\u96c6\u4e2d\u7cbe\u529b\u4e8e\u4ea7\u54c1\u903b\u8f91\uff0c \u5728\u66f4\u77ed\u7684\u65f6\u95f4\u5185\u5f00\u53d1\u51fa\u66f4\u597d\u66f4\u7a33\u5b9a\u7684\u4ea7\u54c1\u3002<\/p>\n<h2>\u540e\u8bb0\u5c0f\u7ed3<\/h2><p>npm script\u4e0d\u662f\u6ca1\u6709\u7f3a\u70b9\u7684\uff0c\u5c31\u50cf\u6211\u4e00\u518d\u5f3a\u8c03\u7684\uff0c\u6ca1\u6709\u6700\u597d\u7684\u5de5\u5177\uff0c \u53ea\u6709\u6700\u5408\u9002\u7684\u4f7f\u7528\u573a\u666f\uff0c \u5728\u4e2a\u4eba\u5c0f\u9879\u76ee\u9002\u5408\u7684npm script\uff0c\u5728\u5927\u9879\u76ee\uff0c \u52a8\u8f84\u51e0\u5341\u4e07\u7684\u524d\u7aef\u9879\u76ee\u7684\u6784\u5efa\u548c\u6d4b\u8bd5\u4e0b\uff0c npm script\u4f1a\u663e\u5f97\u7279\u522b\u81c3\u80bf\u548c\u96be\u4ee5\u7ef4\u62a4\u3002 \u800c\u76ee\u524d\u5927\u70ed\u7684grunt\\gulp\\webpack\u4e5f\u8fce\u6765\u4e86\u4ed6\u4eec\u7684\u821e\u53f0\u3002\u4e0b\u4e00\u671f\uff0c\u96c6\u4e2d\u4ecb\u7ecdgrunt\u548cwebpack\uff0c\u516c\u53f8\u91cc\u4f7f\u7528\u7684\u4e5f\u662fgrunt\uff0c\u4e3a\u4ec0\u4e48\u5b83\u4f1a\u5728\u4f17\u591a\u5de5\u5177\u4e2d\u8131\u9896\u800c\u51fa\u3002<\/p>\n<h2>\u53c2\u8003\u94fe\u63a5<\/h2><ul><li><a href=\"https:\/\/www.zybuluo.com\/yangfch3\/note\/249328\" target=\"_blank\" rel=\"external\">\u7528npm\u642d\u914d\u811a\u672c\u6267\u884c<\/a> npm \u4e0d\u4ec5\u53ef\u4ee5\u7528\u4e8e\u6a21\u5757\u7ba1\u7406\uff0c\u8fd8\u53ef\u4ee5\u7528\u4e8e\u6267\u884c\u811a\u672c\u3002\u5bf9\u4e8e\u591a\u4e2a\u4efb\u52a1\u7684\u64cd\u4f5c\u5f88\u65b9\u4fbf\uff01<\/li>\n<li><a href=\"https:\/\/www.nczonline.net\/blog\/2016\/03\/mimicking-npm-script-in-node-js\/?utm_source=feedburner&amp;utm_medium=feed&amp;utm_campaign=Feed%3A+nczonline+%28NCZOnline+-+The+Official+Web+Site+of+Nicholas+C.+Zakas%29\" target=\"_blank\" rel=\"external\">Mimicking npm script in Node.js<\/a> The underlying mechanism of using npm script is that npm modifies the PATH environment variable so that it affects the lookup of executables. Run <code>npm install --save-dev eslint<\/code>, then do <code>npm run lint<\/code>, it works because npm script is actually running <code>node_modules\/.bin\/eslint<\/code>.<\/li>\n<li><a href=\"http:\/\/gon.to\/2015\/02\/26\/gulp-is-awesome-but-do-we-really-need-it\/\" target=\"_blank\" rel=\"external\">Gulp is awesome, but do we really need it?<\/a><\/li>\n<li><a href=\"http:\/\/blog.keithcirkel.co.uk\/how-to-use-npm-as-a-build-tool\/\" target=\"_blank\" rel=\"external\">How to Use npm as a Build Tool<\/a><\/li>\n<\/ul>"},{"title":"\u53e6\u4e00\u79cd\u9f13\u58f0-\u8bfb\u300a\u9014\u5ba2\u5708\u300b\u6709\u611f","link":"http:\/\/chocoluffy.com\/2016\/05\/13\/%E5%8F%A6%E4%B8%80%E7%A7%8D%E9%BC%93%E5%A3%B0-%E8%AF%BB%E3%80%8A%E9%80%94%E5%AE%A2%E5%9C%88%E3%80%8B%E6%9C%89%E6%84%9F\/","guid":"http:\/\/chocoluffy.com\/2016\/05\/13\/\u53e6\u4e00\u79cd\u9f13\u58f0-\u8bfb\u300a\u9014\u5ba2\u5708\u300b\u6709\u611f\/","pubDate":"2016-05-14T01:45:08.000Z","categories":["\u521b\u4e1a","\u5546\u4e1a\u8bc4\u8bba","\u8bfb\u4e66\u7b14\u8bb0","\u539f\u521b"],"author":"Shunzhe Yu","thumbnail":"","description":"<p>\u201c\u5982\u679c\u4f60\u6e05\u9192\u5730\u77e5\u9053\u4f60\u8981\u53bb\u54ea\u513f\uff0c\u8111\u6d77\u4e2d\u8fd8\u4fdd\u7559\u7740\u90a3\u4efd\u61a7\u61ac\uff0c\u90a3\u4e48\u4f60\u5c31\u80fd\u9022\u5c71\u5f00\u8def\uff0c\u9047\u6c34\u642d\u6865\uff0c\u6240\u6709\u7684\u963b\u788d\u90fd\u5c06\u6210\u4e3a\u4e00\u4e2a\u4e2a\u91cc\u7a0b\u7891\uff0c\u88ab\u8e29\u5728\u4f60\u7684\u8eab\u540e\u2026\u2026\u201d<\/p>","content":"<p>\u201c\u5982\u679c\u4f60\u6e05\u9192\u5730\u77e5\u9053\u4f60\u8981\u53bb\u54ea\u513f\uff0c\u8111\u6d77\u4e2d\u8fd8\u4fdd\u7559\u7740\u90a3\u4efd\u61a7\u61ac\uff0c\u90a3\u4e48\u4f60\u5c31\u80fd\u9022\u5c71\u5f00\u8def\uff0c\u9047\u6c34\u642d\u6865\uff0c\u6240\u6709\u7684\u963b\u788d\u90fd\u5c06\u6210\u4e3a\u4e00\u4e2a\u4e2a\u91cc\u7a0b\u7891\uff0c\u88ab\u8e29\u5728\u4f60\u7684\u8eab\u540e\u2026\u2026\u201d<\/p>\n<a><\/a>\n<p><img src=\"http:\/\/ac-tc2vc5tu.clouddn.com\/7c3aa7a1e64bda62.png\" alt=\"\u751f\u547d\u4e0d\u80fd\u627f\u53d7\u4e4b\u91cd\"><\/p>\n<h2>\u524d\u8a00<\/h2><p>\u5728<a href=\"http:\/\/chocoluffy.com\/2016\/04\/25\/%E5%85%B3%E4%BA%8E%E5%88%9B%E4%B8%9A%EF%BC%8C-%E9%82%A3%E4%BA%9B%E4%B8%8D%E8%83%BD%E8%AF%B4%E7%9A%84%E7%A7%98%E5%AF%86\/\">\u5173\u4e8e\u521b\u4e1a, \u90a3\u4e9b\u4e0d\u80fd\u8bf4\u7684\u79d8\u5bc6<\/a>\u91cc\u4e3b\u8981\u8bb0\u5f55\u4e86\u9605\u8bfb<the hard=\"\" thing=\"\" about=\"\" things=\"\">\u7684\u9605\u8bfb\u624b\u8bb0\uff0c \u800c\u53e6\u4e00\u672c\u51e0\u4e4e\u540c\u65f6\u5b8c\u6210\u7684\u4e66&lt;\u9014\u5ba2\u5708\u521b\u4e1a\u8bb0&gt;\u7684\u9605\u8bfb\u8bb0\u5f55\u601d\u8003\uff0c\u5728\u8fd9\u91cc\u5206\u4eab\u3002<\/the><\/p>\n<p>\u5728\u4e00\u4e2a\u5145\u65a5\u7740\u6765\u81eaCEO\u4e43\u81f3\u98ce\u9669\u6295\u8d44\u4eba\u89c6\u89d2\u7684\u521b\u4e1a\u56de\u987e\u7684\u73af\u5883\u4e0b\uff0c \u4e00\u4e2a\u6765\u81ea\u6280\u672f\u5408\u4f19\u4eba(CTO)\u7684\u89c6\u89d2\u663e\u5f97\u5c24\u4e3a\u53ef\u8d35\u3002 \u4ece\u6700\u65e9\u7684\u6280\u672f\u9009\u578b\uff0c \u5230\u5e26\u9886\u5176\u5b83\u6280\u672f\u4eba\u5458\u7684\u5f00\u53d1\u548c\u7ef4\u62a4\uff0c \u5230\u6280\u672f\u8fc7\u6e21\u548c\u5546\u4e1a\u9009\u62e9\uff0c \u9648\u5929\u7ed9\u4e86\u4e00\u4efd\u5f88\u8be6\u7ec6\u548c\u771f\u631a\u7684\u53c2\u8003\u9009\u9879\u3002<\/p>\n<p><img src=\"http:\/\/ac-tc2vc5tu.clouddn.com\/6ceefbf6929babac.png\"><\/p>\n<p>\u6bcf\u672c\u4e66\uff0c \u6bcf\u4e2a\u6587\u5b57\u5bf9\u4e0d\u540c\u7684\u4eba\u610f\u4e49\u90fd\u662f\u4e0d\u540c\u7684\u3002 \u4e0b\u9762\u7eaa\u5f55\u4e86\u6211\u5728\u770b\u5b8c\u8fd9\u672c\u4e66\u4e4b\u540e\u7684\u60f3\u6cd5\u3002<\/p>\n<h2>\u5173\u4e8e\u521b\u4e1a\uff0c\u90a3\u6240\u6709\u65e0\u5173\u6280\u672f\u7684\u4e8b<\/h2><p>\u4e00\u5f00\u59cb\u4e0d\u8981\u8bbe\u7f6e\u8fc7\u9ad8\u7684\u671f\u6743\u6c60\uff0c \u671f\u6743\u6c60\u7684\u4e3b\u8981\u76ee\u7684\u662f\u672a\u6765\u5438\u5f15\u548c\u7559\u4f4f\u4eba\u624d\u3002\u671f\u6743\u4e0e\u80a1\u6743\u4e0d\u540c\uff0c\u80a1\u6743\u4ee3\u8868\u6240\u6709\u6743\uff0c\u671f\u6743\u4ee3\u8868\u7684\u5219\u662f\u5728\u7279\u5b9a\u7684\u65f6\u95f4\u3001\u4ee5\u7279\u5b9a\u7684\u4ef7\u683c\u8d2d\u4e70\u7279\u5b9a\u6240\u6709\u6743\u7684\u6743\u5229\uff0c\u5b83\u53ef\u88ab\u89c6\u4f5c\u662f\u5458\u5de5\u4e0e\u516c\u53f8\u4e4b\u95f4\u5173\u4e8e\u80a1\u6743\u4e70\u5356\u7684\u4e00\u4efd\u5408\u540c\u3002\u884c\u6743\u4e4b\u540e\u5458\u5de5\u83b7\u5f97\u7684\u80a1\u4efd\u662f\u666e\u901a\u80a1\u3002<\/p>\n<h3>\u5728\u521b\u65b0\u5de5\u573a\u91cc\u7684\u6253\u62fc<\/h3><p>\u5728\u548c\u521b\u65b0\u5de5\u573a\u5c31\u5165\u9a7b\u7ec6\u8282\u7684\u4ea4\u8c08\u4e2d\uff1a<\/p>\n<ul><li><p>\u6e05\u7b97\u4f18\u5148\u6743<\/p>\n<\/li>\n<li><p>\u53cd\u7a00\u91ca\u6761\u6b3e<\/p>\n<\/li>\n<\/ul><p>\u5982\u4f55\u96c7\u4f63\u5230\u6700\u597d\u7684\u4eba\uff0c \u7684\u786e\u62e5\u6709\u521b\u65b0\u5de5\u573a\u8fd9\u4e2a\u540d\u5b57\u66f4\u5bb9\u6613\u53d1\u73b0\u66f4\u597d\u7684\u6280\u672f\u4eba\u5458\u3002<\/p>\n<p>nanfang\u5c31\u662f\u901a\u8fc7\u521b\u65b0\u5de5\u5382\u7684\u62db\u8058\u8fdb\u6765\u7684\u3002\u540c\u65f6alex\u7684\u5b98\u65b9\u535a\u5ba2\u548c\u77e5\u4e4e\u90fd\u53ef\u4ee5\u7528\u6765\u83b7\u53d6\u4eba\u624d\u7684\u6765\u6e90\u3002<\/p>\n<h3>\u6280\u672f\u9009\u578b\u548c\u5de5\u5177\u5e93<\/h3><p>\u5f53\u65f6\u4f5c\u8005\u4f7f\u7528\u7684\u662famazon\u7684\u56db\u53f0\u6700\u5c0f\u514d\u8d39\u8ba1\u7b97\u5355\u5143\uff0c \u75284\u4e2a\u8d26\u53f7\u6ce8\u518c\u7684\u3002\u4e00\u53f0\u7528\u6765\u8dd1\u7ffb\u8bd1\uff0c \u4e00\u53f0\u8dd1wordpress\uff0c \u4e00\u53f0\u8dd1toureet.com\uff0c \u548c\u53e6\u4e00\u53f0\u3002 \u73b0\u5728\u56fd\u5185\u7684\u4e91\u670d\u52a1\u53ef\u4ee5\u8003\u8651\u963f\u91cc\u4e91\u3002<\/p>\n<p>\u5728UI\u4e0a\u8981\u76f4\u89c2\u548c\u5b9e\u7528\u3002 \u4e00\u5b9a\u8981\u5728\u7b2c\u4e00\u8f6e\u5ba3\u4f20\u4e4b\u524d\u5b8c\u6210UI\u7684\u8bbe\u8ba1\u548c\u6784\u67b6\uff0c \u6bd5\u7adf\u7b2c\u4e00\u8f6e\u5ba3\u4f20\u4e4b\u540e\uff0c \u5f80\u540e\u7684\u5ba3\u4f20\u7684\u529b\u5ea6\u548c\u6548\u679c\u90fd\u5c06\u5927\u5927\u4e0d\u5982\u4e4b\u524d\u3002<\/p>\n<p>\u540c\u65f6\u4e5f\u9700\u8981\u8003\u8651\u7684\u5c31\u662f\u57df\u540d\u548c\u6ce8\u518c\u7684\u95ee\u9898!!<\/p>\n<p>\u8981\u628a\u94b1\u82b1\u5728\u5200\u5203\u4e0a\uff0c \u8981\u820d\u5f97\u53bb\u82b1\u94b1\u3002app\u7684\u5236\u4f5c\u662f\u5fc5\u987b\u7684!!!!!!!!\u5c3d\u7ba1\u5927\u5bb6\u4f7f\u7528web\u7684\u65f6\u95f4\u5f88\u591a\uff0c \u4f46\u662f\u4e0b\u8f7d\u4e86\u4e00\u4e2aapp\u5c31\u662f\u62a4\u57ce\u6cb3\u3002<\/p>\n<p><strong>\u5bf9\u4e8e\u4e00\u4e9b\u7279\u522b\u4f18\u79c0\u7684\u4eba\uff0c \u4e00\u5b9a\u8981\u548c\u4ed6\u4eec\u7ecf\u5e38\u8ba8\u8bba\u4ea7\u54c1\u7684\u53d1\u5c55\u65b9\u5411\uff0c \u56e0\u4e3a\u5bf9\u4e8e\u4ed6\u4eec\u6765\u8bf4\uff0c \u4ed6\u4eec\u4e4b\u6240\u4ee5\u52a0\u5165\u4f60\uff0c \u5df2\u7ecf\u4e0d\u662f\u56e0\u4e3a\u6280\u672f\u7684\u5438\u5f15\u529b\u4e86\uff0c \u800c\u662f\u56e0\u4e3a\u4ed6\u7684\u58f0\u97f3\u5f88\u53ef\u80fd\u5728\u5851\u9020\u4ed6\u51c6\u5907\u63a8\u51fa\u7684\u4ea7\u54c1\uff0c \u56e0\u4e3a\u4ece\u672a\u6709\u7684\u5bf9\u4ea7\u54c1\u7684\u638c\u63a7\u529b\u3002\u800c\u8fd9\uff0c \u4e5f\u662f\u521b\u4e1a\u7684\u9b45\u529b\u5427!<\/strong><\/p>\n<h3>\u5e02\u573a\u63a8\u5e7f<\/h3><p>\u5386\u65f6\u4e00\u4e2a\u6708\u7684\u63a8\u5e7f\u5927\u8d5b\uff0c \u70e7\u4e8630\u4e07\uff08\u52a0\u4e0a\u5458\u5de5\u7684\u5de5\u8d44\uff09\uff0c \u6362\u6765\u7684\u662f\u4e00\u6b21\u6027\u7684\u7528\u6237\uff0c \u770b\u70ed\u95f9\u7684\u7528\u6237\uff0c \u6ce8\u518c\u4e863\u4e07\u591a\u4eba\uff0c \u7136\u800c\u6ca1\u6709\u4ec0\u4e48\u7528\u3002<\/p>\n<p>\u5982\u679c\u4f60\u6218\u7565\u4e0a\u4e0d\u662f\u5f88\u6e05\u6670\uff0c\u4f60\u518d\u505a\u4ec0\u4e48\u4e5f\u662f\u6ca1\u6709\u7528\u7684\uff0c<strong>\u662f\u5728\u7528\u6218\u672f\u6027\u7684\u75b2\u52b3\u63a9\u76d6\u6218\u7565\u4e0a\u7684\u61d2\u60f0<\/strong>\u3002\u767e\u573a\u6c47\u4e0d\u505c\u5730\u5728\u6218\u7565\u5c42\u9762\u505a\u4e00\u4e9b\u8c03\u6574\uff0c\u6240\u4ee5\u6218\u672f\u4e0a\u5927\u5bb6\u4e0d\u4f1a\u90a3\u4e48\u8f9b\u82e6\u3002\u4e00\u5e74\u6765\uff0c\u767e\u573a\u6c47\u5168\u516c\u53f8\u53ea\u6709\u4e00\u4e2a\u4eba\u79bb\u804c\u3002\u8fd9\u5bf9\u521d\u521b\u516c\u53f8\u6765\u8bf4\u662f\u5f88\u4e0d\u5bb9\u6613\u7684\u3002<\/p>\n<h2>\u5173\u4e8e\u529f\u80fd\u7684\u5b9e\u7528\u548c\u5671\u5934<\/h2><p>\u6709\u6ca1\u6709\u60f3\u8fc7\u5982\u679c\u5fae\u4fe1\u628a\u670b\u53cb\u5708\u7684\u529f\u80fd\u4f5c\u4e3a\u6bcf\u4e00\u6b21\u6253\u5f00\u7684\u521d\u59cb\u9875\u9762\uff1f\u800c\u4e0d\u662f\u4e00\u76f4\u4ee5\u6765\u7684\u7fa4\u7ec4\u6216\u8005\u5355\u804a\uff1f\u9996\u5c4f\u4e00\u5b9a\u8981\u653e\u4f60\u6700\u6700\u6838\u5fc3\u7684\u529f\u80fd\uff0c \u800c\u793e\u4ea4\u662f\u6700\u4e3a\u7528\u6237\u7c98\u6027\u7684\u65b9\u5f0f\u4e4b\u4e00\uff0c \u7edd\u5bf9\u4e0d\u80fd\u55a7\u5bbe\u593a\u4e3b\u3002\u6216\u8005\u8bf4\uff0c \u6240\u6709\u7684\u5de5\u5177\u5f0f\u7f51\u7ad9\uff0c \u90fd\u5e94\u8be5\u8003\u8651\u56f4\u7ed5\u90a3\u4e2a\u5de5\u5177\u6240\u6700\u6700\u5408\u9002\u7684\u793e\u4ea4\u573a\u666f\u3002<\/p>\n<p>\u6bd4\u5982\u5fae\u4fe1\u7684\u5de5\u5177\u5c5e\u6027\u662f\uff1a\u5373\u65f6\u901a\u8baf\u548c\u7fa4\u804a\uff0c \u90a3\u4e48\u804a\u5929\u7684\u793e\u4ea4\u573a\u666f\u5c31\u5e94\u8be5\u662f\uff1a \u8ba9\u66f4\u591a\u7684\u4eba\u53d1\u73b0\u804a\u5929\u7684\u5185\u5bb9\uff0c \u4e5f\u4ece\u7eaf\u6587\u5b57\u8f6c\u6362\u5230\u56fe\u7247\u548c\u89c6\u9891\u548c\u76f4\u64ad\uff0c \u4e43\u81f3\u53ef\u4ee5\u8ba9\u66f4\u591a\u7684\u4eba\u52a0\u5165\u548c\u611f\u53d7\u5230\u804a\u5929\u7684\u8fd9\u4e2a\u573a\u666f\u91cc\u9762\u3002<\/p>\n<p>\u6bd4\u5982\u7f51\u6613\u4e91\u97f3\u4e50\u7684\u5de5\u5177\u5c5e\u6027\u662f\uff1a \u53d1\u73b0\u548c\u4eab\u53d7\u9ad8\u54c1\u8d28\u97f3\u4e50\uff0c \u90a3\u4e48\u627e\u97f3\u4e50\u548c\u542c\u97f3\u4e50\u7684\u793e\u4ea4\u573a\u666f\u5c31\u5e94\u8be5\u662f\uff1a \u8ba9\u66f4\u591a\u7684\u4eba\u53bb\u53d1\u73b0\u4f60\u559c\u6b22\u548c\u6536\u85cf\u7684\u97f3\u4e50\uff0c \u5e76\u57fa\u4e8e\u8fd9\u4e9b\u97f3\u4e50\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u4ea4\u6d41\u3002\u800c\u6211\u89c9\u5f97\u4e00\u4e2a\u975e\u5e38\u975e\u5e38\u68d2\u7684\u529f\u80fd\u5c31\u662f\uff0c \u4e0d\u4ec5\u4ec5\u5141\u8bb8\u7528\u6237\u5206\u4eab\u4ed6\u4eec\u81ea\u5df1\u521b\u4f5c\u7684\u6b4c\u5355\uff0c \u800c\u4e14\u5141\u8bb8\u628a\u4ed6\u4eec\u6700\u5e38\u542c\u7684\u90a325\u9996\u6b4c\u663e\u793a\u51fa\u6765\u3002\u4f60\u4e0d\u4f1a\u6b3a\u9a97\u4f60\u81ea\u5df1\u7684\u8033\u6735\u3002\u5982\u679c\u53ef\u4ee5\u628a\u8fd9\u4e00\u680f\u66f4\u7a81\u51fa\u5730\u663e\u793a\u4f1a\u66f4\u597d\uff1f\uff01<\/p>\n<h2>\u5173\u4e8e\u5de5\u5177\u548c\u793e\u533a\u7684\u4ea4\u53e0\u548c\u77db\u76fe<\/h2><p>\u6bcf\u4e00\u4e2a\u9700\u6c42\u5728\u88ab\u89e3\u51b3\u7684\u65f6\u5019\uff0c \u4ea7\u54c1\u662f\u88ab\u5de5\u5177\u5316\u7684\uff0c \u800c\u5e0c\u671b\u63a8\u5e7f\u8fd9\u79cd\u89e3\u51b3\u65b9\u6848\u7684\u65f6\u5019\uff0c \u4ea7\u54c1\u662f\u88ab\u793e\u533a\u5316\u7684\u3002 \u73b0\u5728\u5927\u90e8\u5206\u56f4\u7ed5\u5de5\u5177\u6027\u4ea7\u54c1\u8fd8\u662f\u793e\u533a\u6027\u4ea7\u54c1\u7684\u8ba8\u8bba\uff0c \u5982\u679c\u88ab\u62bd\u8c61\u51fa\u4e86\u4ea7\u54c1\u672c\u8eab\u8981\u89e3\u51b3\u7684\u95ee\u9898\u7684\u8bdd\uff0c \u57fa\u672c\u90fd\u662f\u5e9f\u8bdd\u548c\u5e72\u6270\u3002 \u62ff\u4e24\u79cd\u4f7f\u7528\u573a\u666f\u548c\u9891\u7387\u6bd4\u8f83\u4e0d\u540c\u7684\u65b9\u5411\u505a\u6bd4\u8f83\uff0c \u6bd4\u5982\u542c\u97f3\u4e50\u548c\u65c5\u6e38\u8fd9\u4e24\u4e2a\u5546\u4e1a\u65b9\u5411\u3002 <\/p>\n<p>\u4eba\u4eec\u542c\u97f3\u4e50\u7684\u4e24\u4e2a\u9700\u6c42\uff0c \u5728\u81ea\u5df1\u75b2\u60eb\u4e0d\u723d\u7684\u65f6\u5019\u542c\u5230\u81ea\u5df1\u6700\u559c\u6b22\u7684\u97f3\u4e50\uff0c \u548c\u53d1\u73b0\u90a3\u4e9b\u4e0d\u8ba4\u8bc6\u5374\u597d\u542c\u7684\u97f3\u4e50\uff1b \u5f53\u7136\uff0c \u4eba\u4eec\u8fd8\u4f1a\u4ece\u5206\u4eab\u81ea\u5df1\u7ec4\u597d\u7684\u6b4c\u5355\u6216\u8005\u8bc4\u8bba\u91cc\u9762\u5f97\u5230\u5206\u4eab\u548c\u53cd\u9988\u7684\u6ee1\u8db3\uff0c\u4f46\u6211\u8ba4\u4e3a\u8fd9\u79cd\u884c\u4e3a\u662f\u56e0\u4e3a\u793e\u533a\u5316\u5e26\u6765\u7684\uff0c\u56e0\u4e3a\u5728\u4eba\u7fa4\u4e2d\uff0c \u6240\u4ee5\u4e5f\u60f3\u5f97\u5230\u4eba\u7fa4\u7684\u6e29\u6696\u548c\u5171\u9e23 \uff0c\u4f46\u8fd9\u79cd\u793e\u4f1a\u5fc3\u7406\u7684\u9700\u6c42\u6211\u6682\u4e0d\u5f52\u4e8e\u542c\u97f3\u4e50\u672c\u8eab\u7684\u9700\u6c42\u3002 \u5c31\u62ff\u7f51\u6613\u4e91\u97f3\u4e50APP\u4f5c\u4f8b\u5b50\uff0c \u5176\u672c\u8eab\u5728\u5f88\u591a\u7ec6\u8282\u4e0a\u505a\u5f97\u5f88\u68d2\u4e86\uff0c \u4f46\u662f\u6211\u8ba4\u4e3a\u8fd8\u53ef\u4ee5\u63d0\u9ad8\u7684\u5730\u65b9\uff1a<\/p>\n<p>\u57fa\u4e8e\u559c\u6b22\u540c\u4e00\u4e2a\u4e13\u8f91\u7684\u4e50\u4f17\u7684\u793e\u4ea4\u5174\u8da3\u5c0f\u7ec4\u3002\u4eba\u4eec\u5bf9\u81ea\u5df1\u559c\u6b22\u7684\u4e1c\u897f\u6c38\u8fdc\u90fd\u6709\u5982\u6570\u5bb6\u73cd\u822c\u7684\u70ed\u60c5\u3002<\/p>\n<p>\u4ece\u4f60\u4e0d\u4f1a\u9a97\u81ea\u5df1\u7684\u8033\u6735\uff0c \u4f60\u6700\u6700\u7ecf\u5e38\u542c\u768425\u9996\u6b4c\u3002<\/p>\n<p>\u540c\u6837\u53d1\u73b0\u522b\u4eba\u6700\u6700\u7ecf\u5e38\u542c\u768425\u9996\u6b4c\u3002<\/p>\n<p>\u7528\u6237\u5bf9\u6536\u96c6\u5230\u6b4c\u66f2\u7684\u5206\u7c7b\u7684\u81ea\u6211\u91cd\u7ec4\u3002 \u5e94\u5f53\u652f\u6301\u53cc\u5411\u7684\u6807\u8bb0\uff0c \u4e00\u662ftag\uff0c \u4e8c\u662fcollection\u3002\u50cf\u7ba1\u7406\u7b14\u8bb0\u4e00\u6837\u53bb\u7ba1\u7406\u97f3\u4e50\uff0c \u540c\u65f6\u5c06\u4efb\u4f55collection\u90fd\u6ce8\u91cd\u793e\u4ea4\u5316\u7684\u5206\u4eab\uff0c \u50cfpinterest\u7684\u7406\u5ff5\u5b66\u4e60\u3002<\/p>\n<p>\u8bc4\u8bba\u5206\u4e3a\u4e24\u680f\uff0c \u4e00\u680f\u662ftrending\uff0c \u4e00\u680f\u662f\u5386\u53f2\u6700\u70ed\u3002 trending\u8981\u50cfhackernews\u4e00\u6837\u7684\u4e0d\u65ad\u8ba9\u65b0\u4e8b\u7269\u6d8c\u73b0\u6765\u4ee3\u66ff\u65e7\u8bc4\u8bba\uff0c \u800c\u5386\u53f2\u6700\u70ed\uff0c \u5219\u662f\u5c31\u786c\u78b0\u786c\u7684\u8d28\u91cf\u3002\u539f\u56e0\uff1f\u4f60\u4e0d\u4f1a\u53bb\u53c2\u52a0\u4e00\u4e2a\u9ad8\u4f4e\u80dc\u8d1f\u5df2\u7ecf\u5206\u660e\u7684\u6bd4\u8d5b\u3002\u4f60\u4e4b\u6240\u501a\u8bc4\u8bba\uff0c \u4f60\u603b\u4f1a\u6709\u88ab\u53cd\u9988\u7684\u6e34\u671b\uff0c \u800c\u770b\u89c1\u81ea\u5df1\u7684\u6587\u5b57\u88ab\u6df9\u6ca1\u662f\u6700\u6700\u5931\u843d\u7684\uff0c \u54ea\u6015\u4f60\u77e5\u9053\u8fd9\u7684\u786e\u4e0d\u662f\u6700\u597d\u7684\u6587\u5b57~<\/p>\n<h2>\u5173\u4e8e\u671f\u6743\u6c60<\/h2><p>\u4ee5\u4e0b\u5185\u5bb9\uff0c \u6765\u6e90\u81ea\u77e5\u4e4e\u3002\u53ef\u53c2\u8003\uff1a<a href=\"http:\/\/zhuanlan.zhihu.com\/p\/20726127\" target=\"_blank\" rel=\"external\">\u77e5\u4e4e\u4e13\u680f<\/a>, \u4f5c\u8005\uff1a\u9ec4\u6d77, \u8457\u4f5c\u6743\u5f52\u4f5c\u8005\u6240\u6709\u3002<\/p>\n<p>\u53ef\u80fd\u6709\u521b\u4e1a\u8005\u4f1a\u95ee\u4e86\uff1a\u6211\u7ed9\u4e86\u5458\u5de5\u80a1\u4efd\uff0c\u4ed63\u4e2a\u6708\u4ee5\u540e\u5c31\u8df3\u69fd\u4e86\uff0c\u6211\u4e0d\u5c31\u4e8f\u4e86\u3002\u5f53\u7136\u4e0d\u4f1a\uff0c\u9996\u5148\u8bb0\u4f4f\u8fd9\u662f\u80a1\u6743\u6c60\uff0c\u4e0d\u662f\u80a1\u4efd\u6c60\u3002\u7ed9\u7684\u662f\u80a1\u6743\uff0c\u4e0d\u662f\u76f4\u63a5\u9001\u80a1\u4efd\u3002\u6240\u8c13\u80a1\u6743\uff0c\u5c31\u662f\u4e00\u5b9a\u65f6\u5019\uff0c\u53ef\u4ee5\u4ee5\u884c\u4f7f\u4ef7\u683c\u4e70\u5165\u80a1\u7968\uff0c\u8fd9\u4e2a\u884c\u4f7f\u4ef7\u683c\u7531\u8463\u4e8b\u4f1a\u51b3\u5b9a\uff0c\u4e00\u822c\u7279\u522b\u4f4e\u3002<\/p>\n<h3>\u6709\u80a1\u6743\u7684\u5458\u5de5\u548c\u521b\u59cb\u4eba\u7684\u533a\u522b<\/h3><p>\u4f60\u6700\u65e9\u7684\u5458\u5de5\u53ef\u80fd\u548c\u4f60\u4e00\u8d77\u5ea6\u8fc7\u4e86\u521b\u4e1a\u7684\u5168\u8fc7\u7a0b\uff0c\u800c\u4e14\u8fd8\u901a\u8fc7\u80a1\u6743\u6c60\u83b7\u5f97\u80a1\u6743\uff0c\u90a3\u4f60\u53ef\u80fd\u4f1a\u95ee\uff0c\u90a3\u4ed6\u4eec\u7b97\u521b\u59cb\u4eba\u4e48\uff1f<\/p>\n<p>\u7b54\u6848\u662f\uff0c\u4ed6\u4eec\u4e0e\u521b\u59cb\u4eba\u8fd8\u662f\u6709\u5f88\u5927\u4e0d\u540c\u7684\u3002\u9996\u5148\uff0c\u5982\u679c\u4ed6\u4eec\u4e0d\u884c\u4f7f\u6743\u5229\uff0c\u4ed6\u4eec\u751a\u81f3\u90fd\u4e0d\u7b97\u662f\u80a1\u4e1c\uff0c\u8bdd\u8bed\u6743\u5f53\u7136\u4e0d\u4e00\u6837\u3002\u53e6\u5916\u521b\u59cb\u4eba\u5f00\u59cb\u90fd\u662f\u3001\u6ca1\u6709\u5de5\u8d44\uff0c\u751a\u81f3\u81ea\u5df1\u5c31\u662f\u6295\u8d44\u4eba\uff0c\u627f\u62c5\u4e86\u6240\u6709\u7684\u98ce\u9669\u3002\u5458\u5de5\u5c31\u5f88\u4e0d\u4e00\u6837\uff0c\u4f9d\u7136\u662f\u96c7\u4f63\u5173\u7cfb\uff0c\u9664\u4e86\u5931\u4e1a\u98ce\u9669\u8f83\u5927\uff0c\u540c\u65f6\u52b3\u8d44\u53ef\u80fd\u76f8\u5bf9\u4f4e\uff0c\u4f46\u8fd9\u4e9b\u90fd\u662f\u4e2a\u4eba\u98ce\u9669\uff0c\u800c\u4e0d\u662f\u4f01\u4e1a\u98ce\u9669\u3002\u6240\u4ee5\u8fd8\u662f\u6709\u5f88\u5927\u533a\u522b\u7684\u3002<\/p>\n<p>\u8d8a\u8fdf\u52a0\u5165\u516c\u53f8\u7684\u5458\u5de5\u9700\u8981\u5192\u7684\u98ce\u9669\u8d8a\u4f4e\u3002<\/p>\n<p>\u521b\u59cb\u4eba\u5e94\u8be5\u6700\u7ec8\u62ff\u6574\u4e2a\u516c\u53f8\u5927\u7ea650%\u7684\u80a1\u4efd\u3002\u9996\u5c42\u4e0b\u9762\u76845\u5c42\u5458\u5de5\u7684\u6bcf\u4e00\u5c42\u6700\u7ec8\u90fd\u5206\u522b\u5206\u5230\u5927\u7ea610%\u7684\u516c\u53f8\u80a1\u4efd\uff0c\u6bcf\u4e00\u5c42\u7684\u5458\u5de5\u90fd\u5c06\u5e73\u5206\u8fd910%\u7684\u80a1\u4efd\u3002<\/p>\n<p>\u73b0\u5728\uff0c\u4f60\u641e\u5b9a\u4e86\u4e00\u4e2a\u516c\u5e73\u7684\u4efd\u80a1\u7cfb\u7edf\uff0c\u4f46\u8fd8\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u539f\u5219\uff1a\u4f60\u5fc5\u987b\u6267\u884c\u201c\u80a1\u4efd\u7ed1\u5b9a\u201d(vesting)\u3002\u80a1\u4efd\u7ed1\u5b9a\u671f\u6700\u597d\u662f 4 \u5230 5 \u5e74\u3002\u4efb\u4f55\u4eba\u90fd\u5fc5\u987b\u5728\u516c\u53f8\u505a\u591f\u8d77\u7801 1 \u5e74\u624d\u53ef\u6301\u6709\u80a1\u4efd\uff08\u5305\u62ec\u521b\u59cb\u4eba\uff09\u3002\u597d\u7684\u80a1\u4efd\u7ed1\u5b9a\u8ba1\u5212\u4e00\u822c\u662f\u5934\u4e00\u5e74\u7ed9 25%\uff0c\u7136\u540e\u63a5\u4e0b\u6765\u6bcf\u4e2a\u6708\u843d\u5b9e 2%\u3002\u5426\u5219\uff0c\u4f60\u7684\u5408\u4f5c\u521b\u59cb\u4eba\u5c06\u52a0\u5165\u516c\u53f8 3 \u4e2a\u661f\u671f\u540e\u8dd1\u6389\uff0c\u7136\u540e 7 \u5e74\u540e\u53c8\u51fa\u73b0\uff0c\u5e76\u58f0\u79f0\u4ed6\u62e5\u6709\u516c\u53f8\u7684 25% \u7684\u80a1\u4efd\u3002<\/p>\n<p>\u6ca1\u6709\u201c\u80a1\u4efd\u7ed1\u5b9a\u201d\u6761\u6b3e\uff0c\u4f60\u6d3e\u80a1\u4efd\u7ed9\u4efb\u4f55\u4eba\u90fd\u662f\u4e0d\u9760\u8c31\u7684\uff01<\/p>\n<p>\u6ca1\u6709\u6267\u884c\u201c\u80a1\u4efd\u7ed1\u5b9a\u201d\u662f\u6781\u5176\u666e\u904d\u7684\u73b0\u8c61\uff0c\u540e\u679c\u53ef\u4ee5\u5341\u5206\u4e25\u91cd\u3002\u4f60\u770b\u5230\u6709\u4e9b\u516c\u53f8\u7684 3 \u4e2a\u521b\u59cb\u4eba\u6ca1\u65e5\u6ca1\u591c\u5730\u5de5\u4f5c\u4e86 5 \u5e74\uff0c\u7136\u540e\u4f60\u53d1\u73b0\u6709\u4e9b\u6df7\u86cb\u52a0\u5165\u540e 2 \u4e2a\u661f\u671f\u5c31\u79bb\u5f00\uff0c\u8fd9\u6df7\u86cb\u8fd8\u4ee5\u4e3a\u4ed6\u4ecd\u7136\u62e5\u6709\u516c\u53f8 25% \u7684\u80a1\u4efd\uff0c\u5c31\u56e0\u4e3a\u4ed6\u5de5\u4f5c\u8fc7\u7684\u90a3 2 \u4e2a\u661f\u671f\u3002<\/p>\n<p>\u597d\u4e86\uff0c\u8ba9\u6211\u4eec\u6e05\u7406\u4e00\u4e0b\u6574\u4e2a\u8bbe\u8ba1\u84dd\u56fe\u4e2d\u6ca1\u641e\u5b9a\u7684\u5c0f\u95ee\u9898\u3002<\/p>\n<p>\u5982\u679c\u4f60\u7684\u516c\u53f8\u878d\u8d44\u4e86\uff0c\u80a1\u4efd\u5982\u4f55\u5206\u5272\uff1f<\/p>\n<p>\u6295\u8d44\u53ef\u4ee5\u6765\u81ea\u4efb\u4f55\u65b9\u5411\uff0c\u4e00\u4e2a\u5929\u4f7f\u6295\u8d44\u4eba\uff0c\u4e00\u4e2a\u98ce\u9669\u6295\u8d44\u516c\u53f8\uff0c\u6216\u8005\u662f\u67d0\u4eba\u7684\u8001\u7238\u3002\u57fa\u672c\u4e0a\uff0c\u56de\u7b54\u5f88\u7b80\u5355\uff1a<\/p>\n<p>\u65b0\u7684\u6295\u8d44\u5c06\u201c\u7a00\u91ca\u201d\u6240\u6709\u4eba\u7684\u80a1\u4efd\u3002<\/p>\n<p>\u5343\u4e07\u4e0d\u8981\u7528\u5206\u914d\u80a1\u6743\u6765\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002<\/p>\n<p>\u5176\u5b9e\uff0c\u4f60\u53ea\u9700\u8981\u9488\u5bf9\u6bcf\u4f4d\u521b\u59cb\u4eba\u62ff\u7684\u5de5\u8d44\u505a\u597d\u8bb0\u5e10\uff1a\u4e0d\u62ff\u5de5\u8d44\u521b\u59cb\u4eba\u5c31\u7ed9 \u5979\u8bb0\u7740\u5de5\u8d44\u201c\u6b20\u6761\u201d\u3002\u5f53\u516c\u53f8\u6709\u4e86\u8db3\u591f\u73b0\u91d1\uff0c\u5c31\u6839\u636e\u8fd9\u4e2a\u5de5\u8d44\u6b20\u6761\u8865\u53d1\u5de5\u8d44\u7ed9\u5979\u3002\u63a5\u4e0b\u6765\u7684\u51e0\u5e74\u4e2d\uff0c\u5f53\u516c\u53f8\u73b0\u91d1\u6536\u5165\u9010\u6b65\u589e\u52a0\uff0c\u6216\u8005\u5f53\u5b8c\u6210\u7b2c\u4e00\u8f6e\u98ce\u9669\u6295\u8d44\u540e\uff0c\u4f60\u53ef \u4ee5\u7ed9\u6bcf\u4e00\u4f4d\u521b\u59cb\u4eba\u8865\u53d1\u5de5\u8d44\uff0c\u4ee5\u786e\u4fdd\u6bcf\u4e00\u4f4d\u521b\u59cb\u4eba\u90fd\u53ef\u4ece\u516c\u53f8\u5f97\u5230\u5b8c\u5168\u4e00\u6837\u7684\u5de5\u8d44\u6536\u5165\u3002<\/p>\n<h3>\u521b\u4e1a\u6784\u60f3\u63d0\u51fa\u8005\u5e94\u8be5\u591a\u62ff\u80a1\u4efd\u5417\uff1f<\/h3><p>\u4e0d\u62ff\u3002\u6784\u60f3\u57fa\u672c\u4e0a\u662f\u4e0d\u503c\u94b1\u7684\u3002\u4ec5\u4ec5\u56e0\u4e3a\u63d0\u51fa\u521b\u4e1a\u6784\u60f3\u5c31\u83b7\u5f97\u66f4\u591a\u80a1 \u6743\uff0c\u56e0\u6b64\u5bfc\u81f4\u7eb7\u4e89\u662f\u4e0d\u503c\u5f97\u7684\u3002\u5982\u679c\u4f60\u4eec\u5f53\u4e2d\u6709\u4eba\u9996\u5148\u63d0\u51fa\u7684\u521b\u4e1a\u6784\u60f3\uff0c\u4f46\u4f60\u4eec\u90fd\u540c\u65f6\u8f9e\u5de5\u5e76\u540c\u65f6\u5f00\u59cb\u521b\u4e1a\uff0c\u4f60\u4eec\u5e94\u8be5\u62ff\u540c\u7b49\u7684\u80a1\u4efd\u3002\u4e3a\u516c\u53f8\u5de5\u4f5c\u624d\u662f\u521b\u9020\u4ef7\u503c\u7684\u539f \u56e0\uff0c\u800c\u4f60\u6d17\u6fa1\u7684\u65f6\u5019\u7a81\u53d1\u5947\u60f3\u7684\u201c\u521b\u4e1a\u70b9\u5b50\u201d\u6839\u672c\u4e0d\u503c\u4ec0\u4e48\u94b1\u3002<\/p>\n<h3>\u521b\u59cb\u4eba\u4e0d\u5168\u804c\u6295\u5165\u5de5\u4f5c\uff1f<\/h3><p>\u90a3\u4e48\uff0c\u4ed6\uff08\u4eec\uff09\u5c31\u4e0d\u80fd\u7b97\u662f\u201c\u521b\u59cb\u4eba\u201d\u3002\u5728\u6211\u7684\u6982\u5ff5\u4e2d\uff0c\u5982\u679c \u4e00\u4e2a\u4eba\u4e0d\u5168\u804c\u6295\u5165\u516c\u53f8\u7684\u5de5\u4f5c\u5c31\u4e0d\u80fd\u7b97\u662f\u521b\u59cb\u4eba\u3002\u4efb\u4f55\u8fb9\u5e72\u7740\u4ed6\u4eec\u5176\u5b83\u7684\u5168\u804c\u5de5\u4f5c\u8fb9\u5e2e\u516c\u53f8\u5e72\u6d3b\u7684\u4eba\u53ea\u80fd\u62ff\u5de5\u8d44\u6216\u8005\u5de5\u8d44\u201c\u6b20\u6761\u201d\uff0c\u4f46\u662f\u4e0d\u8981\u7ed9\u80a1\u4efd\u3002\u5982\u679c\u8fd9\u4e2a\u201c\u521b \u59cb\u4eba\u201d\u4e00\u76f4\u5e72\u7740\u67d0\u4efd\u5168\u804c\u5de5\u4f5c\u76f4\u5230\u516c\u53f8\u62ff\u5230\u98ce\u6295\uff0c\u7136\u540e\u8f9e\u5de5\u5168\u804c\u8fc7\u6765\u516c\u53f8\u5e72\u6d3b\uff0c\u4ed6\uff08\u4eec\uff09\u548c\u7b2c\u4e00\u6279\u5458\u5de5\u76f8\u6bd4\u597d\u4e0d\u4e86\u591a\u5c11\uff0c\u6bd5\u7adf\u4ed6\u4eec\u5e76\u6ca1\u6709\u5192\u5176\u4ed6\u521b\u59cb\u4eba\u4e00\u6837\u7684\u98ce\u9669\u3002<\/p>\n<h3>\u5982\u679c\u6709\u4eba\u7ed9\u516c\u53f8\u63d0\u4f9b\u6709\u4ef7\u503c\u7684\u4e1c\u897f\uff1f<\/h3><p>\u6bd4\u5982\u63d0\u4f9b\u4e86\u8bbe\u5907\uff0c \u4e13\u5229\u6216\u8005\u662f\u57df\u540d\u3002<\/p>\n<p>\u5f88\u597d\u554a\u3002\u6309\u8fd9\u4e9b\u4e1c\u897f\u7684\u4ef7\u503c\u652f\u4ed8\u73b0\u91d1\u6216\u5f00\u4e2a\u201c\u6b20\u6761\u201d\u54af\uff0c\u522b\u7ed9\u80a1\u4efd\u3002\u4f60\u51c6\u786e\u7b97\u4e00\u4e0b\u4ed6\u7ed9\u516c\u53f8\u5e26\u6765\u7684\u90a3\u53f0\u7535\u8111\u7684\u4ef7\u503c\uff0c\u6216\u8005\u4ed6\u4eec\u81ea\u5e26\u7684\u67d0\u4e2a\u806a\u660e\u7684\u5b57\u5904\u7406\u4e13\u5229\u7684\u4ef7\u683c\uff0c\u7ed9\u4ed6\u4eec\u5199\u4e0b\u6b20\u6761\uff0c\u516c\u53f8\u6709\u94b1\u540e\u518d\u507f\u8fd8\u5373\u53ef\u3002\u5728\u521b\u4e1a\u521d\u671f\u5c31\u7528\u80a1\u6743\u6765\u8d2d\u4e70\u67d0\u4e9b\u516c\u53f8\u9700\u8981\u7684\u4e1c\u897f\u5c06\u5bfc\u81f4\u4e0d\u5e73\u7b49\uff0c\u7eb7\u4e89\u548c\u4e0d\u516c\u5e73\u3002<\/p>\n<p><strong>\u518d\u91cd\u590d\u4e00\u904d!! \u7528\u6b20\u6761\uff0c \u800c\u4e0d\u662f\u80a1\u4efd\u89e3\u51b3\u95ee\u9898!!!!\u89e3\u51b3\u5927\u90e8\u5206\u7684\u8d44\u91d1\u7eb7\u4e89\u548c\u5404\u79cd\u5e2e\u52a9!!<\/strong><\/p>\n<p>\u4eca\u5929\u4e70\u6765\u7684\u7528\u6237\uff0c\u660e\u5929\u8fd8\u662f\u4e0d\u4f1a\u6210\u4e3a\u4f60\u7684\u54c1\u724c\u7528\u6237\u3002<\/p>"},{"title":"Angular\u5165\u95e8-module\u548cservice","link":"http:\/\/chocoluffy.com\/2016\/05\/12\/Angular%E5%85%A5%E9%97%A8-module%E5%92%8Cservice\/","guid":"http:\/\/chocoluffy.com\/2016\/05\/12\/Angular\u5165\u95e8-module\u548cservice\/","pubDate":"2016-05-13T02:43:51.000Z","categories":["angularjs","javascript","\u6280\u672f"],"author":"Shunzhe Yu","thumbnail":"","description":"<p>\u81ea\u5df1\u5b66\u4e60angular\u65f6\u5019\u8bb0\u5f55\u7684\u5b66\u4e60\u7b14\u8bb0\uff0c\u8fd9\u4e00\u7bc7\u4e3b\u8981\u8ba8\u8bbamodule\u548cservice\u3002<\/p>","content":"<p>\u81ea\u5df1\u5b66\u4e60angular\u65f6\u5019\u8bb0\u5f55\u7684\u5b66\u4e60\u7b14\u8bb0\uff0c\u8fd9\u4e00\u7bc7\u4e3b\u8981\u8ba8\u8bbamodule\u548cservice\u3002<\/p>\n<a><\/a>\n<h2>How to define a module?<\/h2><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><\/pre><\/td><td><pre><span><span>\/\/ define a module<\/span><\/span><br><span>angular.module(<span>'notesApp'<\/span>,<\/span><br><span>    [<span>'notesApp.ui'<\/span>, <span>'thirdCompany.fusioncharts'<\/span>]);<\/span><br><span><\/span><br><span><span>\/\/ look up a module.<\/span><\/span><br><span>angular.module(<span>'notesApp'<\/span>);<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>Also, make sure the file that defines the module is loaded first.<\/p>\n<p>After defining the module, we use Angular to use these modules to bootstrap the application. <code>ng-app<\/code> takes an optional argument, the name of the modulr to load.<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><\/pre><\/td><td><pre><span><span>&lt;<span>html<\/span> <span>ng-app<\/span>=<span>\"notesApp\"<\/span>&gt;<\/span><\/span><br><span>   <span>&lt;<span>head<\/span>&gt;<\/span><\/span><br><span>     <span>&lt;<span>title<\/span>&gt;<\/span>Hello AngularJS<span>&lt;\/<span>title<\/span>&gt;<\/span><\/span><br><span>    <span>&lt;\/<span>head<\/span>&gt;<\/span><\/span><br><span><span>&lt;<span>body<\/span>&gt;<\/span><\/span><br><span>      Hello { { 1 + 1 } }nd time AngularJS<\/span><br><span><span>&lt;<span>script<\/span> <span>src<\/span>=<span>\"https:\/\/ajax.googleapis.com\/ajax\/libs\/angularjs\/1.2.19\/angular.js\"<\/span>&gt;<\/span><span><\/span><br><span><\/span><span>&lt;\/<span>script<\/span>&gt;<\/span><\/span><br><span><span>&lt;<span>script<\/span> <span>type<\/span>=<span>\"text\/javascript\"<\/span>&gt;<\/span><span><\/span><br><span>angular.module(<span>'notesApp'<\/span>, []); <\/span><span>&lt;\/<span>script<\/span>&gt;<\/span><\/span><br><span><span>&lt;\/<span>body<\/span>&gt;<\/span><\/span><br><span><span>&lt;\/<span>html<\/span>&gt;<\/span><\/span><br><\/pre><\/td><\/tr><\/table><\/figure><h2>Controller in Angular<\/h2><ul><li>fetching data from server to UI.<\/li>\n<li>presentation logic.<\/li>\n<li>user interaction, what will happen when user clicks something. <\/li>\n<\/ul><p>An AngularJS controller is almost always directly linked to a view or HTML. We will <strong>never have a controller that is not used in the UI<\/strong> (that kind of business logic goes into services).<\/p>\n<h3>HTML code<\/h3><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><\/pre><\/td><td><pre><span><span>&lt;<span>script<\/span> <span>type<\/span>=<span>\"text\/javascript\"<\/span>&gt;<\/span><span><\/span><br><span>angular.module(<span>'notesApp'<\/span>, []) .controller(<span>'MainCtrl'<\/span>, [<span><span>function<\/span>(<span><\/span>) <\/span>{<\/span><br><span>          <span>\/\/ Controller-specific code goes here<\/span><\/span><br><span>          <span>console<\/span>.log(<span>'MainCtrl has been created'<\/span>);<\/span><br><span>        }]);<\/span><br><span><\/span><span>&lt;\/<span>script<\/span>&gt;<\/span><\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>The above code define a module that depends on nothing, and a controller and its dependencies in the second argument, an array(the last argument in that array is the actual function itself).<\/p>\n<p>We also introduce a new directive, ng-controller. This is used to tell AngularJS to go instantiate an instance of the controller with the given name, and attach it to the DOM element. In this case, it would load MainCtrl, which would end up printing the console.log() statement.<\/p>\n<h3>Angular code<\/h3><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><span>20<\/span><br><span>21<\/span><br><\/pre><\/td><td><pre><span><span>&lt;<span>html<\/span> <span>ng-app<\/span>=<span>\"notesApp\"<\/span>&gt;<\/span> <\/span><br><span><span>&lt;<span>head<\/span>&gt;<\/span><\/span><br><span>  <span>&lt;<span>title<\/span>&gt;<\/span>Notes App<span>&lt;\/<span>title<\/span>&gt;<\/span><\/span><br><span><span>&lt;\/<span>head<\/span>&gt;<\/span><\/span><br><span><span>&lt;<span>body<\/span> <span>ng-controller<\/span>=<span>\"MainCtrl as ctrl\"<\/span>&gt;<\/span><\/span><br><span>      { { ctrl.helloMsg } } AngularJS.<\/span><br><span>      <span>&lt;<span>br<\/span>\/&gt;<\/span><\/span><br><span>      { { ctrl.goodbyeMsg } } AngularJS<\/span><br><span><span>&lt;<span>script<\/span> <span>src<\/span>=<span>\"https:\/\/ajax.googleapis.com\/ajax\/libs\/angularjs\/1.2.19\/angular.js\"<\/span>&gt;<\/span><span><\/span><br><span><\/span><span>&lt;\/<span>script<\/span>&gt;<\/span><\/span><br><span><span>&lt;<span>script<\/span> <span>type<\/span>=<span>\"text\/javascript\"<\/span>&gt;<\/span><span><\/span><br><span>angular.module(<span>'notesApp'<\/span>, [])<\/span><br><span>  .controller(<span>'MainCtrl'<\/span>, [<span><span>function<\/span><span>()<\/span> <\/span>{<\/span><br><span>    <span>this<\/span>.helloMsg = <span>'Hello '<\/span>;<\/span><br><span>    <span>var<\/span> goodbyeMsg = <span>'Goodbye '<\/span>;<\/span><br><span>    }<\/span><br><span>  ]<\/span><br><span>);<\/span><br><span><\/span><span>&lt;\/<span>script<\/span>&gt;<\/span><\/span><br><span><span>&lt;\/<span>body<\/span>&gt;<\/span><\/span><br><span><span>&lt;\/<span>html<\/span>&gt;<\/span><\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>The reason why it only shows the the hello message it that: We <strong>defined the variable helloMsg on the controller\u2019s instance<\/strong> (using the \u201cthis\u201d keyword, and it is how we expose the data from controller to front-end UI), and the variable goodbyeMsg as a local inner variable in the controller\u2019s in\u2010 stance (using the var keyword).<\/p>\n<p>By using <code>ng-controller<\/code>, it allows us to associate an instance of controller with a UI element, in this case, the <\/p> tag.\n<p>\u201cThis\u201d in javascipt, since it will be easily modified by whoever call the function, which causes the case that \u201cthis\u201d inside and outside the function(the asychcronous function) may refer to two different objects. Thus, using a proxy variable will help!! Since with the help of the closure, that proxy varibale will always stay the same(pointing to \u201cthis\u201d) inside the function.<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><\/pre><\/td><td><pre><span><span>&lt;<span>div<\/span> <span>ng-repeat<\/span>=<span>\"note in ctrl.notes\"<\/span>&gt;<\/span><\/span><br><span><span>&lt;<span>span<\/span> <span>class<\/span>=<span>\"label\"<\/span>&gt;<\/span> { { note.label } }<span>&lt;\/<span>span<\/span>&gt;<\/span><\/span><br><span><span>&lt;<span>span<\/span> <span>class<\/span>=<span>\"status\"<\/span> <span>ng-bind<\/span>=<span>\"note.done\"<\/span>&gt;<\/span><span>&lt;\/<span>span<\/span>&gt;<\/span><\/span><br><span><span>&lt;\/<span>div<\/span>&gt;<\/span><\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>The two methods appear above are the same effect, but we recommend the second way, since the second one will be replaced before the the first one. <\/p>\n<h2>Angular\u2019s working flow<\/h2><p>After the entire HTML is loaded, angular.js starts to find the <code>ng-app<\/code> directive, then using that directive, it looks for the angular modules defined and attached to that DOM element. <\/p>\n<p>Then it starts to find other directive and binding elements inside the range. Every it meets <code>ng-controller<\/code> or <code>ng-repeat<\/code>, it creates a scope for that part of element. <strong>scopr is the context of that element<\/strong>, and it dictates what each DOM has access to in terms of functions, variables and so on.<\/p>\n<p>Angular also adds <strong>watcher and listeners<\/strong> on HTML\u2019s DOM element.<\/p>\n<p>The way angular update the UI, only happens for a certain events including XHR, server calls, page loads and user interaction such clicks and type.<\/p>\n<h3>what is XHR?<\/h3><p>XMLHttpRequest (XHR) is an API available to web browser scripting languages such as JavaScript. It is used to send HTTP or HTTPS requests to a web server and load the server response data back into the script.<\/p>\n<p>Data from the response can be used to alter the current document in the browser window without loading a new web page, and despite the name of the API, this data can be in the form of not only XML, but also JSON, HTML or plain text.<\/p>\n<p>Ajax depends heavily on XHR.<\/p>\n<h2>More directive<\/h2><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><\/pre><\/td><td><pre><span><span>&lt;<span>div<\/span> <span>ng-repeat<\/span>=<span>\"note in ctrl.notes\"<\/span> <span>ng-class<\/span>=<span>\"ctrl.getNoteClass(note.done)\"<\/span>&gt;<\/span><\/span><br><span>  <span>&lt;<span>span<\/span> <span>class<\/span>=<span>\"label\"<\/span>&gt;<\/span> { { note.label } }<span>&lt;\/<span>span<\/span>&gt;<\/span><\/span><br><span>  <span>&lt;<span>span<\/span> <span>class<\/span>=<span>\"assignee\"<\/span> <span>ng-show<\/span>=<span>\"note.assignee\"<\/span> <span>ng-bind<\/span>=<span>\"note.assignee\"<\/span>&gt;<\/span><span>&lt;\/<span>span<\/span>&gt;<\/span><\/span><br><span><span>&lt;\/<span>div<\/span>&gt;<\/span><\/span><br><\/pre><\/td><\/tr><\/table><\/figure><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><\/pre><\/td><td><pre><span>self.getNoteClass = <span><span>function<\/span>(<span>status<\/span>) <\/span>{ <\/span><br><span>  <span>return<\/span> {<\/span><br><span>    done: status,<\/span><br><span>    pending: !status<\/span><br><span>  };<\/span><br><span>};<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p><code>ng-show<\/code> and <code>ng-hide<\/code> can help display or hide the DOM element. <code>ng-class<\/code> will add class to DOM element depending on the [1] if it is string [2] it is a json object, assign the key by the value of that key. <code>ng-switch on=\"&lt;some variable value in scopr&gt;\"<\/code> with <code>ng-switch-when=\"&lt;the conditional value of that variable&gt;\"<\/code> will create the if-else effect directly in html.<\/p>\n<h2>Testing in Angularjs<\/h2><h3>Test Runner Versus Testing Framework<\/h3><p>We have often noticed that developers can sometimes get confused between the test runner and the testing framework. This could be because the same library often handles both responsibilities.<\/p>\n<p>When working with JS (and AngularJS), we have two separate tools\/ libraries for each purpose. Karma, which is the test runner, is solely responsible for finding all the unit tests in our codebase, opening browsers, running the tests in them, and capturing results. It does not care what language or framework we use for writing the tests; it sim\u2010 ply runs them.<\/p>\n<p>Jasmine is the testing framework we will use. Jasmine defines the syntax with which we write our tests, the APIs, and the way we write our assertions. It is possible to not use Jasmine, and instead use something like mocha or some other framework to write tests for AngularJS.<\/p>\n<h2>Model in angular<\/h2><p>The <code>ng-bind<\/code> and \u201c{ {  } }\u201d we see in the above example demonstrates the one-way data-binding in angular, to use two-way data-binding, we opt for <code>ng-model<\/code>. As expected, such functionality is heavily used in user form.<\/p>\n<h2>Angular\u2019s service<\/h2><p>service refers to reuseable api that can be shared across the applications. One obvious difference between controllers and services is <strong>services are independent of views<\/strong>, while controllers drives UI.  <\/p>\n<h3>Dependency injection<\/h3><p><strong>Dependency injection is a concept that started more on the server side.<\/strong> Dependency injection states that instead of creating an instance of the dependent service when we need it, the class or function should ask for it instead and the \u201cinjector\u201d will be responsible for figuring out how to create it.<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><\/pre><\/td><td><pre><span><span>\/\/ Without Dependency Injection<\/span><\/span><br><span><span><span>function<\/span> <span>fetchDashboardData<\/span>(<span><\/span>) <\/span>{<\/span><br><span>  <span>var<\/span> $http = <span>new<\/span> HttpService();<\/span><br><span>  <span>return<\/span> $http.get(<span>'my\/url'<\/span>);<\/span><br><span>}<\/span><br><span><\/span><br><span><span>\/\/ With Dependency Injection<\/span><\/span><br><span><span><span>function<\/span> <span>fetchDashboardData<\/span>(<span>$http<\/span>) <\/span>{<\/span><br><span>  <span>return<\/span> $http.get(<span>'my\/url'<\/span>);<\/span><br><span>}<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>The two probable ways to write service and why the latter is better? In the first example, we use \u201cnew\u201d keyword, we have new instance everytime we use service while <strong>service in angular is singletons for the scope of our application, <\/strong> and two controllers ask for service A will get the vary same instance!<\/p>\n<p>To use built-in services, we should remember that the built-in services are prefixed with \u201c<code>$<\/code>\u201c sign like \u201c<code>$log<\/code>\u201c, \u201c<code>$http<\/code>\u201c and so on.<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><\/pre><\/td><td><pre><span>myModule.controller(<span>\"MainCtrl\"<\/span>, [<span>\"$log\"<\/span>, <span><span>function<\/span>(<span>$log<\/span>) <\/span>{}]);<\/span><br><span><\/span><br><span>myModule.controller(<span>\"MainCtrl\"<\/span>, <span><span>function<\/span>(<span>$log<\/span>) <\/span>{});<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>And here are the two ways we usually inject services, but why we prefer the former one, the one with safe style of dependency injection. <\/p>\n<p>Because of the \u201cuglify\u201d procedure. During the uglifing process, the variable will be shortened to some random string, while at that time, we won\u2019t be able to tell which service it is using! Also, since the \u201cuglify\u201d won\u2019t change string constant, it will help to identify which service we are using. <\/p>\n<p>Why we call \u201cinjection\u201d? because the way we use those services like <code>myModule.controller(\"MainCtrl\", [\"$log\", \"$window\", function($l, $w) {}]);<\/code> is similar to injecting those services for the function to use. <\/p>\n<h3>Some common services<\/h3><h4>$location<\/h4><p>The <code>$location<\/code> service in AngularJS allows us to interact with the URL in the browser bar, and get and manipulate its value. Any changes made to the <code>$location<\/code> service get reflected in the browser, and any changes in the browser are im\u2010 mediately captured in the <code>$location<\/code> service. The <code>$location<\/code> service has the fol\u2010 lowing functions, which allow us to work with the URL:<\/p>\n<ul><li>absUrl. A getter that gives us the absolute URL in the browser (called <code>$location<\/code>. absUrl()).<\/li>\n<li>url. A getter and setter that gets or sets the URL. If we give it an argument, it will set the URL; otherwise, it will return the URL as a string.<\/li>\n<li>path. Again, a getter and setter that sets the path of the URL. Automatically adds the forward slash at the beginning. So <code>$location.path()<\/code> would give us the current path of the application, and <code>$location.path(\"\/new\")<\/code> would set the path to \/new.<\/li>\n<li>search. Sets or gets the search or query string of the current URL. Calling <code>$location.search()<\/code> without any arguments returns the search parameter as an ob\u2010 ject. Calling <code>$location.search(\"test\")<\/code> removes the search parameter from the URL, and calling <code>$location.search(\"test\", \"abc\");<\/code> sets the search parameter test to abc.<\/li>\n<\/ul><h4>$http<\/h4><p>We will deal with <code>$http<\/code> extensively in Chapter 6, but it is the core AngularJS service used to make XHR requests to the server from the application. Using the <code>$http<\/code> service, we can make GET and POST requests, set the headers and caching, and deal with server responses and failures.<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><span>20<\/span><br><span>21<\/span><br><span>22<\/span><br><span>23<\/span><br><span>24<\/span><br><span>25<\/span><br><span>26<\/span><br><span>27<\/span><br><span>28<\/span><br><span>29<\/span><br><span>30<\/span><br><span>31<\/span><br><span>32<\/span><br><span>33<\/span><br><span>34<\/span><br><span>35<\/span><br><span>36<\/span><br><span>37<\/span><br><\/pre><\/td><td><pre><span>angular.module(<span>'notesApp'<\/span>, [])<\/span><br><span>  .controller(<span>'MainCtrl'<\/span>, [<span><span>function<\/span>(<span><\/span>) <\/span>{<\/span><br><span>    <span>var<\/span> self = <span>this<\/span>;<\/span><br><span>    self.tab = <span>'first'<\/span>;<\/span><br><span>    self.open = <span><span>function<\/span>(<span>tab<\/span>) <\/span>{<\/span><br><span>      self.tab = tab;<\/span><br><span>    };<\/span><br><span>    }])<\/span><br><span>  .controller(<span>'SubCtrl'<\/span>, [<span>'ItemService'<\/span>, <span><span>function<\/span>(<span>ItemService<\/span>) <\/span>{<\/span><br><span>    <span>var<\/span> self = <span>this<\/span>; self.list = <span><span>function<\/span>(<span><\/span>) <\/span>{<\/span><br><span>    <span>return<\/span> ItemService.list(); <\/span><br><span>    };<\/span><br><span>    <\/span><br><span>    self.add = <span><span>function<\/span>(<span><\/span>) <\/span>{<\/span><br><span>      ItemService.add({<\/span><br><span>        id: self.list().length + <span>1<\/span>,<\/span><br><span>        label: <span>'Item '<\/span> + self.list().length<\/span><br><span>      });<\/span><br><span>    };<\/span><br><span>    }])<\/span><br><span>  <\/span><br><span>  <span>\/\/ we created ItemService using angular's module function: factory. <\/span><\/span><br><span>  .factory(<span>'ItemService'<\/span>, [<span><span>function<\/span>(<span><\/span>) <\/span>{ <\/span><br><span>    <span>var<\/span> items = [<\/span><br><span>      {id: <span>1<\/span>, label: <span>'Item 0'<\/span>},<\/span><br><span>      {id: <span>2<\/span>, label: <span>'Item 1'<\/span>}<\/span><br><span>    ];<\/span><br><span>    <span>return<\/span> {<\/span><br><span>      list: <span><span>function<\/span>(<span><\/span>) <\/span>{<\/span><br><span>        <span>return<\/span> items; <\/span><br><span>      },<\/span><br><span>      add: <span><span>function<\/span>(<span>item<\/span>) <\/span>{<\/span><br><span>        items.push(item);<\/span><br><span>      } <\/span><br><span>    };<\/span><br><span>  }]<\/span><br><span>);<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>The point in the above example is that if we add one more item in one of the tabs, we can also see that item in the other tab, because the itemService instance in both tabs are the same. To summerize:<\/p>\n<p>AngularJS guarantees the following:<\/p>\n<ul><li>The service will be lazily instantiated. The very first time a controller, service, or directive asks for the service, it will be created.<\/li>\n<li>The service definition function will be called once, and the instance stored. Every caller of this service will get this same, singleton instance handed to them.<\/li>\n<\/ul><h3>Factory, provider and service<\/h3><p><strong>There are several ways to defining a service: factory, provider and service.<\/strong><\/p>\n<p>we use \u201cfactory\u201d if we define the service in a more functional way, like in the previous example, we return an object that contains functions; or we can use \u201cservice\u201d if we define the service in a classic class\\OO way, which doesn\u2019t return anything. <\/p>\n<p>An example of using \u201cserive\u201d is followed:<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><span>20<\/span><br><span>21<\/span><br><span>22<\/span><br><span>23<\/span><br><span>24<\/span><br><span>25<\/span><br><span>26<\/span><br><span>27<\/span><br><span>28<\/span><br><span>29<\/span><br><span>30<\/span><br><span>31<\/span><br><span>32<\/span><br><span>33<\/span><br><span>34<\/span><br><\/pre><\/td><td><pre><span><span><span>function<\/span> <span>ItemService<\/span>(<span><\/span>) <\/span>{<\/span><br><span>  <span>var<\/span> items = [<\/span><br><span>        {id: <span>1<\/span>, label: <span>'Item 0'<\/span>},<\/span><br><span>        {id: <span>2<\/span>, label: <span>'Item 1'<\/span>}<\/span><br><span>      ];<\/span><br><span>  <span>this<\/span>.list = <span><span>function<\/span>(<span><\/span>) <\/span>{<\/span><br><span>    <span>return<\/span> items;<\/span><br><span>  };<\/span><br><span><\/span><br><span>  <span>this<\/span>.add = <span><span>function<\/span>(<span>item<\/span>) <\/span>{<\/span><br><span>        items.push(item);<\/span><br><span>  };<\/span><br><span>}<\/span><br><span><\/span><br><span>angular.module(<span>'notesApp'<\/span>, [])<\/span><br><span>  .service(<span>'ItemService'<\/span>, [ItemService])<\/span><br><span>  .controller(<span>'MainCtrl'<\/span>, [<span><span>function<\/span>(<span><\/span>) <\/span>{<\/span><br><span>    <span>var<\/span> self = <span>this<\/span>;<\/span><br><span>    self.tab = <span>'first'<\/span>; self.open = <span><span>function<\/span>(<span>tab<\/span>) <\/span>{<\/span><br><span>          self.tab = tab;<\/span><br><span>    };<\/span><br><span>  }])<\/span><br><span>  .controller(<span>'SubCtrl'<\/span>, [<span>'ItemService'<\/span>, <span><span>function<\/span>(<span>ItemService<\/span>) <\/span>{<\/span><br><span>    <span>var<\/span> self = <span>this<\/span>; self.list = <span><span>function<\/span>(<span><\/span>) <\/span>{<\/span><br><span>      <span>return<\/span> ItemService.list(); <\/span><br><span>    };<\/span><br><span>    self.add = <span><span>function<\/span>(<span><\/span>) <\/span>{<\/span><br><span>      ItemService.add({<\/span><br><span>            id: self.list().length + <span>1<\/span>,<\/span><br><span>            label: <span>'Item '<\/span> + self.list().length<\/span><br><span>      });<\/span><br><span>    };<\/span><br><span>  }]<\/span><br><span>);<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><h3>Communication with server<\/h3><p><code>$http<\/code> is a core AngularJS service that allows us to communicate with server endpoints using XHR. Like XHR such tedious task, we usually instantiate a XMLHttpRequest Object and read the response, check the error codes and so on, or using jquery\u2019s <code>$.ajax<\/code> syntax. <\/p>\n<p>Also, it follows the Promise interface.<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><\/pre><\/td><td><pre><span>angular.module(<span>'resourceApp'<\/span>, [<span>'ngResource'<\/span>])<\/span><br><span>    .factory(<span>'ProjectService'<\/span>, [<span>'$resource'<\/span>, <span><span>function<\/span>(<span>$resource<\/span>) <\/span>{<\/span><br><span>      <span>return<\/span> $resource(<span>'\/api\/project\/:id'<\/span>); <\/span><br><span>    }]);<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p><strong>use <code>ngResource<\/code> to handle RESTful API <\/strong> as it will make it extremely easy to send the \u201cGET\u201d\\\u201dPOST\u201d request to the server. In the above example, we produce a service called \u201cProjectService\u201d, which depends on the built-in module called \u201c<code>$resource<\/code>\u201c, which wraps the RESTful endpoint to make our life easier as we can then use:<\/p>\n<ul><li>ProjectService.query() to get a list of projects.<\/li>\n<li>ProjectService.save({id: 15}, projectObj) to update a project with ID 15.<\/li>\n<li>ProjectService.get({id: 19}) to get an individual project with ID 19.<\/li>\n<\/ul><p>The following is a full-fledged example, showing how to use <code>ngResource<\/code> in front end to cooperate with the back end.<\/p>\n<div markdown=\"1\"><br><br><p>Your browser does not support iframes.<\/p><br><br><\/div>\n\n<p>The source code is listed as followed:<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><span>20<\/span><br><span>21<\/span><br><span>22<\/span><br><span>23<\/span><br><span>24<\/span><br><span>25<\/span><br><span>26<\/span><br><span>27<\/span><br><span>28<\/span><br><span>29<\/span><br><span>30<\/span><br><span>31<\/span><br><span>32<\/span><br><span>33<\/span><br><span>34<\/span><br><span>35<\/span><br><span>36<\/span><br><span>37<\/span><br><span>38<\/span><br><span>39<\/span><br><span>40<\/span><br><span>41<\/span><br><span>42<\/span><br><span>43<\/span><br><span>44<\/span><br><span>45<\/span><br><span>46<\/span><br><span>47<\/span><br><span>48<\/span><br><span>49<\/span><br><span>50<\/span><br><span>51<\/span><br><span>52<\/span><br><span>53<\/span><br><span>54<\/span><br><span>55<\/span><br><span>56<\/span><br><span>57<\/span><br><span>58<\/span><br><span>59<\/span><br><span>60<\/span><br><span>61<\/span><br><span>62<\/span><br><span>63<\/span><br><span>64<\/span><br><span>65<\/span><br><span>66<\/span><br><span>67<\/span><br><span>68<\/span><br><span>69<\/span><br><span>70<\/span><br><span>71<\/span><br><span>72<\/span><br><span>73<\/span><br><span>74<\/span><br><span>75<\/span><br><span>76<\/span><br><span>77<\/span><br><span>78<\/span><br><span>79<\/span><br><span>80<\/span><br><span>81<\/span><br><span>82<\/span><br><span>83<\/span><br><span>84<\/span><br><\/pre><\/td><td><pre><span><span>\/\/ server.js (Express 4.0)<\/span><\/span><br><span><span>var<\/span> express        = <span>require<\/span>(<span>'express'<\/span>);<\/span><br><span><span>var<\/span> morgan         = <span>require<\/span>(<span>'morgan'<\/span>);<\/span><br><span><span>var<\/span> bodyParser     = <span>require<\/span>(<span>'body-parser'<\/span>);<\/span><br><span><span>var<\/span> methodOverride = <span>require<\/span>(<span>'method-override'<\/span>);<\/span><br><span><span>var<\/span> app            = express();<\/span><br><span><\/span><br><span>app.use(express.static(__dirname + <span>'\/public'<\/span>)); <span>\/\/ this line is important as we will serve those html file directly in screen as option, in those html front-end example, we will use angular's ngResource to create http request for the backend of this server.js (the endpoint we just created using express's router).<\/span><\/span><br><span>app.use(morgan(<span>'dev'<\/span>)); \t\t\t\t\t<span>\/\/ log every request to the console<\/span><\/span><br><span>app.use(bodyParser()); \t\t\t\t\t\t<span>\/\/ pull information from html in POST<\/span><\/span><br><span>app.use(methodOverride()); \t\t\t\t\t<span>\/\/ simulate DELETE and PUT<\/span><\/span><br><span><\/span><br><span><\/span><br><span><span>var<\/span> router = express.Router();<\/span><br><span><\/span><br><span><span>var<\/span> notes = [<\/span><br><span>  {id: <span>1<\/span>, label: <span>'First Note'<\/span>, author: <span>'Shyam'<\/span>},<\/span><br><span>  {id: <span>2<\/span>, label: <span>'Second Note'<\/span>, author: <span>'Brad'<\/span>},<\/span><br><span>  {id: <span>3<\/span>, label: <span>'Middle Note'<\/span>, author: <span>'Someone'<\/span>},<\/span><br><span>  {id: <span>4<\/span>, label: <span>'Last Note'<\/span>, author: <span>'Shyam'<\/span>},<\/span><br><span>  {id: <span>5<\/span>, label: <span>'Really the last Note'<\/span>, author: <span>'Shyam'<\/span>}<\/span><br><span><\/span><br><span>];<\/span><br><span><span>var<\/span> lastId = <span>6<\/span>;<\/span><br><span><\/span><br><span>router.get(<span>'\/note'<\/span>, <span><span>function<\/span>(<span>req, res<\/span>) <\/span>{<\/span><br><span>  res.send(notes);<\/span><br><span>});<\/span><br><span>router.post(<span>'\/note'<\/span>, <span><span>function<\/span>(<span>req, res<\/span>) <\/span>{<\/span><br><span>  <span>var<\/span> note = req.body;<\/span><br><span>  note.id = lastId; <span>\/\/ An smart way to keep track of the last id.<\/span><\/span><br><span>  lastId++;<\/span><br><span>  notes.push(note);<\/span><br><span>  res.send(note);<\/span><br><span>});<\/span><br><span><\/span><br><span><\/span><br><span>router.post(<span>'\/note\/:id\/done'<\/span>, <span><span>function<\/span>(<span>req, res<\/span>) <\/span>{<\/span><br><span>  <span>var<\/span> noteId = req.params.id;<\/span><br><span>  <span>var<\/span> note = <span>null<\/span>;<\/span><br><span>  <span>for<\/span> (<span>var<\/span> i = <span>0<\/span>; i &lt; notes.length; i++) {<\/span><br><span>    <span>if<\/span> (notes[i].id == req.params.id) {<\/span><br><span>      note = notes[i];<\/span><br><span>      <span>break<\/span>;<\/span><br><span>    }<\/span><br><span>  }<\/span><br><span>  note.label = <span>'Done - '<\/span> + note.label;<\/span><br><span>  res.send(notes);<\/span><br><span>});<\/span><br><span><\/span><br><span>router.get(<span>'\/note\/:id'<\/span>, <span><span>function<\/span>(<span>req, res<\/span>) <\/span>{<\/span><br><span>  <span>for<\/span> (<span>var<\/span> i = <span>0<\/span>; i &lt; notes.length; i++) {<\/span><br><span>    <span>if<\/span> (notes[i].id == req.params.id) {<\/span><br><span>      res.send(notes[i]);<\/span><br><span>      <span>break<\/span>;<\/span><br><span>    }<\/span><br><span>  }<\/span><br><span>  res.send({msg: <span>'Note not found'<\/span>}, <span>404<\/span>);<\/span><br><span>});<\/span><br><span><\/span><br><span>router.post(<span>'\/note\/:id'<\/span>, <span><span>function<\/span>(<span>req, res<\/span>) <\/span>{<\/span><br><span>  <span>for<\/span> (<span>var<\/span> i = <span>0<\/span>; i &lt; notes.length; i++) {<\/span><br><span>    <span>if<\/span> (notes[i].id == req.params.id) {<\/span><br><span>      notes[i] = req.body;<\/span><br><span>      notes[i].id = req.params.id;<\/span><br><span>      res.send(notes[i]);<\/span><br><span>      <span>break<\/span>;<\/span><br><span>    }<\/span><br><span>  }<\/span><br><span>  res.send({msg: <span>'Note not found'<\/span>}, <span>404<\/span>);<\/span><br><span>});<\/span><br><span><\/span><br><span>router.post(<span>'\/login'<\/span>, <span><span>function<\/span>(<span>req, res<\/span>) <\/span>{<\/span><br><span>  <span>console<\/span>.log(<span>'API LOGIN FOR '<\/span>, req.body);<\/span><br><span>  res.send({msg: <span>'Login successful for '<\/span> + req.body.username});<\/span><br><span>});<\/span><br><span><\/span><br><span><\/span><br><span>app.use(<span>'\/api'<\/span>, router);<\/span><br><span><\/span><br><span><\/span><br><span><\/span><br><span>app.listen(<span>8000<\/span>);<\/span><br><span><span>console<\/span>.log(<span>'Open http:\/\/localhost:8000 to access the files now'<\/span>); <span>\/\/ shoutout to the user<\/span><\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>And the front-end part code is:<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><span>20<\/span><br><span>21<\/span><br><span>22<\/span><br><span>23<\/span><br><span>24<\/span><br><span>25<\/span><br><span>26<\/span><br><span>27<\/span><br><span>28<\/span><br><span>29<\/span><br><span>30<\/span><br><span>31<\/span><br><span>32<\/span><br><span>33<\/span><br><span>34<\/span><br><span>35<\/span><br><span>36<\/span><br><span>37<\/span><br><span>38<\/span><br><span>39<\/span><br><span>40<\/span><br><span>41<\/span><br><span>42<\/span><br><span>43<\/span><br><span>44<\/span><br><span>45<\/span><br><span>46<\/span><br><span>47<\/span><br><span>48<\/span><br><span>49<\/span><br><span>50<\/span><br><span>51<\/span><br><span>52<\/span><br><span>53<\/span><br><span>54<\/span><br><span>55<\/span><br><span>56<\/span><br><span>57<\/span><br><span>58<\/span><br><span>59<\/span><br><span>60<\/span><br><span>61<\/span><br><span>62<\/span><br><span>63<\/span><br><span>64<\/span><br><span>65<\/span><br><span>66<\/span><br><span>67<\/span><br><span>68<\/span><br><span>69<\/span><br><span>70<\/span><br><span>71<\/span><br><\/pre><\/td><td><pre><span><span>&lt;!-- File: chapter6\/public\/http-post-example.html --&gt;<\/span><\/span><br><span><span>&lt;<span>html<\/span> <span>ng-app<\/span>=<span>\"notesApp\"<\/span>&gt;<\/span><\/span><br><span><\/span><br><span><span>&lt;<span>head<\/span>&gt;<\/span><\/span><br><span>  <span>&lt;<span>title<\/span>&gt;<\/span>HTTP Post Example<span>&lt;\/<span>title<\/span>&gt;<\/span><\/span><br><span>  <span>&lt;<span>style<\/span>&gt;<\/span><span><\/span><br><span>    <span>.item<\/span> <span>{<\/span><br><span>      <span><span>padding<\/span>:<span> <span>10px<\/span><\/span><\/span>;<\/span><br><span>    }<\/span><\/span><br><span>  <\/span><span>&lt;\/<span>style<\/span>&gt;<\/span><\/span><br><span><span>&lt;\/<span>head<\/span>&gt;<\/span><\/span><br><span><\/span><br><span><span>&lt;<span>body<\/span> <span>ng-controller<\/span>=<span>\"MainCtrl as mainCtrl\"<\/span>&gt;<\/span><\/span><br><span>  <span>&lt;<span>h1<\/span>&gt;<\/span>Hello Servers!<span>&lt;\/<span>h1<\/span>&gt;<\/span><\/span><br><span>  <span>&lt;<span>div<\/span> <span>ng-repeat<\/span>=<span>\"todo in mainCtrl.items\"<\/span><\/span><br><span>       <span>class<\/span>=<span>\"item\"<\/span>&gt;<\/span><\/span><br><span>    <span>&lt;<span>div<\/span>&gt;<\/span><span>&lt;<span>span<\/span> <span>ng-bind<\/span>=<span>\"todo.label\"<\/span>&gt;<\/span><span>&lt;\/<span>span<\/span>&gt;<\/span><span>&lt;\/<span>div<\/span>&gt;<\/span><\/span><br><span>    <span>&lt;<span>div<\/span>&gt;<\/span>- by <span>&lt;<span>span<\/span> <span>ng-bind<\/span>=<span>\"todo.author\"<\/span>&gt;<\/span><span>&lt;\/<span>span<\/span>&gt;<\/span><span>&lt;\/<span>div<\/span>&gt;<\/span><\/span><br><span>    <span>&lt;<span>div<\/span>&gt;<\/span><span>&lt;<span>span<\/span> <span>ng-bind<\/span>=<span>\"todo.messege\"<\/span>&gt;<\/span><span>&lt;\/<span>span<\/span>&gt;<\/span><span>&lt;\/<span>div<\/span>&gt;<\/span><\/span><br><span>  <span>&lt;\/<span>div<\/span>&gt;<\/span><\/span><br><span><\/span><br><span>  <span>&lt;<span>div<\/span>&gt;<\/span><\/span><br><span>    <span>&lt;<span>form<\/span> <span>name<\/span>=<span>\"addForm\"<\/span><\/span><br><span>          <span>ng-submit<\/span>=<span>\"mainCtrl.add()\"<\/span>&gt;<\/span><\/span><br><span>      <span>&lt;<span>input<\/span> <span>type<\/span>=<span>\"text\"<\/span><\/span><br><span>             <span>placeholder<\/span>=<span>\"Label\"<\/span><\/span><br><span>             <span>ng-model<\/span>=<span>\"mainCtrl.newTodo.label\"<\/span><\/span><br><span>             <span>required<\/span>&gt;<\/span><\/span><br><span>      <span>&lt;<span>input<\/span> <span>type<\/span>=<span>\"text\"<\/span><\/span><br><span>             <span>placeholder<\/span>=<span>\"Author\"<\/span><\/span><br><span>             <span>ng-model<\/span>=<span>\"mainCtrl.newTodo.author\"<\/span><\/span><br><span>             <span>required<\/span>&gt;<\/span><\/span><br><span>      <span>&lt;<span>input<\/span> <span>type<\/span>=<span>\"text\"<\/span> <span>placeholder<\/span>=<span>\"messege\"<\/span> <span>ng-model<\/span>=<span>\"mainCtrl.newTodo.messege\"<\/span> <span>required<\/span>&gt;<\/span><\/span><br><span>      <span>&lt;<span>input<\/span> <span>type<\/span>=<span>\"submit\"<\/span><\/span><br><span>             <span>value<\/span>=<span>\"Add\"<\/span><\/span><br><span>             <span>ng-disabled<\/span>=<span>\"addForm.$invalid\"<\/span>&gt;<\/span><\/span><br><span>    <span>&lt;\/<span>form<\/span>&gt;<\/span><\/span><br><span>  <span>&lt;\/<span>div<\/span>&gt;<\/span><\/span><br><span><\/span><br><span><span>&lt;<span>script<\/span><\/span><br><span>  <span>src<\/span>=<span>\"https:\/\/ajax.googleapis.com\/ajax\/libs\/angularjs\/1.3.11\/angular.js\"<\/span>&gt;<\/span><span><\/span><br><span><\/span><span>&lt;\/<span>script<\/span>&gt;<\/span><\/span><br><span><span>&lt;<span>script<\/span>&gt;<\/span><span><\/span><br><span>  angular.module(<span>'notesApp'<\/span>, [])<\/span><br><span>    .controller(<span>'MainCtrl'<\/span>, [<span>'$http'<\/span>, <span><span>function<\/span><span>($http)<\/span> <\/span>{<\/span><br><span>      <span>var<\/span> self = <span>this<\/span>;<\/span><br><span>      self.items = [];<\/span><br><span>      self.newTodo = {};<\/span><br><span>      <span>var<\/span> fetchTodos = <span><span>function<\/span><span>()<\/span> <\/span>{<\/span><br><span>        <span>return<\/span> $http.<span>get<\/span>(<span>'\/api\/note'<\/span>).then(<\/span><br><span>            <span><span>function<\/span><span>(response)<\/span> <\/span>{<\/span><br><span>              self.items = response.data; <span>\/\/ set the items to be the return data.<\/span><\/span><br><span>            }, <span><span>function<\/span><span>(errResponse)<\/span> <\/span>{<\/span><br><span>              console.error(<span>'Error while fetching notes'<\/span>);<\/span><br><span>            });<\/span><br><span>      };<\/span><br><span><\/span><br><span>      fetchTodos();<\/span><br><span><\/span><br><span>      self.add = <span><span>function<\/span><span>()<\/span> <\/span>{<\/span><br><span>        $http.post(<span>'\/api\/note'<\/span>, self.newTodo)<\/span><br><span>            .then(fetchTodos) <span>\/\/ update items.<\/span><\/span><br><span>            .then(<span><span>function<\/span><span>(response)<\/span> <\/span>{<\/span><br><span>              self.newTodo = {}; <span>\/\/ clear the form.<\/span><\/span><br><span>            });<\/span><br><span>      };<\/span><br><span><\/span><br><span>    }]);<\/span><br><span><\/span><span>&lt;\/<span>script<\/span>&gt;<\/span><\/span><br><span><span>&lt;\/<span>body<\/span>&gt;<\/span><\/span><br><span><span>&lt;\/<span>html<\/span>&gt;<\/span><\/span><br><\/pre><\/td><\/tr><\/table><\/figure><h3>$http in detail<\/h3><p>Promise-style syntax.<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><\/pre><\/td><td><pre><span>angular.module(<span>'notesApp'<\/span>, [])<\/span><br><span>  .controller(<span>'MainCtrl'<\/span>, [<span>'$http'<\/span>, <span><span>function<\/span>(<span>$http<\/span>) <\/span>{<\/span><br><span>    <span>var<\/span> self = <span>this<\/span>;<\/span><br><span>    self.items = [];<\/span><br><span>    $http.get(<span>'\/api\/note'<\/span>).then(<span><span>function<\/span>(<span>response<\/span>) <\/span>{<\/span><br><span>      self.items = response.data;<\/span><br><span>      }, <span><span>function<\/span>(<span>errResponse<\/span>) <\/span>{<\/span><br><span>          <span>console<\/span>.error(<span>'Error while fetching notes'<\/span>);<\/span><br><span>        });<\/span><br><span>  }]<\/span><br><span>);<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>why Promise is better? try thinking about a case when we have to make 3 http request in a row, when the latter ones will depend on the information from the first ones. If using callbacks, we will need to nest them all together!<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><\/pre><\/td><td><pre><span>$http.get(<span>'\/api\/server-config'<\/span>)<\/span><br><span>  .then(<span><span>function<\/span>(<span>configResponse<\/span>) <\/span>{<\/span><br><span>    <span>return<\/span> $http.get(<span>'\/api\/'<\/span> + configResponse.data.USER_END_POINT);<\/span><br><span>  })<\/span><br><span>  .then(<span><span>function<\/span>(<span>userResponse<\/span>) <\/span>{<\/span><br><span>    <span>return<\/span> $http.get(<span>'\/api\/'<\/span> + userResponse.data.id + <span>'\/items'<\/span>);<\/span><br><span>  })<\/span><br><span>  .then(<span><span>function<\/span>(<span>itemResponse<\/span>) <\/span>{ <\/span><br><span>    <span>\/\/ Display items here<\/span><\/span><br><span>  }, <span><span>function<\/span>(<span>error<\/span>) <\/span>{<\/span><br><span>    <span>\/\/ Common error handling<\/span><\/span><br><span>});<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><h2>Additional information<\/h2><h3>difference between Promise and callback in js?<\/h3><p>As for their effect, they are pretty like the same in terms of being asynchronous while Promise\u2019s syntax looks far more clear than nested callbacks.<\/p>\n<p>Promises provide a more succinct and clear way of representing sequential asynchronous operations in javascript. They are effectively a different syntax for achieving the same effect as callbacks. The advantage is increased readability. Something like this<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><\/pre><\/td><td><pre><span>aAsync()<\/span><br><span>  .then(bAsync)<\/span><br><span>  .then(cAsync)<\/span><br><span>  .done(finish);<\/span><br><span><span>\/\/ Promise is much more readable then the equivalent of passing each of those individual functions as callbacks, like:<\/span><\/span><br><span><\/span><br><span>Async(<span><span>function<\/span>(<span><\/span>)<\/span>{<\/span><br><span>    <span>return<\/span> bAsync(<span><span>function<\/span>(<span><\/span>)<\/span>{<\/span><br><span>        <span>return<\/span> cAsync(<span><span>function<\/span>(<span><\/span>)<\/span>{<\/span><br><span>            finish()<\/span><br><span>        })<\/span><br><span>    })<\/span><br><span>});<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>\u7b80\u5355\u6765\u8bf4\uff0c Promise\u5c31\u662fsyntactic sugar\u3002Everything that can be written in Promise can be written in nested callbacks.<\/p>\n<h3>difference between websocket and RESTful API?<\/h3><p>It really depends on the context, whether it requires less interaction like reading a blog, or requires time browsing; or it requires rich interaction and messege sending. For the former, close the connection during reading or browsing may actually save resources, which is exactly what HTTP does, while the latter one calls for websocket!!<\/p>\n<p><strong>HTTP is a pull service, while websocket is bidirectional.<\/strong><\/p>\n<p>\u53c2\u8003<a href=\"https:\/\/www.pubnub.com\/blog\/2015-01-05-websockets-vs-rest-api-understanding-the-difference\/\" target=\"_blank\" rel=\"external\">\u8fd9\u7bc7\u535a\u5ba2<\/a>\u4ecb\u7ecd\u5f97\u975e\u5e38\u8be6\u7ec6!!<\/p>"},{"title":"\u4e00\u6d3e\u80e1\u8a00[\u7b2c\u4e09\u671f]-\u6c11\u4e3b\u7684\u4e0d\u6ee1","link":"http:\/\/chocoluffy.com\/2016\/05\/07\/%E4%B8%80%E6%B4%BE%E8%83%A1%E8%A8%80-%E7%AC%AC%E4%B8%89%E6%9C%9F-%E6%B0%91%E4%B8%BB%E7%9A%84%E4%B8%8D%E6%BB%A1\/","guid":"http:\/\/chocoluffy.com\/2016\/05\/07\/\u4e00\u6d3e\u80e1\u8a00-\u7b2c\u4e09\u671f-\u6c11\u4e3b\u7684\u4e0d\u6ee1\/","pubDate":"2016-05-08T01:07:37.000Z","categories":["\u516c\u4f17\u53f7\u6587\u7ae0","\u793e\u4f1a\u4eba\u7269","\u8bfb\u4e66\u7b14\u8bb0","\u539f\u521b"],"author":"Shunzhe Yu","thumbnail":"","description":"<p>\u6211\u4e0d\u6e05\u695a\u6211\u7684\u9009\u62e9\u4f1a\u662f\u4ec0\u4e48\uff0c \u4f46\u8fd9\u5e76\u4e0d\u662f\u6211\u62d2\u7edd\u53bb\u770b\u8fd9\u4e2a\u95ee\u9898\u7684\u7406\u7531\uff0c \u6216\u8bb8\u5728\u76f8\u4fe1\u4ed6\u4eec\u9488\u950b\u76f8\u5bf9\u7684\u80cc\u540e\uff0c \u5c31\u662f\u6211\u7684\u7acb\u573a\u3002<\/p>","content":"<p>\u6211\u4e0d\u6e05\u695a\u6211\u7684\u9009\u62e9\u4f1a\u662f\u4ec0\u4e48\uff0c \u4f46\u8fd9\u5e76\u4e0d\u662f\u6211\u62d2\u7edd\u53bb\u770b\u8fd9\u4e2a\u95ee\u9898\u7684\u7406\u7531\uff0c \u6216\u8bb8\u5728\u76f8\u4fe1\u4ed6\u4eec\u9488\u950b\u76f8\u5bf9\u7684\u80cc\u540e\uff0c \u5c31\u662f\u6211\u7684\u7acb\u573a\u3002<\/p>\n<a><\/a>\n<div markdown=\"1\"><img src=\"http:\/\/ac-tc2vc5tu.clouddn.com\/772fc5772b052551.jpeg\" alt=\"flower\"><\/div>\n\n<p>\u81ea\u7531\uff0c \u5c31\u5728\u4e8e\u4eba\u4eec\u9009\u62e9\u4ed6\u4eec\u4ef7\u503c\u4e0e\u76ee\u6807\u7684\u80fd\u529b\u3002<\/p>\n<p>\u6211\u4eec\u5728\u653f\u6cbb\u751f\u6d3b\u4e2d\u516c\u6c11\u7684\u6216\u8005\u5851\u9020\u6027\u7684\u4e00\u9762\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\uff0c \u5df2\u7ecf\u8ba9\u4f4d\u4e8e\u81ea\u7531\u4e3b\u4e49\u3002 \u800c\u8fd9\u6b63\u662f\u6211\u4eec\u73b0\u5728\u53c2\u4e0e\u653f\u6cbb\u6d3b\u52a8\u7684\u56f0\u5883\uff0c \u653f\u6cbb\uff0c \u6216\u8005\u8bf4\uff0c \u516c\u5171\u54f2\u5b66\uff0c \u662f\u5426\u5e94\u8be5\u5177\u6709\u5851\u9020\u6027\u3002<\/p>\n<p>\u53e4\u4ee3\u7684\u653f\u6cbb\u7406\u8bba\uff0c \u6bd4\u5982\u4e9a\u91cc\u58eb\u591a\u5fb7\uff0c \u8ba4\u4e3a\u653f\u6cbb\u7684\u76ee\u6807\u5c31\u662f\u57f9\u517b\u5fb7\u884c\u548c\u8fbe\u5230\u67d0\u79cd\u7684\u5584\u3002\u800c\u8fd9\u79cd\u8fbe\u5230\u67d0\u79cd\u5584\u7684\u89c2\u70b9\uff0c \u5728\u73b0\u5728\u975e\u5e38\u5bb9\u6613\u88ab\u53cd\u9a73\uff0c \u6211\u4eec\u5f88\u5bb9\u6613\u8bf4\uff0c \u8fd9\u662f\u4ef7\u503c\u5224\u65ad\uff0c \u4ec0\u4e48\u662f\u5584\u5462\uff1f\u4ec0\u4e48\u662f\u4f60\u8ba4\u4e3a\u7684\u5584\u7684\u5462\uff1f\u5148\u629b\u5f00\u4ef7\u503c\u5224\u65ad\u7684\u8fd9\u79cd\u505a\u6cd5\u6765\u8bf4\uff0c \u6bd5\u7adf\u5982\u679c\u5728\u60c5\u613f\u5bf9\u4e00\u4ef6\u4e8b\uff0c \u4e00\u79cd\u6001\u5ea6\u6df1\u5165\u4e86\u89e3\u4e4b\u524d\u5c31\u653e\u5f03\u4e86\u89e3\u5b83\u7684\u673a\u4f1a\u7684\u8bdd\uff0c \u6211\u4eec\u4f1a\u9519\u8fc7\u5f88\u5b9d\u8d35\u7684\u4e1c\u897f\u3002\u56de\u5230\u8fd9\u79cd\u826f\u5584\u7684\u60f3\u6cd5\uff0c \u5176\u5b9e\u8fd9\u79cd\u89c2\u5ff5\u81ea\u7136\u5730\u4f1a\u53d1\u5c55\u51fa\u4e00\u79cd\u793e\u4f1a\u5951\u7ea6\u8bba\uff0c \u800c\u8fd9\u4e2a\u5951\u7ea6\u7684\u76ee\u7684\u6b63\u662f\u4fdd\u8bc1\u4eba\u4eec\u5f80\u90a3\u79cd\u5584\u7684\u65b9\u5411\u53d1\u5c55\u3002\u5b83\u8981\u6c42\u4eba\u4eec\u9700\u8981\u6709\u5bf9\u516c\u5171\u4e8b\u52a1\u7684\u77e5\u8bc6\uff0c \u5f52\u5c5e\u611f\uff0c \u5bf9\u96c6\u4f53\u7684\u5173\u7cfb\uff0c \u548c\u5171\u540c\u9053\u5fb7\u7684\u7ef4\u7cfb\uff0c \u4e00\u79cd\u516c\u6c11\u7684\u53c2\u4e0e\u611f\uff08\u76f8\u6bd4\u4e8e\u73b0\u5728\u7684\u81ea\u7531\u4e3b\u4e49\uff09\u3002<\/p>\n<p>\u5bf9\u4e00\u4e2a\u5171\u540c\u65b9\u5411\u7684\u8ba4\u53ef\uff0c \u610f\u5473\u7740\u727a\u7272\u67d0\u4e9b\u4e2a\u4eba\u610f\u613f\u3002\u8fd9\u662f\u6211\u4eec\u90fd\u80fd\u60f3\u5230\u7684\uff0c \u800c\u8fd9\u79cd\u53d6\u820d\uff0c \u6216\u8bb8\u5c31\u662f\u5176\u4e2d\u4e00\u4e2a\u5b9a\u4e49\u4e86\u81ea\u7531\u4e3b\u4e49\u548c\u4e0a\u8ff0\u5171\u548c\u4e3b\u4e49\u7684\u533a\u522b\u4e4b\u4e00\u3002\u81ea\u7531\u4e3b\u4e49\u7684\u5ba3\u626c\u8005\u4f1a\u8bf4\uff0c \u653f\u6cbb\u7406\u8bba\u4e0d\u662f\u67d0\u79cd\u7279\u5b9a\u7684\u826f\u5584\u751f\u6d3b\u89c2\u5ff5\uff0c \u800c\u662f\u575a\u6301\u5bbd\u5bb9\u3001\u516c\u6b63\u7684\u7a0b\u5e8f\u4ee5\u53ca\u5c0a\u91cd\u4e2a\u4eba\u6743\u5229\uff0c \u4ece\u5404\u79cd\u7f8e\u56fd\u6700\u9ad8\u6cd5\u9662\u7684\u5224\u51b3\u6848\u4f8b\u6211\u4eec\u4e5f\u80fd\u770b\u51fa\u4e00\u4e9b\u503e\u5411\u6027\uff0c \u81ea\u7531\u8a00\u8bba\u7684\u6743\u5229\u662f\u88ab\u7f8e\u56fd\u4eba\u6c11\u954c\u523b\u5728\u5fc3\u7684\u4e00\u79cdinborn\u6743\u5229\uff0c \u6cd5\u5b98\u5bf9\u4efb\u4f55\u6709\u53ef\u80fd\u4f24\u5bb3\u5230\u8fd9\u79cd\u81ea\u7531\u7684\u55c5\u89c9\u662f\u5f02\u5e38\u7075\u654f\uff0c \u6216\u8bb8\u4e5f\u662f\u7f18\u56e0\u7f8e\u56fd\u4eba\u5fc3\u91cc\u5bf9\u5927\u653f\u5e9c\u5929\u751f\u7684\u53cd\u611f\u3002<\/p>\n<p>\u6211\u4eec\u80fd\u4e0d\u80fd\u7528\u4e4b\u524d\u6240\u8bf4\u7684\u4ef7\u503c\u5224\u65ad\u8fd9\u79cd\u8bf4\u6cd5\uff0c \u6765\u6307\u51fa\u5171\u548c\u4e3b\u4e49\u7684\u95ee\u9898\u800c\u652f\u6301\u81ea\u7531\u4e3b\u4e49\u5462\uff1f \u5176\u5b9e\u4ed4\u7ec6\u60f3\u60f3\uff0c \u8fd9\u79cd\u4ef7\u503c\u5224\u65ad\u7684\u8bba\u65ad\u6838\u5fc3\u662f\u76f8\u5bf9\u4e3b\u4e49\u3002 \u76f8\u5bf9\u4e3b\u4e49\u7684\u4e00\u4e2a\u660e\u663e\u7684\u6807\u5fd7\u5c31\u662f\uff0c \u4e0d\u53bb\u4e3b\u5f20\u4ec0\u4e48\uff0c \u800c\u662f\u53d8\u73b0\u4e3a\u8d28\u95ee\u201c\u8c01\u6765\u5224\u65ad\uff1f\u8c01\u6765\u51b3\u5b9a\uff1f\u201d\u3002 \u4ed6\u4eec\u4f1a\u95ee\uff0c \u4ec0\u4e48\u662f\u826f\u5584\uff1f\u4ec0\u4e48\u662f\u9ad8\u96c5\u548c\u6c61\u79fd\uff1f \u7136\u800c\u6211\u4eec\u4e5f\u53ef\u7531\u6b64\u95ee\u56de\u4ed6\u4eec\u201c\u4ec0\u4e48\u624d\u662f\u4ed6\u4eec\u53e3\u4e2d\u7684\u5bbd\u5bb9\u3001\u81ea\u7531\u548c\u516c\u5e73\u5462\uff1f\u201d\u3002\u4ee5\u76f8\u5bf9\u4e3b\u4e49\u6765\u4e3a\u81ea\u7531\u4e3b\u4e49\u8fa9\u62a4\u6839\u672c\u5c31\u7b97\u4e0d\u4e0a\u662f\u4e00\u79cd\u8fa9\u62a4\u3002<\/p>\n<p>\u4f46\u4ed4\u7ec6\u53bb\u8ffd\u7a76\u81ea\u7531\u4e3b\u4e49\u548c\u5171\u548c\u4e3b\u4e49\uff0c \u6211\u4eec\u4f1a\u53d1\u73b0\u4e00\u4e2a\u7ecf\u5e38\u63d0\u51fa\u7684\u95ee\u9898\uff0c \u6743\u5229\u548c\u5584\u54ea\u4e2a\u66f4\u91cd\u8981\uff1f\u8fd9\u91cc\u7684\u5584\uff0c \u6211\u4eec\u53ef\u4ee5\u60f3\u4e3a\u662f\u4e00\u79cd\u9053\u5fb7\u4e0a\u7684\u4e49\u52a1\uff0c \u548c\u8ba4\u540c\u3002\u6211\u4eec\u7a76\u7adf\u662f\u4e00\u526f\u65e0\u8d1f\u8377\u81ea\u6211\uff08the unencumbered self\uff09\u7684\u81ea\u7531\u4e3b\u4e49\u5f62\u8c61, \u8fd8\u662f\u4e3a\u6211\u4eec\u5bb6\u5ead\u3001\u6c11\u65cf\u3001\u6587\u5316\u7684\u8eab\u4efd\u6240\u8d4b\u4e88\u7684\u76ee\u6807\u6240\u675f\u7f1a\uff1f\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c \u4e5f\u6b63\u662f\u8fd9\u4e9b\u675f\u7f1a\u5e26\u7ed9\u6211\u4eec\u56f0\u5883\u548c\u75db\u82e6\u3002<\/p>\n<p>\u4e3e\u4e00\u4e2a\u6817\u5b50\uff0c \u5185\u6218\u524d\u7684\u7f57\u4f2f\u7279\u674e\u5927\u5c06\u519b\uff0c \u8eab\u4e3a\u8054\u90a6\u519b\u961f\u7684\u4e00\u540d\u9ad8\u7ea7\u5c06\u9886\uff0c \u674e\u5c06\u519b\u53cd\u5bf9\u5206\u88c2\uff0c \u7136\u540e\u518d\u6218\u4e89\u8feb\u8fd1\u7684\u65f6\u5019\uff0c \u4ed6\u8ba4\u4e3a\u4ed6\u5bf9\u5f17\u5409\u5c3c\u4e9a\u5dde\u7684\u8d23\u4efb\u8d85\u8fc7\u4e86\u4ed6\u5bf9\u8054\u90a6\u7684\u8d23\u4efb\uff0c \u4e8e\u662f\u4ed6\u6bc5\u7136\u4f1a\u5230\u5bb6\u4e61\uff0c \u548c\u4ed6\u7684\u5bb6\u4e61\u4eba\u6c11\u5171\u60a3\u96be\u3002\u4e00\u4e2a\u8ba9\u4eba\u5fc3\u9178\u7684\u56f0\u5883\u3002\u5982\u679c\u6211\u4eec\u8ba4\u4e3a\uff0c\u4e0e\u81ea\u5df1\u4eba\u6c11\u7ad9\u5728\u4e00\u8d77\u7684\u53ec\u5524\u662f\u4e00\u79cd\u9053\u5fb7\u8981\u6c42\u800c\u4e0d\u662f\u60c5\u611f\u8868\u8fbe\u7684\u8bdd\uff0c \u8fd9\u6b63\u662f\u5370\u8bc1\u4e86\u524d\u6587\u5173\u4e8e\u826f\u5584\uff0c \u5173\u4e8e\u9053\u5fb7\u4e49\u52a1\u4e0a\u7684\u56f0\u5883\u3002\u76f8\u53cd\uff0c \u4e00\u4e2a\u81ea\u7531\u4e3b\u4e49\u8005\uff0c \u4ed6\u4eec\u6ca1\u6709\u8fd9\u6837\u5b50\u7684\u675f\u7f1a\uff0c \u4ed6\u4eec\u53ea\u4e3a\u4ed6\u4eec\u9009\u62e9\u53bb\u627f\u62c5\u7684\u8d23\u4efb\u6240\u7ea6\u675f\uff0c \u4e5f\u53ea\u53bb\u627f\u62c5\u4ed6\u4eec\u9009\u62e9\u53bb\u627f\u62c5\u7684\u90e8\u5206\u3002\u4ed4\u7ec6\u60f3\u60f3\uff0c \u6211\u4eec\u5176\u5b9e\u5e38\u5e38\u5d07\u656c\u8fd9\u4e9b\u50cf\u674e\u5c06\u519b\u4e00\u6837\u7684\u4eba\uff0c\u4e0d\u4e00\u5b9a\u662f\u56e0\u4e3a\u4ed6\u4eec\u505a\u51fa\u7684\u9009\u62e9\uff0c \u800c\u662f\u56e0\u4e3a\u4ed6\u4eec\u7684\u8003\u8651\u6240\u53cd\u6620\u7684\u7279\u8d28\uff0d\uff0d\u4f5c\u4e3a\u80fd\u591f\u53cd\u601d\u81ea\u8eab\u5904\u5883\u7684\u5b58\u5728\u8005\uff0c \u770b\u6e05\u695a\u81ea\u5df1\u7684\u751f\u547d\u5904\u5883\u5e76\u62c5\u5f53\u8d77\u6765\uff0c \u81ea\u5df1\u6df1\u6df1\u5377\u5165\u5176\u4e2d\u7684\u7279\u5b9a\u751f\u6d3b\u5bf9\u81ea\u5df1\u6709\u6240\u8981\u6c42\uff0c \u800c\u81ea\u5df1\u53c8\u610f\u8bc6\u5230\u8fd9\u79cd\u751f\u6d3b\u7684\u7279\u6b8a\u6027\uff0c \u4e5f\u5c31\u662f\u8bf4\u610f\u8bc6\u5230\u5b58\u5728\u66f4\u52a0\u5e7f\u9614\u7684\u4e16\u754c\uff0c \u53e6\u5916\u7684\u751f\u6d3b\u65b9\u5f0f\u3002<\/p>\n<p>\u4e66\u6458 \u6458\u81ea\u300a\u6c11\u4e3b\u7684\u4e0d\u6ee1\u300b<\/p>\n<p>2015.7.26<\/p>"},{"title":"AWS elastic beanstalk\u4f7f\u7528\u4f53\u9a8c","link":"http:\/\/chocoluffy.com\/2016\/05\/04\/AWS-elastic-beanstalk%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C\/","guid":"http:\/\/chocoluffy.com\/2016\/05\/04\/AWS-elastic-beanstalk\u4f7f\u7528\u4f53\u9a8c\/","pubDate":"2016-05-05T01:03:58.000Z","categories":["AWS","javascript","nodejs","\u6280\u672f"],"author":"Shunzhe Yu","thumbnail":"","description":"<p>\u672c\u6587\u5bf9\u76ee\u524d\u5e02\u9762\u4e0a\u7684\u4e3b\u6d41Paas(platform as a service)\u63d0\u4f9b\u5546\u8fdb\u884c\u4e86\u6bd4\u8f83\uff0c \u6bd4\u5982heroku\u548camazon\u5bb6\u7684\u65b0\u661felastic beanstalk\u3002\u5e76\u4ee5\u4e00\u4e2anodejs\u722c\u866b\u7684\u5b9e\u4f8b\u90e8\u7f72\u5728\u4e86eb\u7684\u670d\u52a1\u5668\u4e0a\u3002\u5f88\u591a\u5173\u4e8e\u670d\u52a1\u5668\u7aef\u7684\u6982\u5ff5\u4e5f\u56e0\u6b64\u7406\u6e05\u4e86\uff0c \u6bd4\u5982reverse proxy server, dynamic IP addressing\u548c\u540e\u7aef\u7684\u4e00\u4e9b\u914d\u7f6e\u3002\u4e5f\u5728\u6587\u7ae0\u4e2d\u505a\u4e2a\u5c0f\u7ed3\uff0c \u5206\u4eab\u7ed9\u611f\u5174\u8da3\u7684\u5927\u5bb6\u3002<\/p>","content":"<p>\u672c\u6587\u5bf9\u76ee\u524d\u5e02\u9762\u4e0a\u7684\u4e3b\u6d41Paas(platform as a service)\u63d0\u4f9b\u5546\u8fdb\u884c\u4e86\u6bd4\u8f83\uff0c \u6bd4\u5982heroku\u548camazon\u5bb6\u7684\u65b0\u661felastic beanstalk\u3002\u5e76\u4ee5\u4e00\u4e2anodejs\u722c\u866b\u7684\u5b9e\u4f8b\u90e8\u7f72\u5728\u4e86eb\u7684\u670d\u52a1\u5668\u4e0a\u3002\u5f88\u591a\u5173\u4e8e\u670d\u52a1\u5668\u7aef\u7684\u6982\u5ff5\u4e5f\u56e0\u6b64\u7406\u6e05\u4e86\uff0c \u6bd4\u5982reverse proxy server, dynamic IP addressing\u548c\u540e\u7aef\u7684\u4e00\u4e9b\u914d\u7f6e\u3002\u4e5f\u5728\u6587\u7ae0\u4e2d\u505a\u4e2a\u5c0f\u7ed3\uff0c \u5206\u4eab\u7ed9\u611f\u5174\u8da3\u7684\u5927\u5bb6\u3002<\/p>\n<a><\/a>\n<div markdown=\"1\"><img src=\"http:\/\/ac-tc2vc5tu.clouddn.com\/de08e7610183200c.png\" alt=\"aws\"><\/div>\n\n<h2>\u6982\u89c8<\/h2><p>\u5c06\u4e4b\u524d\u7528nodejs\u5199\u7684\u5bf9<a href=\"https:\/\/cnodejs.org\/?tab=good\" target=\"_blank\" rel=\"external\">cnode\u793e\u533a\u7cbe\u534e\u5e16<\/a>\u7684\u722c\u866b\u653e\u5728AWS\u7684EC2 instance\u4e0b\u7ba1\u7406\uff0c \u5229\u7528elastic beanstalk\u6765\u5bf9AWS\u8d44\u6e90\u8fdb\u884c\u5206\u914d\u548c\u8c03\u63a7\uff0c \u7531\u4e8e\u4f7f\u7528\u7684\u8fd8\u662ffree-tier\u7684single instance\uff0c \u5219elastic beanstalk\u6240\u7279\u6709\u7684load-balancing\u7684\u4f18\u52bf\u6ca1\u6709\u529e\u6cd5\u4eab\u53d7\u5230\u3002<\/p>\n<div markdown=\"1\"><img src=\"http:\/\/ac-tc2vc5tu.clouddn.com\/69662ed94ae1f3ff.png\" alt=\"ebean\"><\/div>\n\n<p>\u4e00\u5f00\u59cb\u5982\u679c\u76f4\u63a5\u6309\u7167AWS\u7ed9\u7684\u65b9\u6cd5, <code>eb init<\/code>\u521d\u59cb\u5316\u4e00\u4e2aelastic beanstalk\u7684\u9879\u76ee\uff0c <code>eb create<\/code>\u521b\u5efa\u4e00\u4e2aenvironment\u548c\u4e00\u4e2aEC2\u5b9e\u4f8b, \u7136\u540e<code>eb deploy<\/code>\u5c06.git\u91cc\u9762committed\u7684\u6539\u52a8push\u5230elastic beanstalk\u7684\u751f\u4ea7\u73af\u5883\u91cc\u9762\uff0c \u7136\u540e\u7528<code>eb open<\/code>\u6765\u6253\u5f00\u8fd9\u4e2aIP address\uff0c \u5982\u679c\u4e4b\u540e\u9700\u8981\u7ec8\u6b62\u8fd9\u4e2aapp\u7684\u8bdd\uff0c \u5c31<code>eb terminate<\/code>\u5c31\u597d\u4e86\u3002<\/p>\n<div markdown=\"1\"><img src=\"http:\/\/ac-tc2vc5tu.clouddn.com\/143c21d61cd3cf33.png\" alt=\"heroku\"><\/div>\n\n<p>\u5982\u679c\u4e4b\u524d\u6709\u4f7f\u7528heroku\u7684\u7ecf\u9a8c\u7684\u8bdd\uff0c \u5176\u5b9e\u4f60\u4f1a\u53d1\u73b0\u5176\u5b9eamazon elastic beanstalk\u548cheroku\u63d0\u4f9b\u7684\u670d\u52a1\u975e\u5e38\u76f8\u4f3c\uff0c \u5b9e\u9645\u4e0a\uff0c \u5c31\u8fd9\u4e24\u5bb6\u670d\u52a1\u7684\u5b9a\u4f4d\u800c\u8a00\uff0c \u90fd\u662fplatform as a service\uff08Paas\uff09\uff0c \u4e5f\u5c31\u662f\u8ba9developer\u53ef\u4ee5\u5c06\u7f51\u7ad9\uff0c \u79fb\u52a8\u7aef\u90e8\u7f72\u5728\u4e91\u7aef(cloud)\u4e0d\u9700\u8981\u987e\u8651backend server\u548cdatabase\u7684configuration\u3002 \u800cheroku\u672c\u8eab\u76f8\u5bf9\u4e8e\u5176\u4ed6\u5e02\u9762\u4e0a\u7684Paas\u5728auto-scaling\u4e0a\u505a\u5f97\u66f4\u52a0\u51fa\u8272\uff0c \u5b83\u7684computing resources(dyno)\u53ef\u4ee5\u6309\u7167\u8ba1\u7b97\u7684\u9700\u6c42\u800c\u53e0\u52a0\u4ece\u800c\u6ee1\u8db3\u5728\u9ad8\u6d41\u91cf\u4e0b\u7684\u7f51\u7ad9\u540e\u7aef\u6d41\u7545\u8fd0\u884c\u3002\u800c\u8fd1\u51e0\u5e74amazon\u7684elastic beanstalk\u7684\u51fa\u73b0\uff0c \u5728\u8fd9\u4e2aPaas\u7684\u5e02\u573a\u7ed9\u6211\u4eecdeveloper\u591a\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002\u5c31\u81ea\u5df1\u7684\u4f7f\u7528\u800c\u8a00\uff0c \u611f\u89c9\u4e24\u8005\u7684command line interface\u5176\u5b9e\u8bbe\u8ba1\u5f97\u5dee\u4e0d\u591a\uff0c \u90fd\u5f88\u7b80\u6d01\u65b9\u4fbf\uff0c \u4e0d\u8fc7\u76f8\u6bd4heroku\uff0c amazon\u7684AWS\u8fd8\u6d89\u53ca\u79df\u7528\u5230\u8ba1\u7b97\u5355\u5143EC2, \u5c31\u914d\u7f6e\u7684\u64cd\u4f5c\u6765\u8bf4\uff0c \u4f60\u5728\u914d\u7f6eAWS\u7684\u670d\u52a1\u4e0a\u9700\u8981\u82b1\u66f4\u591a\u7684\u65f6\u95f4\u53bb\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u548c\u8003\u8651\u5bc6\u94a5\u5b58\u50a8\uff0c \u6bd5\u7adf\u4f60\u53ef\u80fd\u6709\u65f6\u5019\u6709ssh\u8fdc\u7a0b\u767b\u9646amazon linux\u670d\u52a1\u5668\u7684\u9700\u6c42\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c heroku\u7684\u914d\u7f6e\u5c31\u662f\u5f88\u7b80\u5355\u7684\u5728<code>~\/.bashrc<\/code>\u6587\u4ef6\u91cc\u9762\u6dfb\u52a0toolbelt\u6587\u4ef6\u5939\u7684\u8def\u5f84\u4e86\u3002<\/p>\n<blockquote>\n<p> \u5176\u5b9eheroku\u5b83\u672c\u8eab\u5c31\u662fdeploy\u5728\u4e86AWS\u4e0a\u7684\u5440\ud83d\ude02\uff0c \u6240\u4ee5\u7406\u8bba\u4e0a\u5728performance\u4e0a\u4e0d\u4f1a\u6709\u592a\u5927\u7684\u5dee\u522b\u3002<\/p>\n<\/blockquote>\n<p>\u800c\u5728pricing\u4e0a\uff0c \u6211\u8ba4\u4e3aAWS\u7684\u4ef7\u683c\u548c\u670d\u52a1\u4f1a\u66f4\u52a0\u7684\u5b9e\u60e0\uff0c \u6bd5\u7adf\u8003\u8651\u5230\u4f60\u6709\u4e00\u5f20\u4fe1\u7528\u5361\u5c31\u53ef\u4ee5\u7533\u8bf7\u5230\u4f60\u4e00\u5e74\u7684free-tier\u7684single instance\u7684\u4f7f\u7528\u6743\u5229\uff0c \u800csingle instance\u5bf9\u4e00\u4e9b\u5c0f\u578b\u7684side project\u6765\u8bf4\u5b8c\u5b8c\u5168\u5168\u662f\u591f\u7528\u7684\u5440\u3002\u5373\u4fbf\u4e0d\u591f\u7528\uff0c \u6362\u6210large instance\u4e5f\u662fseveral clicks away\uff0c \u53cd\u6b63\u4e5f\u662f\u6309\u7528\u91cf\u6536\u8d39\uff0c \u7ecf\u6d4e\u5b9e\u60e0!<\/p>\n<h2>\u9047\u5230\u7684\u95ee\u9898<\/h2><p>\u7b2c\u4e00\u4e2a\u4f7f\u7528EB\u90e8\u7f72\u7684\u5e94\u7528\u662f\u4e00\u4e2anodejs\u722c\u866b\uff0c \u8d1f\u8d23\u722c\u53bbcnode\u793e\u533a\u7684\u7cbe\u534e\u5e16\uff0c \u7136\u540e\u8fd4\u56de\u4e00\u4e2ajson object\u6536\u96c6\u7cbe\u534e\u5e16\u7684link, \u6807\u9898\u548c\u4f5c\u8005avatar\uff0c \u4e3a\u4e86\u663e\u793a\u7684\u76f4\u89c2\uff0c \u6211\u5e76\u6ca1\u6709\u5199\u524d\u7aef\u7684\u6837\u5f0f\uff0c \u800c\u662f\u76f4\u63a5<code>JSON.stringify(json)<\/code>\u7136\u540esend\u4f1a\u6d4f\u89c8\u5668\u3002\u4e4b\u540e\u5982\u679c\u4ec5\u4ec5\u4f5c\u4e3aREST API\u4f7f\u7528\u7684\u8bdd\uff0c \u8fd8\u9700\u8981\u5728router\u4e0a\u4fee\u9970\u4e00\u4e0bURL\u3002\u76ee\u524d\u8fd8\u662f\u6709\u70b9\u7c97\u7cd9\u7684\u3002<a href=\"https:\/\/github.com\/AirLoft\/web-scraper\" target=\"_blank\" rel=\"external\">github\u94fe\u63a5<\/a><\/p>\n<div markdown=\"1\"><img src=\"http:\/\/ac-tc2vc5tu.clouddn.com\/9fd7dd3d203d2d91.png\" alt=\"demo\"><\/div>\n\n<p>\u4e00\u5f00\u59cb\u6211\u76f4\u63a5\u5c06\u5728\u672c\u5730localhost\u8fd0\u884c\u7684\u7248\u672cdeploy\u5230\u4e86elastic beanstalk\u4e0a\uff0c \u7531\u4e8e\u7f3a\u5c11\u4e86\u8fd9\u4e00\u884c\u914d\u7f6e<code>var port = process.env.PORT || 3000;<\/code>\uff0c \u6211\u76f4\u63a5\u628aport\u5b9a\u5728\u4e863000\uff0c \u800celastic beanstalk\u662f\u6709\u5e94\u8be5\u5360\u7528\u7684port\u7684\uff0c \u6240\u4ee5\u5f97\u5230\u4e86\u201c502 bad gateway error\u201d\u3002<\/p>\n<p>\u8fd8\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\u7684\u662f<code>npm start<\/code>\u8fd9\u4e2anpm script\u91cc\u9762\u7684\u914d\u7f6e\uff0c AWS elastic beanstalk\u4f1a\u627e\u5230\u8fd9\u6761\u6307\u4ee4\u5e76\u53bb\u6267\u884c\u6765\u6267\u884c\u76f8\u5e94\u7684js\u6587\u4ef6\uff0c \u6bd4\u5982\u6211\u628a\u5199cnode\u7f51\u7ad9\u7684\u722c\u866b\u5199\u5728\u4e86cnode.js\u91cc\u9762\uff0c \u90a3\u4e48\u6211\u9700\u8981<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><\/pre><\/td><td><pre><span><span>\"scripts\"<\/span>: {<\/span><br><span>  <span>\"start\"<\/span>: <span>\"node cnode.js\"<\/span><\/span><br><span>},<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>\u6765\u4fdd\u8bc1\u670d\u52a1\u5668\u6267\u884c\u7684\u662f\u6211\u5bf9cnode\u8fd9\u4e2a\u7f51\u7ad9\u7684\u722c\u866b\u3002<\/p>\n<h2>Q&amp;A<\/h2><p>\u4ee5\u4e0b\u5185\u5bb9\u662f\u6211\u5728\u81ea\u5df1\u6298\u817eElastic Beanstalk\u7684\u65f6\u5019\u6536\u96c6\u7684\u4e00\u4e9b\u6bd4\u8f83\u7b80\u7ec3\u800c\u51c6\u786e\u7684\u603b\u7ed3\uff0c \u5728\u8fd9\u91cc\u5206\u4eab\u7ed9\u5927\u5bb6\u3002 \u5176\u5b9eamazon\u7684AWS\u6559\u7a0b\u5199\u5f97\u975e\u5e38\u8be6\u7ec6\u7684\uff0c \u5927\u5bb6\u81ea\u5df1\u5982\u679c\u6709\u80fd\u529b\u6700\u597d\u53bb\u5c1d\u8bd5\u81ea\u5df1\u9605\u8bfb\u548c\u5b9e\u8df5\u5b83\u7ed9\u7684\u4f8b\u5b50!<\/p>\n<p><strong>How elastic beanstalk works?<\/strong><br>Now you have a web app running in AWS Elastic Beanstalk. As Elastic Beanstalk creates your environment, it <strong>interacts with several other AWS services<\/strong> to create the resources required to run your web app securely and resiliently.<\/p>\n<p><strong>How EC2 instance works?<\/strong><br>EC2 instance \u2013 A virtual machine that runs Amazon Linux or Microsoft Windows Server and that is configured to run web apps on the platform that you choose.<br>Each platform runs a different set of software, configuration files, and scripts to support a specific language version, framework, web container, or combination thereof. Most platforms <strong>use either Apache or nginx as a reverse proxy<\/strong> that sits in front of your web app, forwards requests to it, serves static assets, and generates access and error logs.<\/p>\n<p><strong>What is reverse proxy server?<\/strong><br>A proxy server is a go-between or intermediary server that forwards requests for content from multiple clients to different servers across the Internet. A reverse proxy server is a type of proxy server that typically <strong>sits behind the firewall in a private network<\/strong> and directs client requests to the appropriate backend server. A reverse proxy provides an additional level of abstraction and control to ensure the smooth flow of network traffic between clients and servers.<\/p>\n<p>Common uses for a reverse proxy server include:<\/p>\n<ul><li>Load balancing \u2013 A reverse proxy server can act as a \u201ctraffic cop,\u201d sitting in front of your backend servers and distributing client requests across a group of servers in a manner that maximizes speed and capacity utilization while ensuring no one server is overloaded, which can degrade performance. If a server goes down, the load balancer redirects traffic to the remaining online servers.<\/li>\n<li>Web acceleration \u2013 Reverse proxies can compress inbound and outbound data, as well as cache commonly requested content, both of which speed up the flow of traffic between clients and servers. They can also perform additional tasks such as SSL encryption to take load off of your web servers, thereby boosting their performance.<\/li>\n<li>Security and anonymity \u2013 By intercepting requests headed for your backend servers, a reverse proxy server protects their identities and acts as an additional defense against security attacks. It also ensures that multiple servers can be accessed from a single record locator or URL regardless of the structure of your local area network.<\/li>\n<\/ul><p><strong>What is amazon s3 bucket?<\/strong><br>Amazon S3 bucket \u2013 A storage location for your source code, logs, and other artifacts that are created when you use Elastic Beanstalk.<\/p>\n<p><strong>How your domain will look like?<\/strong><br>Domain name \u2013 A domain name that routes to your web app in the form subdomain.region.elasticbeanstalk.com.<\/p>\n<p><strong>When should I use AWS Lambda versus Amazon EC2?<\/strong><\/p>\n<p>Amazon Web Services offers a set of compute services to meet a range of needs.<\/p>\n<p>Amazon EC2 offers flexibility, with a wide range of instance types and the option to customize the operating system, network and security settings, and the entire software stack, allowing you to easily move existing applications to the cloud. With Amazon EC2 you are responsible for provisioning capacity, monitoring fleet health and performance, and designing for fault tolerance and scalability. AWS Elastic Beanstalk offers an easy-to-use service for deploying and scaling web applications in which you retain ownership and full control over the underlying EC2 instances. Amazon EC2 Container Service is a scalable management service that supports Docker containers and allows you to easily run distributed applications on a managed cluster of Amazon EC2 instances.<br>AWS Lambda makes it easy to execute code in response to events, such as changes to Amazon S3 buckets, updates to an Amazon DynamoDB table, or custom events generated by your applications or devices. With Lambda you do not have to provision your own instances; Lambda performs all the operational and administrative activities on your behalf, including capacity provisioning, monitoring fleet health, applying security patches to the underlying compute resources, deploying your code, running a web service front end, and monitoring and logging your code. AWS Lambda provides easy scaling and high availability to your code without additional effort on your part.<\/p>\n<p><strong>To create a hosted zone in Amazon Route 53<\/strong><\/p>\n<ul><li>Open the Amazon Route 53 management console.<\/li>\n<li>Choose Hosted Zones.<\/li>\n<li>Choose Create Hosted Zone.<\/li>\n<\/ul><p>For Domain Name, type the domain name that you own. For example: example.com.<\/p>\n<p>Choose Create.<\/p>\n<p>Next, add a CNAME record to the hosted zone. A CNAME record registers a domain name that you own as an alias of your web app environment\u2019s elasticbeanstalk.com subdomain.<\/p>\n<p>When an Amazon Route 53 DNS server receives a name request for your custom domain name, it resolves to the elasticbeanstalk.com subdomain, which resolves to the public DNS name of your Elastic Load Balancing load balancer, which resolves to your web app\u2019s IP address.<\/p>\n<p>Note<br>In a single-instance environment, the elasticbeanstalk.com subdomain resolves to an Elastic IP address attached to the instance running your web app.<\/p>\n<p><strong>\u5173\u4e8eelastic beanstalk\u7684\u4ef7\u683c<\/strong><br>\u6709\u5c0f\u4f19\u4f34\u5728comment\u91cc\u9762\u63d0\u95ee\uff0c \u5982\u679c\u7528\u5b8c\u4e86\u4e00\u5e74\u7684free-tier\u7684\u8bdd\uff0c \u4ef7\u683c\u600e\u4e48\u8ba1\u7b97\u5462? \u53ef\u4ee5\u53c2\u8003\u4e0bamazon\u7684<a href=\"https:\/\/aws.amazon.com\/elasticbeanstalk\/pricing\/\" target=\"_blank\" rel=\"external\">\u8fd9\u7bc7\u4ecb\u7ecd<\/a>\u91cc\u9762\u8be6\u7ec6\u8bb0\u5f55\u4e86EC2, S3, DB\u7b49\u7b49AWS\u76f8\u5173\u670d\u52a1\u7684\u4ef7\u683c\u3002\u5982\u679c\u662f\u4e2a\u4eba\u7684side project, \u5bf9CPU\u548c\u56fe\u7247\u7b49\u7528\u6237\u4fe1\u606f\u5b58\u50a8\u7684\u9700\u6c42\u4e0d\u662f\u7279\u522b\u5927\u7684\u8bdd\uff0c \u514d\u8d39\u7684plan\u6216\u8005\u662fmicro\u7684instance\u662f\u5b8c\u5168\u591f\u7528\u7684\uff0c \u5982\u679c\u662f\u5728\u67d0\u65b9\u9762\u7684\u9700\u6c42\u7279\u522b\u5927\uff0c \u6bd4\u5982\u8bf4unsplash\u8fd9\u4e2a\u9ad8\u6e05\u6444\u5f71\u56fe\u7247\u5206\u4eab\u7684\u793e\u533a\u3002<\/p>\n<p><img src=\"http:\/\/ac-tc2vc5tu.clouddn.com\/bb0b5ef1d0298d11.png\" alt=\"unsplash\"><\/p>\n<p> unsplash\u5c06\u7528\u6237\u4e0a\u4f20\u7684\u7167\u7247\u5b58\u50a8\u5728Amazon\u7684S3\u670d\u52a1\u4e0a\u4f1a\u6bd4\u8f83\u5b89\u5168\u548c\u4fbf\u6377\uff0c(\u642d\u914d\u7740Imgix\u8fd9\u4e2aservice\u4f7f\u7528)\uff0c \u5177\u4f53\u7684\u7f51\u7ad9\u82b1\u9500\u53ef\u4ee5\u53c2\u8003<a href=\"http:\/\/backstage.crew.co\/what-does-unsplash-cost\/\" target=\"_blank\" rel=\"external\">\u8fd9\u7bc7\u535a\u6587<\/a>\uff0c \u91cc\u9762\u8bb0\u5f55\u4e86unsplash\u4e00\u4e2a\u6708\u7f51\u7ad9\u4f7f\u7528\u7684\u5404\u79cd\u670d\u52a1\u7684\u660e\u7ec6\u8bb0\u5f55\uff0c \u4e5f\u53ef\u4ee5\u7ed9\u4e00\u4e9b\u5e0c\u671b\u505a\u56fe\u7247\u5206\u4eab\u793e\u533a\u7684\u521b\u4e1a\u8005\u4eec\u4e00\u4e2a\u53c2\u8003\u3002\u4e00\u4e2a\u503c\u5f97\u6ce8\u610f\u7684\u70b9\u662f\uff0c unsplash\u7684\u82b1\u9500\u662f\u6bd4\u8f83\u9002\u5408\u501f\u9274\u7684\uff0c \u56e0\u4e3aunsplash\u548c\u76ee\u524d\u8bb8\u591a\u7684\u521b\u4e1a\u516c\u53f8\u4e00\u6837\uff0c \u9009\u62e9\u5c06\u81ea\u5df1\u7684\u4e3b\u670d\u52a1host\u5728heroku\u8fd9\u4e2a\u5e73\u53f0\uff0c \u9009\u62e9S3\u7b49\u7b49\u4e3b\u6d41\u7684\u670d\u52a1\uff0c \u4e0d\u50cf\u4e00\u4e9b\u66f4geeky\u7684\u516c\u53f8\u53ef\u80fd\u4e3a\u4e86\u7701\u94b1\u5c31\u81ea\u5df1\u6765\u642d\u5efa\u548c\u7ba1\u7406\u81ea\u5df1\u7684\u670d\u52a1\u5668\u548c\u6570\u636e\u5e93\u3002 \u5f53\u7136\uff0c \u7ba1\u7406\u6210\u672c\u548c\u7ef4\u62a4\u6210\u672c\u90fd\u8981\u8003\u8651\u8fdb\u53bb\uff0c \u6240\u4ee5\u7efc\u4e0a\u6211\u624d\u8ba4\u4e3aunsplash\u7684\u4f8b\u5b50\u662f\u975e\u5e38\u503c\u5f97\u501f\u9274\u7684!<\/p>\n<h2>\u53c2\u8003\u94fe\u63a5<\/h2><p>\u4e0b\u9762\u7684\u94fe\u63a5\u662f\u6211\u5728\u81ea\u5df1\u5c1d\u8bd5\u642d\u5efa\u73af\u5883\u65f6\u53c2\u8003\u7684\u5185\u5bb9\uff0c \u4ee5\u53ca\u6211\u9009\u62e9free-tier\u7684configuration\u7684\u9875\u9762\u3002\u5176\u4e2d\u5c31\u6709\u4ee5express\u4e3a\u4f8b\u5b50\u7684\u670d\u52a1\u7aef\u73af\u5883\u642d\u5efa\u3002<\/p>\n<ul><li><a href=\"http:\/\/docs.aws.amazon.com\/AWSEC2\/latest\/CommandLineReference\/set-up-ec2-cli-linux.html#set_aes_home_linux\" target=\"_blank\" rel=\"external\">setting up EC2 cli on mac<\/a> we store EC2 api tool, aws-access-key and aws-secret-key in <code>~\/.bashrc<\/code>, so that we can use the shortcut commands to do <code>init\\create\\deploy\\open<\/code>. The common commands are listed as followed.<\/li>\n<\/ul><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><\/pre><\/td><td><pre><span>eb init<\/span><br><span>eb create<\/span><br><span>eb deploy<\/span><br><span>eb open<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><ul><li><a href=\"https:\/\/docs.aws.amazon.com\/quickstarts\/latest\/webapp\/welcome.html\" target=\"_blank\" rel=\"external\">A high level explanation of what EB does and what can we config<\/a> trying to give a high-level description of what is the use and purpost of each AWS service, including EC2, the reverse proxy server sitting in front of servers, router 53 and so on so forth.<\/li>\n<li><a href=\"http:\/\/docs.aws.amazon.com\/elasticbeanstalk\/latest\/dg\/create_deploy_nodejs_express.html\" target=\"_blank\" rel=\"external\">A detailed explanation of how to host an express app on EB full-step tutorial<\/a> The tutorial uses an express app to explain how to use EB.<\/li>\n<li><a href=\"http:\/\/docs.aws.amazon.com\/elasticbeanstalk\/latest\/dg\/create_deploy_nodejs.html\" target=\"_blank\" rel=\"external\">How to deploy a nodejs project to EB<\/a> similar to the previous tutorial post.<\/li>\n<li><a href=\"http:\/\/docs.aws.amazon.com\/AWSEC2\/latest\/UserGuide\/AccessingInstancesLinux.html\" target=\"_blank\" rel=\"external\">how to connect to EC2 instance using ssh<\/a><br>by using <code>ec2-describe-instances<\/code>, we can get the id of my instance.<\/li>\n<\/ul><p>So after we have created an project, we go to the elastic beanstalk console, we will see the dashboard of all the application I host on EB such as the recent one(webscraper). The following is a screen capture of the configuration of that application on EB as in a free-tier plan:<br><img src=\"http:\/\/ac-tc2vc5tu.clouddn.com\/7c3a33a6cfab0843.png\" alt=\"configuration\"> In this page, we can set the scaling option from single instance to load-balanced configuration, and when we add a load-balancer, it will automatically adjust the number of instances depending on the need.<\/p>\n<p>When you turn on load balancing, Elastic Beanstalk creates a load balancer, deletes the Elastic IP address from your environment, and provisions a new EC2 instance. Elastic Beanstalk also updates DNS records to point the web app\u2019s domain name to the load balancer instead of to the IP address of a single instance.<\/p>"},{"title":"[\u7b2c\u4e00\u671f]AirLoft\u7ec4\u7ec7\u52a8\u5458\u5ba3\u8a00","link":"http:\/\/chocoluffy.com\/2016\/04\/27\/%E7%AC%AC%E4%B8%80%E6%9C%9F-AirLoft%E7%BB%84%E7%BB%87%E5%8A%A8%E5%91%98%E5%AE%A3%E8%A8%80\/","guid":"http:\/\/chocoluffy.com\/2016\/04\/27\/\u7b2c\u4e00\u671f-AirLoft\u7ec4\u7ec7\u52a8\u5458\u5ba3\u8a00\/","pubDate":"2016-04-28T01:46:44.000Z","categories":["\u521b\u4e1a","\u65e5\u8bb0","\u539f\u521b"],"author":"Shunzhe Yu","thumbnail":"","description":"<p>The best education comes from inside. <\/p>","content":"<p>The best education comes from inside. <\/p>\n<a><\/a>\n<div markdown=\"1\"><img src=\"http:\/\/ac-tc2vc5tu.clouddn.com\/b000a844b66d48d1.jpg\" alt=\"pink\"><\/div>\n\n<h2>Orientation<\/h2><p>\u8fd9\u4e2aada\u5185\u90e8\u7ec4\u7ec7airloft\u6210\u7acb\u7684\u76ee\u7684\uff0c \u662f\u6211\u5e0c\u671b\u5927\u5bb6\u80fd\u5728\u4e00\u4e2a\u66f4\u52a0\u7d27\u5bc6\u548c\u719f\u6089\u7684\u73af\u5883\u4e0b\u5206\u4eab\u548c\u5b66\u4e60\u8bfe\u5916\u77e5\u8bc6\uff0c \u91c7\u7528github\u6258\u7ba1\u7684\u5f62\u5f0f\u662f\u56e0\u4e3a\u5b83\u7ba1\u7406\u4ee3\u7801\u7684\u9ad8\u534f\u4f5c\u6548\u7387\u548cpeer review\u7684\u4fbf\u6377\u3002<\/p>\n<p>\u4e3a\u4e86\u4fdd\u8bc1\u5927\u5bb6\u81ea\u5b66\u6b65\u9aa4\u7684\u4e00\u81f4\u6027\u548c\u81ea\u7531\u53d1\u6325\u7684\u7a7a\u95f4\uff0c \u6211\u51b3\u5b9a\u91c7\u53d6\u7684\u662f\u4efb\u52a1\u53d1\u5e03\u5f62\u5f0f\u3002 <strong>\u6bcf\u5468\u4f1a\u7531\u6211\u6216\u6211\u6307\u5b9a\u7684\u8d1f\u8d23\u4eba\u53d1\u5e031-2\u7bc7\u7684\u6559\u7a0b\u6216\u4efb\u52a1<\/strong>\uff0c \u4efb\u52a1\u5185\u5bb9\u4ece\u521a\u5165\u95e8\u7684git\u7684\u4f7f\u7528\u4e0e\u534f\u4f5c\uff0c \u5230\u4e4b\u540e\u7684\u7f51\u7ad9\u6837\u5f0f\u5e03\u5c40\uff0c \u79fb\u52a8\u7aef\uff0c\u52a8\u6548\u8bbe\u8ba1\uff0c\u540e\u7aef\u7f16\u7a0b\u90fd\u4f1a\u6d89\u53ca\uff0c \u800c\u6559\u7a0b\u5219\u4e3b\u8981\u6765\u6e90\u4e8e<strong>\u6240\u6709\u6709\u5fc3\u4eba\u5bf9\u67d0\u4e9b\u521b\u610f\u70b9\u5b50\u7684\u5b9e\u73b0\u8fc7\u7a0b\u65e0\u8bba\u6210\u8d25\u7684\u8bb0\u5f55(\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u53d1\u5e03)<\/strong>\u3002 \u6211\u4e0d\u4f1a\u5728\u4efb\u52a1\u5b8c\u6210\u5ea6\u4e0a\u7ed9\u5927\u5bb6\u592a\u591a\u538b\u529b\uff0c \u4f46\u662f\u6240\u6709\u7684\u4efb\u52a1\u90fd\u4f1a\u6307\u5411\u6700\u7ec8AirLoft\u79fb\u52a8\u7aefAPP\u53ca\u4e00\u7cfb\u5217\u914d\u5957web app\u7684\u8bde\u751f\uff0c \u80fd\u591f\u6df1\u5165\u4e92\u52a8\u53c2\u4e0e\u6bcf\u4e2a\u65b9\u5411\u8ba8\u8bba\u548c\u5b9e\u8df5\u5e76\u81ea\u5df1\u52a8\u624bcoding\u7684\u4eba\uff0c \u4e5f\u4f1a\u6536\u83b7\u8fdc\u6bd4\u5b8c\u6210\u4e00\u4e2a\u4f5c\u54c1\uff0c \u4e00\u4e2a\u4ea7\u54c1\u66f4\u591a\u4e5f\u66f4\u91cd\u8981\u7684\u4e1c\u897f\uff0c being insightful and clear of what you really want to do\u3002<\/p>\n<p>\u7ec4\u7ec7\u5185\u90e8\u5927\u81f4\u7684\u65b9\u5411\uff1a<br>\u6211\u4e3b\u5bfc\u7684 - AirLoft reactive native\u7684\u5f00\u53d1\uff0c \u5e76\u5c06Airloft\u7f51\u7ad9\u7aef\u4eceangular1.4\u5168\u90e8\u7531react\u91cd\u5199\u3002<br>\u6731\u5b50\u5b81\u4e3b\u5bfc\u7684 - \u722c\u866bscripts\uff0c \u5bf9\u4e8e\u6821\u56ed\u5185\u90e8\u70ed\u95e8\u6d3b\u52a8\u6d88\u606f\uff0c\u6559\u52a1\u4fe1\u606f\u548c\u5468\u8fb9\u6d88\u606f\u7684\u6536\u96c6\u548c\u5448\u73b0\u3002<br>Joyce\u4e3b\u5bfc\u7684 - \u8d70\u8fdb\u591a\u5927\u7684web app\u53cahtml5\u5fae\u4fe1\u79fb\u52a8\u9875\u9762\u3002<br>Jerry\u4e3b\u5bfc\u7684 - \u57fa\u4e8eGPS\u7684\u9910\u996e\u5916\u5356\u4fe1\u606f\u5448\u73b0\u548c\u6210\u4ea4\u5e73\u53f0\u3002<\/p>\n<p>\u6bcf\u4e2a\u65b9\u5411\u90fd\u7531\u4e0d\u540c\u7684coding\u4fa7\u91cd\u70b9\uff0c \u6bcf\u4e2a\u4eba\u53ef\u81ea\u7531\u53c2\u4e0e\u4efb\u610f\u65b9\u5411\uff0c <strong>\u4e0d\u5f3a\u5236\u4efb\u52a1\u8fdb\u5ea6\uff0c \u4f46\u5f3a\u5236\u5b9a\u671f\u5206\u4eab\u3002<\/strong>\u5c31\u6700\u7ec8\u6210\u679c\u800c\u8a00\uff0c \u4f5c\u54c1\u4e0e\u4f5c\u54c1\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u914d\u5408\u548c\u6539\u5584\uff0c \u4e3e\u4e2a\u4f8b\u5b50\uff0c \u6211\u4f1a\u4f7f\u7528\u670d\u52a1\u5668\u7aef\u7684\u722c\u866b\u6765\u6536\u96c6\u5174\u8da3\u5c0f\u7ec4\u7684\u8baf\u606f\uff0c \u4f1a\u5728\u4e4b\u540e\u7684\u5ba3\u4f20\u9636\u6bb5\u7528html5\u5199\u79fb\u52a8\u7aef\u7684\u5ba3\u4f20\u9875\u9762\uff0c \u800c\u57fa\u4e8eGPS\u672c\u8eab\u5c31\u662fAirLoft\u7684\u529f\u80fd\u57fa\u7840\u3002<\/p>\n<p>\u800c\u9700\u8981\u518d\u5f3a\u8c03\u4e00\u904d\u7684\u662f\uff0c <strong>\u4efb\u4f55\u4eba\uff0c \u5728\u4efb\u4f55\u65f6\u5019\uff0c \u90fd\u53ef\u4ee5\u63d0\u51fa\u65b0\u7684\u5f00\u53d1\u65b9\u5411\u548c\u60f3\u6cd5\uff0c \u65e0\u8bba\u5173\u4e4e\u6280\u672f\u8fd8\u662f\u8bbe\u8ba1\u8fd8\u662f\u7f8e\u5de5\u8fd8\u662f\u7528\u6237\u4f53\u9a8c\u3002<\/strong>\u6211\u4f1a\u6b22\u8fce\u8111\u6d1e\uff0c \u6298\u817e\u4e9b\u597d\u73a9\u5374\u53ef\u80fd\u201c\u65e0\u7528\u201d\u7684\u4e1c\u897f\uff0c \u6bd4\u5982\u54ea\u4e00\u5468\u4e3b\u9898\u6216\u8bb8\u5c31\u662f\u81ea\u5b66Sketch\u6765\u7ed9AirLoft\u6362\u4e2a\u56fe\u6807\uff1f\u6216\u8005\u5c31\u5f00\u4e2arepo\u53bb\u53c2\u52a0HackerRank\uff1f\u80fd\u5e26\u4f60\u81ea\u5df1\u4e00\u76f4\u8d70\u4e0b\u53bb\u7684\uff0c \u4e0d\u662f\u538b\u529b\uff0c \u662f\u5174\u8da3\u3002<\/p>\n<p>\u5f88\u591a\u4eba\u4f1a\u597d\u5947\u6211\u81ea\u5df1\u7684\u6210\u957f\u8f68\u8ff9\uff0c \u800c\u5982\u679c\u771f\u7684\u5f80\u56de\u770b\uff0c \u6211\u662f\u57282015\u5e743\u670829\u53f7\u90a3\u5929\uff0c \u5728\u4ea4\u6362\u65f6\u671f\u53c2\u52a0\u7684\u4e00\u6b21hacker meeting\u4e0a\uff0c \u7b2c\u4e00\u6b21\u89c1\u8bc6\u5230html\\css\\js\uff0c \u90a3\u5929\u7684\u4e3b\u9898\u662f\u7528meteor.js\u548cmongo\u57285min\u5185\u642d\u5efa\u4e00\u4e2atodo\u5e94\u7528\uff0c \u5609\u5bbe\u662f\u4f2f\u514b\u5229\u5927\u4e8c\u7684\u4e00\u4e2a\u5b66\u751f\u3002\u5230\u73b0\u5728\u5b66CS\u5927\u6982\u67091\u5e74\u4e86\u5427\uff0c \u4ece\u4e00\u5f00\u59cb\u5199javascript\u5404\u79cd\u8fd0\u52a8\u6846\u67b6\u5f00\u59cb\uff0c \u5230\u7528ruby on rails\u81ea\u5df1\u524d\u540e\u7aef\u6298\u817e\u4e865\uff0c 6\u4e2a\u4e2d\u578bblogging, social\u6216\u8005API\u7f51\u7ad9\uff0c \u5230\u4e0a\u5b66\u671f\u7528react\u91cd\u5199\u5404\u79cd\u7f51\u7ad9\u53ca\u8017\u65f6\u4e00\u4e2a\u6708\u7684SPA\u5e94\u7528Airloft\uff0c \u548c\u73b0\u5728react native\u3002 \u6211\u5e76\u4e0d\u89c9\u5f97\u81ea\u5df1\u5df2\u7ecf\u6709\u80fd\u529b\u5f00\u59cb\u56de\u987e\u81ea\u5df1\u8fc7\u53bb\u7684\u4f5c\u54c1\u548c\u8363\u8a89\uff0c \u53ea\u662f\u6700\u8fd1\u633a\u591a\u4eba\u95ee\u6211\u201c\u5982\u679c\u60f3\u505a\u8bfe\u5916\u7684\u9879\u76ee\u5e94\u8be5\u5b66\u4e9b\u4ec0\u4e48\u7684\u95ee\u9898\u201d\uff0c \u6211\u628a\u6211\u81ea\u5df1\u7684\u8f68\u8ff9\u62ff\u51fa\u6765\u7ed9\u5927\u5bb6\u53c2\u8003\u3002\u6c38\u8fdc\u6ca1\u6709\u4e00\u6b65\u767b\u5929\u7684\u6210\u5c31\uff0c \u53bb\u51ed\u7740\u5174\u8da3\u6478\u7d22\uff0c \u56e0\u4e3a\u597d\u5947\u800c\u575a\u6301\uff0c \u662f\u6211\u80fd\u7ed9\u7684\u6700\u597d\u7684\u5efa\u8bae\u3002<\/p>\n<p>Orientation\u52a8\u5458\u4f1a\u7684\u6700\u540e\uff0c \u548c\u5927\u5bb6\u5206\u4eab\u4e24\u53e5\u8bdd\uff0c \u7b2c\u4e00\u53e5\u6765\u81ea\u81ea\u5df1\u7684\u4f53\u4f1a\uff0c \u7b2c\u4e8c\u53e5\u6765\u81eaECE516 prof: Steve Mann\uff1a<\/p>\n<ul><li>the best education comes from inside.<\/li>\n<li>the best way to learn is to teach.<\/li>\n<\/ul><h2>\u7b2c\u4e00\u671f\u4efb\u52a1<\/h2><p>\u5b66\u4f1agit\u7684\u7b80\u5355\u4f7f\u7528, \u76f4\u63a5\u5728org\u5185\u521b\u5efa\u4e00\u4e2a\u65b0\u7684repo\uff0c \u6dfb\u52a0\u4e00\u4e2areadme.md\u6587\u4ef6\uff0c \u5728\u91cc\u9762\u5199\u4e0a\u4f60\u5bf9\u4e24\u4ef6\u4e8b\u7684\u60f3\u6cd5\uff0c <strong>1\u3001\u5173\u4e8e\u793e\u533a\u5efa\u9020\u3002 \u4f60\u8ba4\u4e3a\u5e94\u8be5\u600e\u6837\u6253\u9020\u4e00\u4e2a\u7ecf\u4e45\u4e0d\u8870\u7684\u793e\u533a\uff1f\u4e3e\u4e2a\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u4f8b\u5b50\uff1f\u4e3a\u4ec0\u4e48\uff1f \u600e\u4e48\u8bbe\u8ba1\u56de\u9988\u548c\u5956\u52b1\u673a\u5236\u80fd\u591f\u9020\u5c31\u4e00\u4e2a\u597d\u7684\u793e\u533a\uff1f\u54ea\u4e9b\u8bbe\u8ba1\u4f53\u73b0\u6216\u8005\u6697\u793a\u4e86\u8fd9\u4e9b\u673a\u5236\uff1f2\u3001\u4f60\u5bf9\u54ea\u4e2a\u5177\u4f53\u5f00\u53d1\u65b9\u5411\u611f\u5174\u8da3\uff1f\u5982\u679c\u5728\u8fd9\u65b9\u9762\u6709\u5145\u8db3\u7684\u80fd\u529b\uff0c \u4f60\u53ef\u4ee5\u600e\u6837\u8d21\u732e\u5230\u54ea\u4e2a\u4efb\u52a1\u91cc\uff1f\u505a\u51fa\u600e\u6837\u7684\u4f5c\u54c1\uff1f<\/strong>\uff0c \u6216\u8005\u76f4\u63a5\u5728github\u7f51\u9875\u7aef\u64cd\u4f5c\u521b\u5efa\u65b0\u7684repo\u548c\u6dfb\u52a0\u65b0\u6587\u4ef6\uff0c \u6216\u8005\u66f4\u4f73\u63a8\u8350\u7684\u65b9\u5f0f\u662f\u672c\u5730\u4ee3\u7801\u5907\u4efd\u7136\u540e\u5173\u8054\u5230github\u7684\u76f8\u5173repo\u518dpush\u4f60\u7684\u672c\u5730\u4fee\u6539\u3002<\/p>\n<p>\u521b\u5efa\u597d\u4e4b\u540e\uff0c \u505a\u7b2c\u4e09\u4ef6\u4e8b\uff0c <strong>3\u3001\u81f3\u5c11\u5728\u5176\u4ed6\u4e00\u4e2a\u522b\u4eba\u7684repo\u91cc\u9762\u7684issue panel\u63d0\u51fa\u4f60\u5bf9\u4ed6\u8fd9\u4e2a\u60f3\u6cd5\u7684\u770b\u6cd5\u548c\u8865\u5145<\/strong>\u3002<\/p>\n<blockquote>\n<p>\u4efb\u52a1\u89e3\u91ca\uff0c \u6bd4\u5982\u6211\u559c\u6b22\u770bhackernews\uff0c \u6211\u5bf9\u5b83\u7684\u6295\u7968\u673a\u5236\u7279\u522b\u611f\u5174\u8da3\uff0c \u6211\u5c31\u62ff\u8fd9\u4e2a\u793e\u533a\u7684\u5404\u79cd\u673a\u5236\u6765\u4e3e\u4f8b\uff0c \u53c8\u6216\u8005\u6211\u559c\u6b22B\u7ad9\uff0c \u53bb\u5c1d\u8bd5\u5206\u6790B\u7ad9\u54ea\u4e9b\u8bbe\u8ba1\u662f\u7279\u522b\u6709\u7528\u6237\u5438\u5f15\u529b\u7684\uff0c \u8bb0\u5f55\u4e0b\u6765\uff0c \u65b0\u521brepo\u5206\u4eab\u3002\u6240\u6709\u53ef\u80fd\u9047\u5230\u7684\u95ee\u9898\uff0c \u5c1d\u8bd5\u8bb0\u5f55\u4e0b\u6765\u81ea\u5df1\u89e3\u51b3\uff0c \u627e\u4e0d\u5230\u529e\u6cd5\uff0c open\u4e00\u4e2a\u65b0\u7684issue\u7136\u540e\u5728\u5fae\u4fe1\u7fa4\u91cc\u8ba8\u8bba\u8ba8\u8bba\u3002<\/p>\n<\/blockquote>\n<p>\u53c2\u8003\u7684\u94fe\u63a5\uff0c \u6211\u5728\u7b2c\u4e8c\u671f\u4efb\u52a1\u53d1\u5e03\u7684\u65f6\u5019\u516c\u5e03\u3002\u5f00\u59cb\u6298\u817e\u8d77\u6765\u5427\u3002<\/p>\n<h2>\u9898\u5916\u8bdd<\/h2><ul><li>\u6691\u5047\u5c31\u662f\u8981\u597d\u597d\u6d6a\u7684\u3002\u5468\u672b\u53bb\u9a91trail\uff0c \u6253\u7403\uff0c \u805a\u9910\u4ec0\u4e48\u7684\u90fd\u8981\u7ea6\u8d77\u6765\u554a\u3002<\/li>\n<li>\u6211\u559c\u6b22\u7231\u6298\u817e\u7684\u5c0f\u4f19\u4f34\u3002 \u6709\u4ec0\u4e48\u60f3\u8bf4\u7684\u8bdd\u90fd\u53ef\u4ee5\u79c1\u6233\u6211\u3002<\/li>\n<li>\u8ba4\u771f\u5bf9\u5f85\u68a6\u60f3\u3002 \u53ef\u80fd\u8fd9\u4e2a\u65f6\u4ee3\u6700\u4e00\u6587\u4e0d\u503c\u548c\u88ab\u8f7b\u6613\u4f4e\u4f30\u7684\uff0c \u5c31\u662f\u68a6\u60f3\u4e86\u3002<\/li>\n<\/ul>"},{"title":"\u5173\u4e8e\u521b\u4e1a, \u90a3\u4e9b\u4e0d\u80fd\u8bf4\u7684\u79d8\u5bc6","link":"http:\/\/chocoluffy.com\/2016\/04\/25\/%E5%85%B3%E4%BA%8E%E5%88%9B%E4%B8%9A%EF%BC%8C-%E9%82%A3%E4%BA%9B%E4%B8%8D%E8%83%BD%E8%AF%B4%E7%9A%84%E7%A7%98%E5%AF%86\/","guid":"http:\/\/chocoluffy.com\/2016\/04\/25\/\u5173\u4e8e\u521b\u4e1a\uff0c-\u90a3\u4e9b\u4e0d\u80fd\u8bf4\u7684\u79d8\u5bc6\/","pubDate":"2016-04-26T03:39:01.000Z","categories":["\u521b\u4e1a","\u8bfb\u4e66\u7b14\u8bb0","\u539f\u521b"],"author":"Shunzhe Yu","thumbnail":"","description":"<p>\u6bcf\u4e2a\u4eba\uff0c \u5728\u6bcf\u4e2a\u9636\u6bb5\uff0c \u90fd\u4f1a\u6709\u4e2a\u4e0d\u5bb9\u5206\u8bf4\u7684\u7406\u7531\u3002<\/p>","content":"<p>\u6bcf\u4e2a\u4eba\uff0c \u5728\u6bcf\u4e2a\u9636\u6bb5\uff0c \u90fd\u4f1a\u6709\u4e2a\u4e0d\u5bb9\u5206\u8bf4\u7684\u7406\u7531\u3002<\/p>\n<a><\/a>\n<p><img src=\"http:\/\/ac-tc2vc5tu.clouddn.com\/88dd510b8366b952.jpg\" alt=\"preface image\"><\/p>\n<p>\u8d81\u7740\u8003\u5b8c\u671f\u672b\u8003\u7684\u4e00\u6bb5\u81ea\u7531\u65f6\u95f4\uff0c \u628a\u4e4b\u524d\u4e00\u76f4\u79ef\u538b\u7740\u7684\u4e24\u672c\u4e66\u7ed9\u8bfb\u5b8c\u4e86\u3002<\/p>\n<div markdown=\"1\"><br><img src=\"http:\/\/ac-tc2vc5tu.clouddn.com\/e98f89a56b7989aa.jpeg\" alt=\"the hard thing about hard things\"><br><\/div>\n\n<p>\u7b2c\u4e00\u672c\u662f\u6765\u81eaBen Horowitz\u7684\u521b\u4e1a\u7ef4\u8270\uff0c \u524d\u534a\u6bb5\u63cf\u8ff0\u4e86\u4ed6\u7ba1\u7406Loudcloud\u5230Opsware\u5c06\u4e00\u4e2a\u6fd2\u4e34\u7834\u4ea7\u7684\u516c\u53f8\u5e26\u5230\u6700\u540e\u4ee516\u4ebf\u7f8e\u5143\u7684\u4ef7\u683c\u88ab\u60e0\u666e\u6536\u8d2d\u7684\u4f20\u5947\u7ecf\u5386\uff0c \u540e\u534a\u6bb5\u5219\u8bb0\u5f55\u4e0b\u4e86\u4ed6\u5bf9\u516c\u53f8\u7ba1\u7406\u7684\u5404\u4e2a\u7ec6\u8282\u7684\u5fc3\u5f97\u601d\u8003\u3002\u5de7\u5408\u7684\u65f6\uff0c \u5c31\u5728\u6211\u9605\u8bfb\u8fd9\u672c\u4e66\u7684\u671f\u95f4\uff0c \u66fe\u4efb\u591a\u5bb6\u4e0a\u5e02\u516c\u53f8\u8463\u4e8b\uff0c Ben\u7684\u7cbe\u795e\u5bfc\u5e08Bill Campbell\u901d\u4e16\u4e86\u3002 \u4ed6\u5bf9Ben\u8bf4\u7684\u90a3\u53e5\uff0c \u201c\u8981\u548c\u5458\u5de5\u4e00\u8d77\u5ba3\u5e03\u8fd9\u4e2a\u6d88\u606f\u201d\u7684\u544a\u8beb\u4eff\u4f5b\u8fd8\u5386\u5386\u5728\u76ee\uff0c \u901a\u8fc7Ben\u7684\u63cf\u8ff0\uff0c \u770b\u5f97\u51faCampbell\u6781\u5176\u5bcc\u6709\u540c\u7406\u5fc3(empathy)\u7684\u9886\u8896\u6c14\u8d28\u3002 \u5411Campbell\u81f4\u656c\u3002<\/p>\n<div markdown=\"1\"><br><img src=\"http:\/\/ac-tc2vc5tu.clouddn.com\/6ceefbf6929babac.png\" alt=\"toureet\"><br><\/div>\n\n<p> \u7b2c\u4e8c\u672c\u4e66\u662f\u7845\u8c37\u521b\u4e1a\u8005\u9648\u5929\u7684\u968f\u7b14\u3002 \u5728\u4e00\u4e2a\u5145\u65a5\u7740\u6765\u81eaCEO\u4e43\u81f3\u98ce\u9669\u6295\u8d44\u4eba\u89c6\u89d2\u7684\u521b\u4e1a\u56de\u987e\u7684\u73af\u5883\u4e0b\uff0c \u4e00\u4e2a\u6765\u81ea\u6280\u672f\u5408\u4f19\u4eba(CTO)\u7684\u89c6\u89d2\u663e\u5f97\u5c24\u4e3a\u53ef\u8d35\u3002 \u4ece\u6700\u65e9\u7684\u6280\u672f\u9009\u578b(\u4e3a\u4ec0\u4e48\u7528Django)\uff0c \u5230\u5e26\u9886\u5176\u5b83\u6280\u672f\u4eba\u5458\u7684\u5f00\u53d1\u548c\u7ef4\u62a4(4\u53f0EC2)\uff0c \u5230\u6280\u672f\u8fc7\u6e21\u548c\u5546\u4e1a\u9009\u62e9\uff0c \u9648\u5929\u7ed9\u4e86\u4e00\u4efd\u5f88\u8be6\u7ec6\u548c\u771f\u631a\u7684\u53c2\u8003\u9009\u9879\uff0c \u4e5f\u8ba9\u4e00\u4e2a\u975e\u5546\u5708\u7684\u5b66\u751f\uff0c \u6162\u6162\u4e86\u89e3\u5230\u56fd\u5185\u767d\u624b\u8d77\u5bb6\u521b\u4e1a\u7684\u4e00\u6761\u975e\u5e38\u6709\u4ee3\u8868\u6027\u7684\u9053\u8def\u3002\u611f\u6fc0\u9648\u5929\u8001\u5e08\u7684\u5206\u4eab\u3002<\/p>\n<p>\u66fe\u7ecf\u4e00\u76f4\u4ee5\u4e3a\uff0c \u521b\u4e1a\u662f\u4e00\u4ef6\u79bb\u81ea\u5df1\u5f88\u8fdc\u7684\u4e8b\u60c5\u3002\u76f4\u5230\u4e00\u4e2a\u6708\u524d\uff0c \u4e00\u4e2a\u591a\u4f26\u591a\u5927\u5b66\u6bd5\u4e1a\u7684\u76f4\u7cfb\u5e08\u5144\u627e\u5230\u6211\u6765\u804a\u804a\u521b\u4e1a\u7684\u53ef\u80fd\u3002 \u4ed6\u5e0c\u671b\u6211\u80fd\u591f\u4ee5\u6280\u672f\u5408\u4f19\u4eba\u7684\u8eab\u4efd\u5e2e\u4ed6\u505a\u51fa\u4e00\u4e2a\u7c7b\u4f3cairbnb\u7684\u7f51\u7ad9\u548c\u79fb\u52a8\u7aef\uff0c \u5df2\u7ecf\u6709\u53e6\u5916\u4e24\u4e2a\u5546\u79d1\u6bd5\u4e1a\u5df2\u7ecf\u5de5\u4f5c\u7684\u5b66\u59d0\u613f\u610f\u53c2\u4e0e\u5e02\u573a\u8425\u9500\u548c\u63a8\u5e7f\uff0c \u4e07\u4e8b\u5177\u5907\uff0c \u5c31\u5dee\u4e2a\u7a0b\u5e8f\u5458\u4e86\u3002<\/p>\n<p>\u4e5f\u662f\u7b2c\u4e00\u6b21\uff0c \u6211\u611f\u89c9\u5230\u521b\u4e1a\uff0c \u5176\u5b9e\u4e5f\u53ea\u662f\u4e00\u79cd\u9009\u62e9\u7f62\u4e86\uff0c \u7a81\u7136\u60f3\u5230\u4e00\u53e5\u5fae\u535a\u4e0a\u770b\u5230\u7684\u8bdd\uff0c \u201c\u5bf9\u6709\u80fd\u529b\u7684\u4eba\u6765\u8bf4\uff0c \u5f88\u591a\u4e8b\u60c5\u4e0d\u662f\u673a\u4f1a\uff0c \u800c\u662f\u9009\u62e9\u3002\u201d\uff0c \u6211\u5f53\u7136\u4e0d\u89c9\u5f97\u6211\u81ea\u5df1\u6709\u80fd\u529b\u548c\u628a\u63e1\u5728\u8fd9\u4e2a\u9636\u6bb5\u5c31\u5408\u9002\u6280\u672f\u5408\u4f19\u4eba\u7684\u8eab\u4efd\uff0c \u53ea\u662f\u5f53\u6211\u5728\u4e00\u4e2a\u65c1\u89c2\u8005\u7684\u89d2\u5ea6\u53bb\u770b\u6211\u8eab\u8fb9\u7684\u6545\u4e8b\u65f6\uff0c \u597d\u50cf\u521b\u4e1a\uff0c \u4e5f\u5e76\u6ca1\u6709\u503e\u5bb6\u8361\u4ea7\uff0c \u5b64\u6ce8\u4e00\u63b7\u822c\u7684\u60ca\u5929\u52a8\u5730\uff0c \u597d\u50cf\u521b\u4e1a\uff0c \u66f4\u50cf\u662f\u521b\u59cb\u4eba\u5728\u751f\u547d\u67d0\u4e2a\u65f6\u671f\u8d74\u7684\u4e00\u573a\u7ea6\uff0c \u9009\u62e9\u4e86\u4e00\u6761\u4eba\u8ff9\u7f55\u81f3\u7684\u8def\uff0c \u4e5f\u7531\u6b64\u4e49\u65e0\u53cd\u987e\u3002<\/p>\n<p>\u4e0b\u9762\u662f\u6211\u5728\u9605\u8bfb\u65f6\u8bb0\u5f55\u4e0b\u7684\u6587\u5b57\uff0c \u4ece\u6211\u7684\u89d2\u5ea6\u51fa\u53d1\uff0c \u6216\u6458\u5f55\uff0c \u6216\u76f4\u63a5\u662f\u81ea\u5df1\u7684\u611f\u53d7\uff0c \u50cf\u300a\u91d1\u8537\u8587\u300b\u91cc\u90a3\u4e2a\u6536\u96c6\u7740\u91d1\u8272\u5c18\u571f\u7684\u8001\u4eba\uff0c \u6211\u628a\u5b83\u4eec\u7559\u5728\u8fd9\u91cc\uff1a<\/p>\n<h2>The hard thing about hard things<\/h2><ul><li>\u5728\u56e2\u961f\u6709\u5341\u51e0\u4e2a\u4eba\u7684\u65f6\u5019\uff0c \u6211\u62db\u4e86\u4e00\u4e2a\u4eba\u529b\u7ba1\u7406\u4eba\u5458\uff0c \u4e13\u95e8\u5e2e\u6211\u4eec\u62db\u8058\u6700\u806a\u660e\u7684\u4eba\u4ece\u7845\u8c37\u3002<\/li>\n<li>Ben\u4ece\u4e00\u4e2a\u540c\u4e8b\u5206\u4eab\u7684mosaic\u6d4f\u89c8\u5668\uff0c \u53d1\u73b0\u8fd9\u5c31\u662f\u672a\u6765\uff0c \u4e8e\u662f\u7b2c\u4e8c\u5929\u5c31\u53bb\u9762\u8bd5mosaic\u516c\u53f8\u3002<\/li>\n<li><strong>\u7a76\u7adf\u4e3a\u4ec0\u4e48\u8981\u4e0a\u5e02\uff1f<\/strong> \u5728\u6587\u4e2d\uff0c \u4f5c\u8005\u662f\u57282000\u5e74\u4e92\u8054\u7f51\u6ce1\u6cab\u7684\u65f6\u5019\uff0c \u53d1\u73b0\u79c1\u4eba\u8d44\u91d1\u5df2\u7ecf\u6ca1\u6709\u51fa\u8def\u7684\u65f6\u5019\uff0c \u60f3\u5230\u516c\u5f00\u4e0a\u5e02\uff0c \u8ba4\u4e3a\u516c\u5f00\u5e02\u573a\uff0c \u4f1a\u6709\u66f4\u591a\u7684\u4eba\u6765\u7ed9\u81ea\u5df1\u6295\u8d44\uff0c \u800c\u4e0d\u662f\u4e00\u76f4\u4ee5\u6765\u79c1\u4eba\u6295\u8d44\u8005\u7684\u94b1\u3002<\/li>\n<li><strong>\u5982\u4f55\u505a\u8d44\u4ea7\u91cd\u7ec4\uff1f<\/strong> \u5728Ben\u5373\u5c06\u7834\u4ea7\u7684\u65f6\u5019\uff0c \u4ed6\u95ee\u4ed6\u81ea\u5df1\uff0c \u5982\u679c\u8981\u9000\u51fa\uff0c \u4ed6\u4f1a\u600e\u4e48\u505a\uff0c \u4ed6\u8bf4\u4ed6\u4f1a\u628aopsware\u5e26\u51fa\u6765\u5356\u7ed9\u522b\u4eba\u7528\uff0c \u56e0\u4e3a\u8fd9\u662f\u4ed6\u81ea\u5df1\u5f00\u53d1\u7684\uff0c \u4ed6\u77e5\u9053\u8fd9\u4e2a\u7279\u522b\u597d\u7528\uff0c \u4f46\u662f\u57fa\u4e8e\u5f53\u65f6\u7684\u60c5\u51b5\uff0c \u8fd9\u4e2a\u8f6f\u4ef6\u88ab\u9650\u5236\u4f4f\uff0c \u6ca1\u6cd5\u548cloudcloud\u5206\u79bb\u5f00\u7528\uff0c \u4e8e\u662f\u4ed6\u56de\u53bb\u5206\u914d\u4e86\u4e00\u4e2a\u7cbe\u82f1\u5c0f\u7ec4\u53bb\u5c1d\u8bd5\u4ece\u73b0\u6709\u8f6f\u4ef6\u5206\u79bb\u51fa\u6765\u3002<\/li>\n<li>\u5728\u7d27\u6025\u60c5\u51b5\u7684\u65f6\u5019\uff0c \u6709\u5f88\u6709\u591a\u4eba\u8bae\u8bba\u4f60\uff0c \u4ed6\u4eec\u6709\u4e9b\u4eba\u662f\u56e0\u4e3a\u540c\u60c5\uff0c \u56e0\u4e3a\u5173\u5fc3\uff0c \u4e5f\u53ef\u80fd\u662f\u60f3\u6467\u6bc1\u4f60\u3002 \u4e5f\u4f1a\u6709\u5f88\u591a\u4eba\u60f3\u5e2e\u4f60\uff0c \u60f3\u5e2e\u4f60\u6446\u8131\u56f0\u5883\uff0c \u7ed9\u51fa\u5404\u79cd\u5404\u6837\u7684\u5efa\u8bae\u3002 \u6c38\u8fdc\u4ece\u6570\u636e\u548c\u5177\u4f53\u60c5\u51b5\u51fa\u53d1\uff0c \u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u65c1\u89c2\u8005\u6709\u8fd9\u4e2a\u8010\u5fc3\u5e2e\u4f60\u7406\u987a\u6240\u6709\u7684\u5546\u4e1a\u7b56\u7565\uff0c \u5982\u679c\u4f60\u4efb\u51ed\u90a3\u4e9b\u6839\u672c\u4e0d\u4e86\u89e3\u5177\u4f53\u60c5\u51b5\u7684\u4eba\u5bf9\u516c\u53f8\u6307\u624b\u753b\u811a\uff0c \u90a3\u516c\u53f8\u5c31\u65e0\u836f\u53ef\u6551\u4e86\u3002<\/li>\n<\/ul><p><img src=\"http:\/\/ac-tc2vc5tu.clouddn.com\/93c8d666c10be4ba.png\" alt=\"pied piper\"><\/p>\n<p><strong>\u5f88\u591a\u65f6\u5019\uff0c \u6211\u4eec\u90fd\u4f1a\u8bc4\u8bba\u90a3\u4e9b\u4f1f\u5927\u7684CEO\uff0c \u5f88\u81ea\u604b\u81ea\u5927\uff0c narcisist\uff0c \u4e13\u5236\u3002 \u7136\u800c\u4ed6\u4eec\u53ea\u662f\u6ca1\u6709\u542c\u8fdb\u53bb\u90a3\u4e9b\u611a\u8822\u7684\u5efa\u8bae\u5427\u4e86\uff0c \u53c8\u6709\u8c01\u6bd4\u4ed6\u4eec\u66f4\u6e05\u695a\u516c\u53f8\u53d1\u5c55\u7684\u6bcf\u4e00\u4e2a\u7ec6\u8282\u5462\uff1f<\/strong><\/p>\n<ul><li><p>EPS\u771f\u6b63\u60f3\u8981\u7684\u662ftangram\u8fd9\u5bb6\u516c\u53f8\u7684\u8f6f\u4ef6\uff0c \u800copsware\u5728tangram\u6bd4\u8f83\u4f4e\u80a1\u4ef7\u7684\u65f6\u5019\u6536\u8d2d\u4e86tangram\uff0c \u8ba9\u4e3b\u8981\u8d1f\u8d23\u878d\u6d3dopsware\u7684EPS\u8d1f\u8d23\u4efbfrank\u7279\u522b\u9ad8\u5174\u3002\u4e5f\u5c31\u662fBen\u4ed6\u7684\u8981\u6c42\uff0c \u5f04\u6e05\u695a\u4e70\u65b9\u5230\u5e95\u60f3\u8981\u4ec0\u4e48\uff0c \u53bb\u63d0\u4f9b\u4ed6\u6700\u60f3\u8981\u7684\u4e1c\u897f\uff0c \u800c\u4e0d\u662f\u4e00\u4e2a\u52b2\u5730\u5938\u81ea\u5df1\u597d\u3002<\/p>\n<\/li>\n<li><p>\u540c\u65f6\u975e\u5e38\u91cd\u8981\u7684\u4e5f\u662f\u56e2\u961f\u4f1a\u8bae\uff0c Ben\u5728\u4e24\u6b21\u4f1a\u8bae\u4e2d\u8868\u73b0\u90fd\u8d85\u51fa\u4e86\u6211\u7684\u610f\u6599\u3002\u7b2c\u4e00\u6b21\u5728\u8ba1\u5212\u4eceloudcloud\u4e2d\u5206\u79bb\u51faopsware\u7684\u65f6\u5019\uff0c Ben\u5c06\u65b0\u516c\u53f8\u7684\u80a1\u7968\u9001\u7ed9\u6240\u6709\u4eba\uff0c \u540c\u65f6\u5141\u8bb8\u6709\u4eba\u51b3\u5b9a\u9000\u51fa\u3002 \u201c\u6211\u4e0d\u4f1a\u9001\u4f60\u51fa\u95e8\uff0c \u4f46\u6211\u6c47\u5e2e\u4f60\u627e\u4efd\u65b0\u7684\u5de5\u4f5c\u3002\u8981\u660e\u786e\u81ea\u5df1\u6b64\u523b\u6240\u7ad9\u7684\u4f4d\u7f6e\uff0c \u54ea\u4e9b\u4eba\u53ef\u4ee5\u4f9d\u9760\u3002\u544a\u8bc9\u5927\u5bb6\u4f60\u7684\u51b3\u5b9a\u3002\u201d<br>\u7b2c\u4e8c\u6b21\uff0c \u5728\u9047\u5230bladelogic\u8fd9\u4e2a\u5f3a\u52b2\u7684\u5bf9\u624b\u7684\u65f6\u5019\uff0c Ben\u518d\u6b21\u5f00\u4e86\u4e00\u4e2a\u5168\u4f53\u7684\u4f1a\u8bae\uff0c \u548c\u5927\u5bb6\u8bf4\u660e\u767d\uff0c \u4ed6\u9700\u8981\u5927\u5bb6\uff0c \u5728\u672a\u6765\u76846\u4e2a\u6708\u91cc\u9762\u536f\u8db3\u4e86\u52b2\uff0c \u201c\u6211\u8981\u4f60\u4eec\u548c\u4f60\u4eec\u6700\u5173\u5fc3\u7684\u4eba\u8ba4\u771f\u5730\u8c08\u4e00\u6b21\u8bdd\uff0c \u6211\u4eec\u9700\u8981\u4e00\u6b21\u8fbe\u6210\u76ee\u6807\u3002\u201d<\/p>\n<\/li>\n<li><p>\u7814\u53d1\u51fa\u597d\u4ea7\u54c1\u662f\u521b\u65b0\u8005\u7684\u804c\u8d23\uff0c \u800c\u4e0d\u662f\u5ba2\u6237\u3002 <strong>\u5ba2\u6237\u53ea\u77e5\u9053\u6839\u636e\u73b0\u5728\u7684\u4ea7\u54c1\u4f53\u9a8c\u6765\u5224\u65ad\u81ea\u5df1\u60f3\u8981\u4ec0\u4e48\u3002<\/strong><\/p>\n<\/li>\n<li><p>\u5728\u4f1a\u8bae\u4e2d\u6dfb\u52a0\u4e00\u9879\uff0c \u201c\u6211\u73b0\u5728\u6ca1\u6709\u505a\u4ec0\u4e48\u201d \u7684\u8bae\u7a0b\u3002\u800c\u5927\u5bb6\u89c9\u5f97\u7684\u8fd8\u6ca1\u6709\u505a\u5230\u7684\u4e8b\uff0c \u90fd\u662f\u4e00\u81f4\u7684\u3002\u90a3\u5c31\u662f\u81ea\u52a8\u5316\u3002\u5728\u516c\u53f8\u6162\u6162\u505a\u5927\u7684\u65f6\u5019\uff0c \u4f1a\u6709\u5f88\u591a\u6536\u8d2d\u7684\u58f0\u97f3\uff0c \u5176\u4e2d\uff0c \u4f60\u4e5f\u4f1a<strong>\u4ec5\u4ec5\u56e0\u4e3a\u522b\u4eba\u6253\u7b97\u6536\u8d2d\u7684\u610f\u613f\u800c\u5f97\u5230\u80a1\u7968\u7684\u6ea2\u4ef7<\/strong>\uff0c \u8981\u770b\u6e05\u695a\u81ea\u5df1\u7684\u4ef7\u503c\u3002 \u540c\u65f6\uff0c \u4e5f\u5145\u5206\u4e86\u89e3\u81ea\u5df1\u7684\u76f4\u7cfb\u4e0b\u5c5e\u4ed6\u4eec\u7684\u610f\u613f\u3002<\/p>\n<\/li>\n<li><p>\u800c\u5bf9\u4e8e\u4e00\u4e2aCEO\u80fd\u529b\u7684\u6700\u597d\u7684\u8003\u91cf\uff0c \u662f\u9006\u5883\u4e0d\u662f\u987a\u5883\uff0c \u662f\u4e13\u5fc3\u81f4\u5fd7\u7684\u80fd\u529b\uff0c \u548c\u5728\u8d70\u6295\u65e0\u8def\u7684\u65f6\u5019\u9009\u62e9\u6700\u4f73\u8def\u7ebf\u7684\u80fd\u529b\u3002\u4e0d\u662f\u53bb\u5982\u4f55\u4e0d\u72af\u9519\u8bef\uff0c \u800c\u662f\u5728\u72af\u9519\u8bef\u4e4b\u540e\u5982\u4f55\u53bb\u6df1\u523b\u7406\u89e3\u90a3\u4e9b\u4f60\u5fc5\u987b\u8981\u505a\u7684\u4e8b\u3002<\/p>\n<\/li>\n<li><p>\u5f53\u4f60\u610f\u8bc6\u5230\u4e00\u4e2aCEO\u7684\u804c\u8d23\u5c31\u662f\u4e3a\u516c\u53f8\u89e3\u51b3\u95ee\u9898\u7684\u65f6\u5019\uff0c \u4f60\u5c31\u77e5\u9053\uff0c \u6709\u4e9b\u6ca1\u6709\u7528\u7684\u7a7a\u8bdd\u53ef\u4ee5\u7701\u53bb\u4e86\u3002<\/p>\n<\/li>\n<li><p><strong>\u5728\u4eba\u7c7b\u7684\u6240\u6709\u4ea4\u5f80\u4e2d\uff0c \u6c9f\u901a\u91cf\u548c\u4fe1\u4efb\u7a0b\u5ea6\u6210\u53cd\u6bd4\u3002<\/strong>\u73b0\u5728\u5f88\u591a\u7684\u516c\u53f8\u6587\u5316\u4f1a\u963b\u788d\u574f\u6d88\u606f\u7684\u4f20\u64ad\uff0c \u771f\u76f8\u5982\u679c\u6c38\u8fdc\u53ea\u80fd\u88ab\u620f\u8c11\u5730\u8bf4\u51fa\u6765\uff0c \u90a3\u4e48\u7b49\u5230\u91c7\u53d6\u884c\u52a8\u7684\u65f6\u5019\u5c31\u665a\u4e86\u3002\u5efa\u7acb\u4e00\u4e2a\u5956\u52b1\u6587\u5316\uff0c \u5bf9\u627e\u5230\u95ee\u9898\u75c7\u7ed3\u548c\u89e3\u51b3\u65b9\u6848\u7684\u4eba\u7ed9\u4e88\u5956\u52b1\u3002\u4e8e\u6b64\u540c\u65f6\uff0c \u516c\u53f8\u7684\u4efb\u4f55\u51b3\u7b56\u5fc5\u987b\u5f53\u673a\u7acb\u65ad\uff0c \u6bd4\u5982\u50cf\u88c1\u5458\u8fd9\u4e00\u7c7b\u7684\u91cd\u5927\u51b3\u5b9a\uff0c \u5982\u679c\u4e0d\u5c0f\u5fc3\u8d70\u6f0f\u98ce\u58f0\uff0c \u5f53\u5458\u5de5\u8fc7\u6765\u8d28\u95ee\u7ba1\u7406\u5c42\u7684\u65f6\u5019\uff0c \u7ba1\u7406\u8005\u5c31\u53ea\u6709\u4e24\u79cd\u9009\u62e9\u4e86\uff0c \u8981\u4e48\u8868\u73b0\u51fa\u4e0d\u77e5\u60c5\uff0c \u8981\u4e48\u5c31\u662f\u6492\u8c0e\uff0c \u800c\u8fd9\u5176\u4e2d\u4efb\u4f55\u7684\u4e00\u4e2a\u884c\u4e3a\u90fd\u4f1a\u7834\u574f\u516c\u53f8\u6587\u5316\u3002<\/p>\n<\/li>\n<li><p>\u5bf9\u5f85\u88c1\u5458\u3002 \u88c1\u5458\u5bf9\u516c\u53f8\u7684\u6700\u5927\u4f24\u5bb3\u5c31\u662f\u58eb\u6c14\u3002\u800c\u58eb\u6c14\u4f4e\u4e0b\u7684\u4e3b\u8981\u8868\u73b0\u75c7\u72b6\u5c31\u662f\u6000\u7591\uff0c \u6240\u4ee5\u8d8a\u662f\u56f0\u96be\u7684\u65f6\u5019\uff0c \u5c31\u8d8a\u8981\u5766\u8bda\u76f8\u5f85\u4f60\u7684\u5458\u5de5\u3002\u540c\u65f6\uff0c \u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u4e25\u91cd\u548c\u4e25\u8083\u7684\u65f6\u523b\uff0c \u9700\u8981\u4e00\u540d\u76f4\u63a5\u4eb2\u5c5e\u4e0a\u53f8\u53bb\u6e29\u548c\u5730\u89e3\u51b3\u8fd9\u4e2a\u4e8b\u60c5\uff0c \u4f60\u53ea\u8981\u8bb0\u4f4f\uff0c \u4f60\u7684\u5458\u5de5\u53ef\u80fd\u5e76\u65e0\u6cd5\u8bb0\u5f97\u4ed6\u5728\u8fd9\u91cc\u5de5\u4f5c\u7684\u6bcf\u4e00\u5929\uff0c \u4f46\u662f\u4ed6\u4e00\u5b9a\u4f1a\u8bb0\u4f4f\u4ed6\u88ab\u8f9e\u6389\u7684\u90a3\u4e00\u5929\u3002 <strong>\u6c38\u8fdc\u8bb0\u5f97\uff0c \u806a\u660e\u662f\u4e00\u79cd\u5929\u8d4b\uff0c \u800c\u5584\u826f\u662f\u4e00\u79cd\u9009\u62e9\u3002<\/strong> \u4f46\u662f\u6709\u4e00\u70b9\u4e5f\u5f88\u91cd\u8981\uff0c <strong>\u8bdd\u662f\u8bf4\u7ed9\u7559\u4e0b\u6765\u7684\u4eba\u542c\u7684<\/strong>\uff0c \u4f60\u600e\u4e48\u5bf9\u5f85\u90a3\u4e9b\u88ab\u8f9e\u53bb\u7684\u5458\u5de5\uff0c \u5728\u56f0\u96be\u65f6\u5019\uff0c \u5c31\u4f1a\u662f\u7559\u4e0b\u6765\u7684\u5458\u5de5\u7684\u4e00\u6b21\u81ea\u6211\u6620\u7167\u3002<\/p>\n<\/li>\n<li><p>\u4e00\u5b9a\u8981\u660e\u6670\u4ec0\u4e48\u65f6\u5019\u7b28\u529e\u6cd5\u6700\u6709\u7528\uff0c \u4e0d\u662f\u6b3a\u9a97\u81ea\u5df1\u8bf4\uff0c \u201c\u4ea7\u54c1\u662f\u5b8c\u7f8e\u7684\uff0c \u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c \u95ee\u9898\u51fa\u5728\u9500\u552e\u4eba\u5458\uff0c \u95ee\u9898\u51fa\u5728\u7528\u6237\u7684\u4e09\u5206\u949f\u70ed\u5ea6\u3002\u201d\uff0c \u4e0d\uff0c \u95ee\u9898\u662f\uff0c \u4ea7\u54c1\u4e0d\u591f\u597d\u3002<\/p>\n<\/li>\n<li><p>\u4e0d\u8ba9\u8fd9\u4e2a\u516c\u53f8\u6700\u7cbe\u82f1\u7684\u4eba\u624d\u53bb\u53c2\u4e0e\u6700\u68d8\u624b\u7684\u95ee\u9898\uff0c \u5b8c\u5168\u5c31\u662f\u6d6a\u8d39\u3002<strong>\u4e00\u4e2a\u4eba\uff0c \u65e0\u8bba\u591a\u51fa\u8272\uff0c \u90fd\u89e3\u51b3\u4e0d\u4e86\u4ed6\u4e0d\u4e86\u89e3\u7684\u95ee\u9898\u3002\u4e5f\u5c31\u50cf\u5f00\u6e90\u793e\u533a\u6240\u5021\u5bfc\u7684\u4e00\u6837\uff0c \u53ea\u6709\u6709\u8db3\u591f\u591a\u7684\u773c\u955c\uff0c \u5c31\u53ef\u4ee5\u8ba9\u6240\u6709\u95ee\u9898\u6d6e\u51fa\u6c34\u9762\u3002<\/strong><\/p>\n<\/li>\n<li><p>\u5f88\u591a\u65f6\u5019\uff0c \u4f60\u4f1a\u5429\u5490\u5f88\u591a\u6307\u4ee4\u7ed9\u4f60\u7684\u4e0b\u5c5e\uff0c \u4f46\u4ed6\u4eec\u5e76\u4e0d\u4e00\u5b9a\u4f1a\u4e25\u683c\u6267\u884c\uff0c \u751a\u81f3\u4e0d\u4f1a\u6267\u884c\u8fd9\u4e9b\u8981\u6c42\u3002 \u800c\u8fd9\u79cd\u73b0\u8c61\u7684\u80cc\u540e\u539f\u56e0\u662f\uff0c <strong>\u4f60\u53ea\u544a\u8bc9\u4e86\u4ed6\u4eec\u5e94\u8be5\u600e\u4e48\u505a\uff0c \u4ed6\u4eec\u5374\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\u3002<\/strong>\u4e00\u4e2a\u597d\u7684\u5de5\u4f5c\u73af\u5883\u5c31\u662f\uff0c \u6bcf\u4e2a\u4eba\u65e9\u4e0a\u4e00\u7741\u5f00\u773c\u775b\u5c31\u77e5\u9053\u81ea\u5df1\u6240\u505a\u7684\u5de5\u4f5c\u9ad8\u6548\u6709\u7528\u3002\u7ba1\u7406\u5c42\u9700\u8981\u548c\u6bcf\u4e2a\u5458\u5de5\u6709\u4e00\u5bf9\u4e00\u7684\u4f1a\u9762\u3002\u5f53\u7136\u5c31\u6709\u4eba\u95ee\u4e86\uff0c \u597d\u7684\u5de5\u4f5c\u73af\u5883\u548c\u574f\u7684\u5de5\u4f5c\u73af\u5883\u6709\u4ec0\u4e48\u533a\u522b\uff0c \u662f\u7684\uff0c \u5728\u4e00\u5207\u987a\u5229\u7684\u65f6\u5019\uff0c \u6ca1\u6709\u533a\u522b\uff0c \u4f60\u7684\u4eae\u773c\u6210\u7ee9\u4f1a\u906e\u4f4f\u6240\u6709\u53ef\u80fd\u8d28\u7591\u58f0\u7684\u5634\uff0c \u95ee\u9898\u4e0d\u662f\u6ca1\u6709\uff0c \u800c\u662f\u8ba9\u89e3\u51b3\u95ee\u9898\u7684\u4eba\u81ea\u6211\u6000\u7591\u4e86\u3002 \u4f46\u662f\u4e00\u65e6\u5728\u4e8b\u60c5\u4e0d\u987a\u5229\u7684\u65f6\u5019\uff0c \u597d\u4e0e\u574f\u5c31\u662f\u751f\u4e0e\u6b7b\u7684\u5dee\u522b\u3002<\/p>\n<\/li>\n<li><p><strong>\u5982\u4f55\u5bf9\u751f\u4ea7\u529b\u8fdb\u884c\u76f4\u89c2\u7684\u6d4b\u91cf\uff1f<\/strong><\/p>\n<\/li>\n<li><p>\u597d\u7684\u4ea7\u54c1\u7ecf\u7406\u4f1a\u5c06\u4e00\u4e9b\u91cd\u8981\u95ee\u9898\u4ee5\u4e66\u9762\u5f62\u5f0f\u7eaa\u5f55\u4e0b\u6765\uff0c \u7ade\u4e89\u4e2d\u7684\u826f\u7b56\uff0c \u8270\u96be\u7684\u67b6\u6784\u9009\u62e9\uff0c \u8270\u96be\u7684\u4ea7\u54c1\u9009\u62e9\u3002\u800c\u5dee\u7684\u4ea7\u54c1\u7ecf\u7406\uff0c \u53ea\u4f1a\u4ee5\u53e3\u5934\u7684\u65b9\u5f0f\u8868\u8fbe\u81ea\u5df1\u7684\u610f\u89c1\u3002<\/p>\n<\/li>\n<li><p>\u5927\u516c\u53f8\u7684\u4e3b\u7ba1\u90fd\u662f\u5e94\u7b54\u5f0f\u7684, \u5f53\u6709\u4e8b\u60c5\u8981\u5b9e\u4f8b\uff0c \u63a5\u53d7\u5230\u547d\u4ee4\u4e4b\u540e\uff0c \u624d\u4f1a\u53bb\u6267\u884c\u3002\u800c\u5c0f\u516c\u53f8\u7684\u4e3b\u7ba1\uff0c \u521b\u4e1a\u516c\u53f8\u7684\u7ba1\u7406\u8005\uff0c \u4f60\u4e0d\u81ea\u5df1\u4e3b\u52a8\u627f\u62c5\u8d77\u5f88\u591a\u7684\u8d23\u4efb\u8fd9\u4e2a\u516c\u53f8\u5c31\u5012\u4e86\u554a\u3002\u4e00\u79cd\u5f88\u5371\u9669\u7684\u60c5\u51b5\u5c31\u662f\uff0c \u5728\u521b\u4e1a\u516c\u53f8\u8270\u96be\u7684\u65f6\u671f\uff0c \u4f60\u96c7\u7528\u4e86\u4e00\u4e2a\u8ba4\u80a1\u6570\u8fd8\u4e0d\u5c0f\u7684\u9ad8\u85aa\u9ad8\u7ba1\uff0c \u4ed6\u597d\u50cf\u5e76\u6ca1\u6709\u5e72\u4ec0\u4e48\u4e8b\uff0c \u5374\u80fd\u591f\u5360\u5230\u4e00\u5b9a\u6bd4\u4f8b\u7684\u5229\u6da6\u3002\u8fd9\u5c31\u662f\u5e76\u4e0d\u9002\u5e94\u8282\u594f\u7684\u7ba1\u7406\u5c42\uff0c \u5bf9\u521b\u4e1a\u516c\u53f8\u7684\u594b\u6597\u5458\u5de5\u6709\u5f88\u5927\u7684\u6253\u51fb\u3002<\/p>\n<\/li>\n<li><p><strong>\u5173\u4e8e\u62db\u8058<\/strong>\u3002 \u6c38\u8fdc\u8981\u63d0\u9192\u81ea\u5df1\uff0c \u6211\u4eec\u662f\u627e\u8c01\u62e5\u6709\u89e3\u51b3\u95ee\u9898\u7684\u80fd\u529b\uff0c \u800c\u4e0d\u662f\u8c01\u770b\u4e0a\u53bb\u6700\u9002\u5408\u3002\u6bcf\u4e2a\u4eba\u90fd\u4f1a\u6709\u6216\u591a\u6216\u5c11\u7684\u7f3a\u70b9\uff0c \u4ed6\u53ef\u80fd\u4e0d\u5584\u4e8e\u8868\u8fbe\uff0c \u4ed6\u53ef\u80fd\u6709\u70b9\u81ea\u5927\uff0c \u6709\u70b9\u813e\u6c14\u8e81\uff0c \u8fd9\u4e9b\u7279\u8d28\u90fd\u4e0d\u5e94\u8be5\u8ff7\u60d1\u4f60\u771f\u6b63\u627e\u5bfb\u7684\u76ee\u6807\u3002 \u5c24\u5176\u662f\u5728\u56fd\u5185\u8fd9\u4e2a\u9c7c\u9f99\u6df7\u6742\u7684\u62db\u8058\u5e02\u573a\uff0c \u660e\u660e\u4f18\u79c0\u7684\u4eba\u5c31\u5df2\u7ecf\u662f\u51e4\u6bdb\u9e9f\u89d2\u4e86\uff0c \u5982\u679c\u4f60\u8fd8\u53ea\u5173\u6ce8\u7f3a\u70b9\uff0c \u53ea\u5e0c\u671b\u7ad9\u5728\u9ad8\u5904\u8bc4\u8bba\u4e00\u756a\u81ea\u6211\u9ebb\u9189\u7684\u8bdd\uff0c \u8fd9\u5bf9\u516c\u53f8\u5c31\u592a\u53ef\u60dc\u4e86\u3002<strong>\u5199\u4e0b\u4f60\u8ba4\u4e3a\u68c0\u9a8c\u4eba\u624d\u6700\u597d\u7684\u51e0\u4e2a\u95ee\u9898\uff0c \u5f62\u6210\u9762\u8bd5\u7684\u89c4\u8303\u3002<\/strong><\/p>\n<\/li>\n<li><p>\u4e00\u4e2a\u597d\u7684\u7ba1\u7406\u8005\u601d\u8003\u95ee\u9898\u4ece\u662f\u4f1a\u6709\u4e24\u4e2a\u89d2\u5ea6\uff0c \u4e00\u4e2a\u662f\u6211\u60f3\u600e\u4e48\u505a\uff0c \u53e6\u4e00\u4e2a\u662f\u5458\u5de5\u4f1a\u600e\u4e48\u60f3\u3002<\/p>\n<\/li>\n<li><p>\u529e\u516c\u5ba4\u653f\u6cbb<\/p>\n<ul><li>\u5982\u679c\u4f60\u7684\u5458\u5de5\u7ed9\u4f60\u63d0\u52a0\u85aa\u7684\u8981\u6c42\uff1f \u62d2\u7edd\uff0c \u5982\u679c\u4f60\u63a5\u53d7\u4e86\u8fd9\u4e2a\u8981\u6c42\uff0c \u5176\u4ed6\u5458\u5de5\u4f1a\u8ba4\u4e3a\u4f60\u52a0\u85aa\u662f\u56e0\u4e3a\u4f60\u63d0\u51fa\u4e86\u8fd9\u4e2a\u8981\u6c42\u800c\u4e0d\u662f\u56e0\u4e3a\u4f60\u51fa\u8272\u7684\u4e1a\u7ee9\u3002 \u8fd9\u4e2a\u4f1a\u8ba9\u5176\u4ed6\u4eba\u66f4\u52a0\u8dc3\u8dc3\u6b32\u8bd5\u3002\u574f\u5904\u4e8c\uff0c \u90a3\u4e9b\u529e\u516c\u5ba4\u91cc\u8001\u5b9e\u6c89\u9ed8\uff0c \u6216\u8005\u5bf9\u8fd9\u79cd\u653f\u6cbb\u624b\u6bb5\u4e0d\u654f\u611f\u7684\u4eba\uff0c \u662f\u4e0d\u662f\u5c31\u9519\u8fc7\u4e86\u52a0\u85aa\u7684\u673a\u4f1a\u5462\uff1f\u5176\u4e2d\u4e00\u4e2a\u907f\u514d\u7684\u65b9\u6cd5\u5c31\u662f<strong>\u4fdd\u8bc1\u5458\u5de5\u6536\u5165\u548c\u516c\u53f8\u6536\u5165\u4e4b\u95f4\u7684\u4e00\u81f4\u6027<\/strong>\u3002<\/li>\n<li>\u5982\u679c\u4f60\u7684\u5458\u5de5\u7ed9\u4f60\u63d0\u5e0c\u671b\u6269\u5927\u6743\u529b\u8303\u56f4\u7684\u8981\u6c42\uff1f\u4e00\u4e2a\u7edd\u5bf9\u4e0d\u80fd\u89e6\u78b0\u7684\u5e95\u7ebf\u662f\uff0c \u4f60\u7ed9\u4ed6\u4e00\u4e2a\u53e3\u5934\u627f\u8bfa\uff0c \u7ed9\u4e86\u5c0f\u9053\u6d88\u606f\u4e00\u6b21\u673a\u4f1a\u3002 \u8bb0\u4f4f\uff0c \u5728\u516c\u53f8\u7684\u51b3\u7b56\u65b9\u6848\u662f\uff0c <strong>\u51b3\u7b56\u5373\u51fa\uff0c \u7acb\u5373\u6267\u884c\uff0c \u4e0d\u8981\u5728\u4ea4\u8c08\u7684\u65f6\u5019\u6d41\u9732\u51fa\u4efb\u4f55\u53e3\u5934\u627f\u8bfa\u7684\u503e\u5411<\/strong>\u3002<\/li>\n<\/ul><\/li>\n<\/ul><ul><li><p>\u4e0d\u8981\u56e0\u4e3a\u4f60\u5728\u4e1a\u52a1\u4e0a\u7f3a\u4e4f\u7ecf\u9a8c\u5c31\u964d\u4f4e\u5bf9\u4ed6\u4eec\u5de5\u4f5c\u7684\u8981\u6c42\u3002\u5f88\u591a\u5e74\u7ecf\u8f7b\u8f7b\u7684CEO\uff0c \u4f1a\u56e0\u4e3a\u5728\u516c\u53f8\u521b\u7acb\u4e4b\u521d\u5a92\u4f53\u53d1\u5e03\u7684\u51e0\u7bc7\u6b63\u9762\u62a5\u9053\u800c\u559c\u51fa\u671b\u5916\u3002\u8fd9\u4e2a\u6807\u51c6\u592a\u4f4e\u4e86\u3002<\/p>\n<\/li>\n<li><p>\u7ba1\u7406\u4e00\u5bb6\u521b\u4e1a\u516c\u53f8\u5c31\u50cf\u9a7e\u9a76\u7740\u4e00\u8f86\u9ad8\u901f\u884c\u9a76\u7684\u6c7d\u8f66\uff0c \u5f53\u4f60\u4ee5\u4e00\u4e2a\u9ad8\u901f\u8fc7\u5f2f\u7684\u65f6\u5019\uff0c \u5343\u4e07\u522b\u770b\u5899\uff0c \u5982\u679c\u4f60\u770b\u7740\u5899\uff0c \u4f60\u5c31\u76f4\u63a5\u649e\u4e0a\u53bb\uff0c \u76ef\u7740\u8def\uff0c \u4f60\u5c31\u5b89\u7136\u65e0\u6059\u3002<\/p>\n<\/li>\n<li><p>Ben\u4ed6\u4eec\u5efa\u7acb\u4e00\u4e2a\u98ce\u6295\u516c\u53f8\u7684\u521d\u8877\uff0c \u5c31\u662f\u53d1\u73b0\u4e86\u6280\u672f\u6027\u521b\u59cb\u4ebaCEO\u548c\u804c\u4e1aCEO\u7684\u533a\u522b\uff0c \u90a3\u4e9b\u4f1f\u5927\u7684\u6280\u672f\u578b\u9a71\u52a8\u7684\u516c\u53f8\u90fd\u662f\u7531\u521b\u59cb\u4eba\u7ecf\u8425\u7684\uff0c \u7136\u800c\u6280\u672f\u578b\u521b\u59cb\u4eba\u5728\u7ba1\u7406\u4e0a\uff0c \u4eba\u8109\u4e0a\u548c\u8425\u9500\u5ba3\u4f20\u4e0a\u6709\u5f88\u5927\u7684\u4e0d\u8db3\u3002<\/p>\n<\/li>\n<\/ul><blockquote>\n<p>\u540e\u8bb0:\u5bf9\u4e8e\u300a\u9014\u5ba2\u5708\u300b\u4e00\u4e66\u7684\u603b\u7ed3\u56de\u987e\u5c06\u4f1a\u5206\u5f00\u5728\u53e6\u5916\u4e00\u7bc7\u535a\u6587\u4e2d\uff0c \u4e3b\u8981\u63a2\u8ba8\u5de5\u5177\u6027\u548c\u793e\u4ea4\u6027\u4ea7\u54c1\u7684\u6bd4\u8f83\u548c\u66f4\u591a\u521b\u59cb\u4eba\u5fc5\u987b\u6ce8\u610f\u7684\u5177\u4f53\u80a1\u6743\u7ed3\u6784\uff0c \u656c\u8bf7\u671f\u5f85\u3002<\/p>\n<p>Edit:\u300a\u9014\u5ba2\u5708\u300b\u4e00\u4e66\u7684\u9605\u8bfb\u624b\u8bb0\u5df2\u5b8c\u6210\uff0c\ud83d\udc49<a href=\"http:\/\/chocoluffy.com\/2016\/05\/13\/%E5%8F%A6%E4%B8%80%E7%A7%8D%E9%BC%93%E5%A3%B0-%E8%AF%BB%E3%80%8A%E9%80%94%E5%AE%A2%E5%9C%88%E3%80%8B%E6%9C%89%E6%84%9F\/\">\u53e6\u4e00\u79cd\u9f13\u58f0-\u8bfb\u300a\u9014\u5ba2\u5708\u300b\u6709\u611f<\/a><\/p>\n<\/blockquote>"},{"title":"\u521b\u610f\u89c6\u9891\u5206\u5c4f - HTML5 &amp; JS","link":"http:\/\/chocoluffy.com\/2016\/04\/23\/%E5%88%9B%E6%84%8F%E8%A7%86%E9%A2%91%E5%88%86%E5%B1%8F-HTML5-JS\/","guid":"http:\/\/chocoluffy.com\/2016\/04\/23\/\u521b\u610f\u89c6\u9891\u5206\u5c4f-HTML5-JS\/","pubDate":"2016-04-24T01:53:56.000Z","categories":["HTML5","javascript","web design","\u6280\u672f"],"author":"Shunzhe Yu","thumbnail":"","description":"<p>\u548c\u670b\u53cb\u804a\u5929\u65f6\u65e0\u610f\u95f4\u53d1\u73b0\u7684\u4e00\u4e2a\u521b\u610f\u89c6\u9891\u5206\u5c4f\u7684\u60f3\u6cd5\uff0c \u6765\u81ea<a href=\"http:\/\/www.beoplay.com\/products\/beoplayh7?_ga=1.127614725.969767543.1461077943#at-a-glance\">beoplay<\/a>\u8fd9\u4e2a\u9ad8\u7aef\u8033\u673a\u7684\u5ba3\u4f20\u9875\u9762\uff0c \u5728\u81ea\u5df1\u5b9e\u73b0\u7684\u8fc7\u7a0b\u4e2d\uff0c \u4e5f\u53d1\u73b0\u4e86\u89c6\u9891\u81ea\u9002\u5e94\u5c45\u4e2d\u7684\u8fd9\u4e2a\u8bbe\u8ba1\u7ec6\u8282\uff0c \u81ea\u5df1\u4e5f\u6363\u9f13\u4e86\u51fa\u6765\uff0c \u8bdd\u8bf4\u5728\u4e4b\u540e\u4ea7\u54c1\u7684\u5ba3\u4f20\u4e3b\u9875\u89c6\u9891\u53ef\u4ee5\u4e00\u8bd5\u7684\uff0c \u4ece\u4e24\u4e2a\u89c6\u89d2\u53bb\u8be0\u91ca\u540c\u4e00\u4e2a\u6545\u4e8b\uff0c \u5c31\u662f\u5bf9\u8fd9\u6837\u6709\u5fc3\u601d\u7684\u8bbe\u8ba1\u7ec6\u8282\u6ca1\u6709\u4efb\u4f55\u62b5\u6297\u529b\u5462\u3002<\/p>","content":"<p>\u548c\u670b\u53cb\u804a\u5929\u65f6\u65e0\u610f\u95f4\u53d1\u73b0\u7684\u4e00\u4e2a\u521b\u610f\u89c6\u9891\u5206\u5c4f\u7684\u60f3\u6cd5\uff0c \u6765\u81ea<a href=\"http:\/\/www.beoplay.com\/products\/beoplayh7?_ga=1.127614725.969767543.1461077943#at-a-glance\" target=\"_blank\" rel=\"external\">beoplay<\/a>\u8fd9\u4e2a\u9ad8\u7aef\u8033\u673a\u7684\u5ba3\u4f20\u9875\u9762\uff0c \u5728\u81ea\u5df1\u5b9e\u73b0\u7684\u8fc7\u7a0b\u4e2d\uff0c \u4e5f\u53d1\u73b0\u4e86\u89c6\u9891\u81ea\u9002\u5e94\u5c45\u4e2d\u7684\u8fd9\u4e2a\u8bbe\u8ba1\u7ec6\u8282\uff0c \u81ea\u5df1\u4e5f\u6363\u9f13\u4e86\u51fa\u6765\uff0c \u8bdd\u8bf4\u5728\u4e4b\u540e\u4ea7\u54c1\u7684\u5ba3\u4f20\u4e3b\u9875\u89c6\u9891\u53ef\u4ee5\u4e00\u8bd5\u7684\uff0c \u4ece\u4e24\u4e2a\u89c6\u89d2\u53bb\u8be0\u91ca\u540c\u4e00\u4e2a\u6545\u4e8b\uff0c \u5c31\u662f\u5bf9\u8fd9\u6837\u6709\u5fc3\u601d\u7684\u8bbe\u8ba1\u7ec6\u8282\u6ca1\u6709\u4efb\u4f55\u62b5\u6297\u529b\u5462\u3002<\/p>\n<a><\/a>\n<p><img src=\"https:\/\/dl.dropboxusercontent.com\/s\/09k1efohvmdkphu\/beoplay%20demo.gif?dl=0\" alt=\"\"><\/p>\n<h2>\u76ee\u6807<\/h2><p>\u4eff\u9020beoplay\u8fd9\u6b3e\u8033\u673a<a href=\"http:\/\/www.beoplay.com\/products\/beoplayh7?_ga=1.127614725.969767543.1461077943#video\" target=\"_blank\" rel=\"external\">\u4e3b\u9875\u7684\u5ba3\u4f20\u89c6\u9891<\/a>\u6765\u5b9e\u73b0\u4e00\u4e2a\u7c7b\u4f3c\u7684\u89c6\u9891\u5206\u5c4f\u7684\u6548\u679c\u3002<\/p>\n<h2>\u7248\u672c1.0\uff08\u4e0d\u52a0\u89c6\u9891\u81ea\u9002\u5e94\u5c45\u4e2d\uff09<\/h2><p><img src=\"https:\/\/dl.dropboxusercontent.com\/s\/zppojylzfsyk6in\/screensplit1.0.gif?dl=0\" alt=\"\"><\/p>\n<p>right video\u662f\u9759\u6b62\u7684\u4e0d\u52a8\u7684\uff0c \u540c\u65f6\u4f4d\u4e8e\u6700\u5e95\u5c42\u3002 \u76ee\u524d\u6240\u6709\u7684\u4f38\u7f29\u90fd\u662f\u5728\u63a7\u5236left video\uff0c \u540c\u65f6\u7531\u4e8e\u6211\u4eec\u8bbe\u7f6e\u4e86left video\u7684<code>z-index<\/code>\u4e3a3\uff0c \u90a3\u4e48\u5de6\u8fb9\u7684\u89c6\u9891\u4f1a\u8986\u76d6\u5728\u53f3\u8fb9\u7684\u89c6\u9891\u4e0a\u3002\u63a5\u4e0b\u6765\u7684\u76ee\u6807\u5c31\u5f88\u660e\u786e\u4e86\uff0c \u6211\u4eec\u9700\u8981\u8ffd\u8e2a\u9f20\u6807\u5728\u6574\u4e2acontainer\u91cc\u9762\u7684\u4f4d\u7f6e(\u6211\u4eec\u4f1a\u7528\u5360\u5bbd\u5ea6\u7684\u767e\u5206\u6bd4\u6765\u8868\u793a)\uff0c \u7136\u540e\uff0c \u901a\u8fc7\u6539\u53d8\u5de6\u8fb9\u89c6\u9891\u7684\u5bbd\u5ea6\uff0c \u540c\u65f6\u4e5f\u5c31\u628a\u4f4d\u4e8e\u4e0b\u9762\u7684\u53f3\u8fb9\u89c6\u9891\u66b4\u9732\u51fa\u6765\u4e86\uff0c \u6765\u8fbe\u5230\u5207\u6362\u7684\u6548\u679c\u3002<\/p>\n<p>\u7406\u89e3\u5230\u8fd9\u4e00\u6b65\u4e4b\u540e\uff0c\u76ee\u6807\u5c31\u662f<strong>\u5982\u4f55\u6539\u53d8\u89c6\u9891\u5bbd\u5ea6<\/strong>\u4e86\u3002<\/p>\n<h3>\u5982\u4f55\u6539\u53d8\u89c6\u9891\u5bbd\u5ea6<\/h3><p>\u8fd9\u91cc\u5176\u5b9e\u9690\u85cf\u7740\u4e00\u4e2a\u9677\u9631\uff0c \u5c31\u662f\u56e0\u4e3a\u6211\u4eec\u4e0d\u53ef\u4ee5\u76f4\u63a5\u6539\u53d8<strong>\u89c6\u9891\u672c\u8eab\u7684\u5bbd\u5ea6<\/strong>\uff0c\u56e0\u4e3a\u89c6\u9891\u7684\u9ad8\u5bbd\u6bd4\u5728\u62cd\u6444\u7684\u65f6\u5019\u5c31\u51b3\u5b9a\u4e86\uff0c \u6211\u4eec\u5982\u679c\u53ea\u62c9\u957f\u89c6\u9891\u800c\u4e0d\u540c\u65f6\u63d0\u9ad8\u9ad8\u5ea6\u7684\u8bdd\uff0c \u5c31\u4f1a\u4f7f\u5f97\u5728\u7eb5\u8f74\u4e0a\u90e8\u5206\u5185\u5bb9\u88ab\u906e\u76d6\u5230\uff0c \u5927\u81f4\u610f\u601d\u5982\u56fe\uff1a<\/p>\n<p><img src=\"http:\/\/ww2.sinaimg.cn\/large\/c5ee78b5gw1f37ixae23nj219e0oe77a.jpg\" alt=\"\"><\/p>\n<p>\u800c\u8fd9\u5e76\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u6548\u679c\uff0c \u6211\u4eec\u5e0c\u671b\uff0c \u89c6\u9891\u53ef\u4ee5\u7ef4\u6301\u5728\u540c\u4e00\u4e2a\u5927\u5c0f\uff0c\u800c\u6539\u53d8\u7684\u53ea\u662f<strong>\u89c6\u7a97\u7684\u6a2a\u5411\u79fb\u52a8<\/strong>\uff0c<br>\u8fd9\u4e00\u6b65\u6211\u7528\u5230\u4e86\u4e00\u4e2atrick\uff0c \u5c31\u662f<code>overflow: hidden;<\/code>\uff0c \u6211\u4eec\u5728\u5de6\u8fb9\u7684\u89c6\u9891\u5916\u9762\u5305\u4f4f\u4e86\u4e00\u5c42<code>div<\/code>\uff0c \u56e0\u4e3a\u6211\u4eec\u63a7\u5236\u7684\u5c31\u662f\u5de6\u8fb9\u7684\u89c6\u9891\uff0c \u7136\u540e\u6211\u4eec\u6765\u6539\u53d8\u8fd9\u4e2a\u201cwrapper\u201d\u7684\u5bbd\u5ea6\uff08\u540c\u65f6\u4fdd\u8bc1\u4fdd\u8bc1\u91cc\u9762\u7684left video\u7684\u5bbd\u5ea6\u5360\u6bd4\u4ecd\u7136\u5360\u6700\u5916\u9762container\u7684100%\uff09\uff0c \u6765\u6539\u53d8\u6211\u4eec\u7684\u89c6\u7a97\uff0c \u6240\u4ee5\u8fd9\u4e2awrapper\u5728\u7f51\u9875\u4e0a\u6240\u5305\u4f4f\u7684\u90e8\u5206\uff0c \u52a0\u4e0a\u4e86<code>overflow: hidden;<\/code>\u906e\u53bb\u4e86\u8d85\u51fa\u90e8\u5206\u540e\uff0c \u663e\u793a\u7684\u5c31\u662f\u5de6\u8fb9\u7684\u89c6\u9891\u4e86\u3002<\/p>\n<p>\u6bd4\u5982\u4e00\u5f00\u59cb\uff0c \u6211\u4eec\u5e0c\u671b\u4e24\u4e2a\u89c6\u9891\u90fd\u5404\u5360\u4e00\u534a\uff0c \u90a3\u4e48\u5de6\u8fb9\u7684\u89c6\u7a97\u4e00\u5f00\u59cb\u5c31\u4f1a\u662f\u5360\u6bd4\u539fcontainer\u7684\u5bbd\u5ea6\u768450%\uff0c \u800c\u539f\u89c6\u9891\u672c\u8eab\u7684\u5bbd\u5ea6\u5e94\u8be5\u4e0d\u53d8\uff0c \u5373container\u7684\u5bbd\u5ea6\u7684100%\uff0c \u6240\u4ee5\u6211\u4eec\u9700\u8981\u7ed9left video\u8d4b\u4e0a200%\u7684\u5bbd\u5ea6\uff0c \u7406\u7531\u662f\u8fd9\u4e2a\u5c5e\u6027\u662f\u5bf9\u5176\u76f4\u63a5\u7236\u7ea7\u7684div\u8d77\u4f5c\u7528\u7684\u3002<\/p>\n<h3>\u5f15\u5165\u89c6\u7a97<\/h3><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><\/pre><\/td><td><pre><span><span>\/* clipper \u5373\u5de6\u4fa7\u89c6\u9891\u7684\u89c6\u7a97 *\/<\/span><\/span><br><span><span>#clipper<\/span> <span>{<\/span><br><span>\t<span><span>width<\/span>:<span> <span>50%<\/span><\/span><\/span>;<\/span><br><span>\t<span><span>position<\/span>:<span> absolute<\/span><\/span>;<\/span><br><span>\t<span><span>top<\/span>:<span> <span>0<\/span><\/span><\/span>;<\/span><br><span>\t<span><span>bottom<\/span>:<span> <span>0<\/span><\/span><\/span>;<\/span><br><span>\t<span><span>overflow<\/span>:<span> hidden<\/span><\/span>;<\/span><br><span>}<\/span><\/span><br><span><\/span><br><span><span>\/* \u8be5\u5c5e\u6027\u4f5c\u7528\u4e8e\u5de6\u4fa7\u89c6\u9891  *\/<\/span><\/span><br><span><span>#clipper<\/span> <span>video<\/span> <span>{<\/span><br><span>\t<span><span>width<\/span>:<span> <span>200%<\/span><\/span><\/span>;<\/span><br><span>\t<span><span>position<\/span>:<span> absolute<\/span><\/span>;<\/span><br><span>\t<span><span>z-index<\/span>:<span> <span>10<\/span><\/span><\/span>;<\/span><br><span>}<\/span><\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>\u6548\u679c\u5982\u4e0b\uff1a<\/p>\n<p><img src=\"http:\/\/ww2.sinaimg.cn\/large\/c5ee78b5gw1f37j53tshej21a20o643j.jpg\" alt=\"init\"><\/p>\n<p>\u4e4b\u540e\u7684\u4e8b\u60c5\u5c31\u6e05\u695a\u4e86\uff0c \u6211\u4eec\u53ea\u9700\u8981\u6539\u53d8<strong>\u5de6\u8fb9\u89c6\u7a97\u7684\u5bbd\u5ea6\uff0c \u5e76\u540c\u65f6\u4fdd\u8bc1\u89c6\u9891\u672c\u8eab\u76f8\u5bf9\u539f\u5bb9\u5668\u7684\u5bbd\u5ea6\u4e0d\u53d8<\/strong>\u3002\u5199\u7684js\u4ee3\u7801\u5982\u4e0b\uff1a<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><\/pre><\/td><td><pre><span><span>var<\/span> rect = videoContainer.getBoundingClientRect(),<\/span><br><span>offset = e.pageX - videoContainer.offsetLeft,<\/span><br><span>position = ((e.pageX - videoContainer.offsetLeft) \/ videoContainer.offsetWidth) * <span>100<\/span>;<\/span><br><span><\/span><br><span><span>if<\/span> (position &lt;= <span>100<\/span>) {<\/span><br><span>\tvideoClipper.style.width = position+<span>\"%\"<\/span>;<\/span><br><span>\tleftVideo.style.width = ((<span>100<\/span>\/position)*<span>100<\/span>)+<span>\"%\"<\/span>;<\/span><br><span>\tleftVideo.style.zIndex = <span>3<\/span>;<\/span><br><span>\uff5d<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><blockquote>\n<p>\u7b80\u5355\u5730\u8bf4\uff0c \u53ea\u9700\u4fdd\u8bc1<code>videoClipper.style.width * leftVideo.style.width = 100%<\/code>\u5373\u53ef\u3002<\/p>\n<\/blockquote>\n<p>\u90a3\u6700\u540e\u4e00\u4e2a\u6539\u53d8<code>z-index<\/code>\u7684\u76ee\u7684\uff0c \u5c31\u662f\u786e\u4fdd\u5de6\u8fb9\u7684\u89c6\u9891\u4e00\u76f4\u53e0\u52a0\u5728\u53f3\u8fb9\u7684\u89c6\u9891\u4e4b\u4e0a\u3002<\/p>\n<h2>\u7248\u672c2.0\uff08\u589e\u52a0\u4e86\u81ea\u9002\u5e94\u5c45\u4e2d\uff09<\/h2><p><img src=\"https:\/\/dl.dropboxusercontent.com\/s\/8y6fr3ib87yz9h7\/screensplit2.0.gif?dl=0\" alt=\"\"><\/p>\n<p>\u521d\u8877\uff1a \u56e0\u4e3a\u4ece\u62cd\u6444\u7684\u89d2\u5ea6\uff0c \u5927\u90e8\u5206\u7684\u65f6\u95f4\uff0c \u6211\u4eec\u90fd\u4f1a\u628a\u62cd\u6444\u7684\u4e3b\u4f53\u653e\u5728\u89c6\u9891\u7684\u4e2d\u95f4\u4f4d\u7f6e\uff0c \u800c\u5982\u679c\u6211\u4eec\u53ea\u662f\u7b80\u5355\u5730\u79fb\u52a8\u89c6\u7a97\u800c\u4e0d\u6539\u53d8\u89c6\u7a97\u7684\u4e3b\u89d2\u4f4d\u7f6e\u7684\u8bdd\uff0c \u6211\u4eec\u5728\u9f20\u6807\u79fb\u52a8\u7684\u65f6\u5019\uff0c \u5c31\u53ea\u80fd\u770b\u5230\u8fb9\u8fb9\u89d2\u7684\u89c6\u9891\u5185\u5bb9\u4e86\uff0c \u8fd9\u8fdd\u53cd\u8bbe\u8ba1\u76f4\u89c9\u3002<\/p>\n<p>\u56e0\u6b64\u6211\u4eec\u5e0c\u671b\u5728\u79fb\u52a8\u89c6\u7a97\u7684\u540c\u65f6\uff0c <strong>\u540c\u65f6\u79fb\u52a8\u89c6\u9891\u672c\u8eab\u7684\u4f4d\u7f6e\u6765\u5f25\u8865\u89c6\u7a97\u7684\u504f\u5dee<\/strong>\u3002\u76f8\u5e94\u7684js\u4ee3\u7801\u662f\uff1a<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><\/pre><\/td><td><pre><span>offset = e.pageX - videoContainer.offsetLeft,<\/span><br><span>offsetRight = videoContainer.offsetWidth - offset,<\/span><br><span><\/span><br><span><span>\/\/ for adaptive resizing:<\/span><\/span><br><span>rightVideo.style.webkitTransform = <span>\"translate(\"<\/span> + offset \/ <span>2<\/span> + <span>\"px, 0)\"<\/span>;<\/span><br><span>leftVideo.style.webkitTransform = <span>\"translate(-\"<\/span> + offsetRight \/ <span>2<\/span> + <span>\"px, 0)\"<\/span>;<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><blockquote>\n<p>\u753b\u5916\u97f3\uff1a \u4f7f\u7528<code>transform<\/code>\u6765\u6539\u53d8DOM\u5143\u7d20\u7684\u4f4d\u7f6e\u76f8\u6bd4\u76f4\u63a5\u6539\u5199\u4ed6\u4eec\u7684\u201d\u5b9a\u4f4d\u5c5e\u6027\u201c\u6709\u5f88\u591a\u597d\u5904\uff0c \u5176\u4e2d\u6700\u7a81\u51fa\u7684\u5c31\u662f\uff0c transform\u4f7f\u7528\u7684\u662fGPU\uff0c \u800c\u90a3\u4e9b<code>top\\left<\/code>\u7b49\u7684\u5b9a\u4f4d\u5143\u7d20\u4f7f\u7528\u7684\u662fCPU\uff0c \u6211\u4eec\u5e0c\u671b\u5145\u5206\u5229\u7528GPU\u548c\u5b83\u63d0\u4f9b\u7684\u786c\u4ef6\u52a0\u901f\uff0c \u540c\u65f6<code>transform<\/code>\u4e5f\u4e0d\u4f1a\u89e6\u53d1\u7f51\u9875\u7684repaint\uff0c \u4ece\u800c\u5728\u6e32\u67d3\u4e0a\u66f4\u52a0\u7684smooth\u548cfast\u3002<\/p>\n<\/blockquote>\n<p>\u90a3\u8fd9\u4e2a\u5730\u65b9\uff0c<code>offset<\/code>\u5c31\u662f\u9f20\u6807\u5728container\u91cc\u9762\u8ddd\u79bb\u5de6\u8fb9\u8fb9\u6846\u7684\u8ddd\u79bb\uff0c \u90a3\u4e48\u6211\u4eec\u540c\u65f6\u6839\u636e\u8fd9\u4e2a\u8ddd\u79bb\uff0c \u8ba9\u5de6\u8fb9\u7684\u89c6\u9891\u5728\u89c6\u7a97\u79fb\u52a8\u65f6\uff0c <strong>\u5f80\u76f8\u53cd\u7684\u65b9\u5411\u4ee5\u4e00\u534a\u7684\u901f\u5ea6\u79fb\u52a8\u6765\u5f25\u8865\u89c6\u7a97\u504f\u5dee<\/strong>\u3002\u4f7f\u5f97\u53ef\u4ee5\u5728\u89c6\u7a97\u79fb\u52a8\u7684\u65f6\u5019\uff0c \u59cb\u7ec8\u4fdd\u6301\u89c6\u9891\u672c\u8eab\u62cd\u6444\u7684\u4e3b\u4f53\u89c6\u89d2\u4e5f\u5904\u4e8e\u8be5\u89c6\u7a97\u7684\u4e3b\u4f53\u89c6\u89d2! \u539f\u7406\u53ef\u4ee5\u53c2\u8003\u8fd9\u4e2a\u56fe\uff1a<\/p>\n<p><img src=\"https:\/\/dl.dropboxusercontent.com\/s\/t99wbc4n3s8c4r7\/screensplit3.0.gif?dl=0\" alt=\"\"><\/p>\n<p>\u90a3\u4e48\u4e5f\u5c31\u5927\u529f\u544a\u6210\u5566!<\/p>\n<h2>\u603b\u7ed3<\/h2><p>HTML5\u5bf9media\u6587\u4ef6\u66f4\u591a\u529f\u80fd\u4e0a\u7684\u652f\u6301\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u66f4\u597d\u7684\u64cd\u4f5cmedia\u6587\u4ef6\uff0c \u5305\u62ec\u89c6\u9891\u7684\u5f00\u59cb\u6682\u505c\uff0c \u4ee5\u53ca\u5404\u79cd\u97f3\u91cf\u7684\u8c03\u8282\uff0c \u800c\u8fd9\u4e2a\u7a0b\u5e8f\u5b9e\u4f8b\uff0c \u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5bf9\u76f8\u5173API\u7684\u4f7f\u7528\u7684\u4e00\u4e2a\u793a\u8303\u548c\u4e00\u4e2a\u5c0f\u5c0f\u7684\u521b\u610f\u7ec6\u8282\u3002\u8fd9\u4e2a\u9879\u76ee\uff0c \u4e5f\u662f\u996d\u540e\u548c\u670b\u53cb\u804a\u5929\u804a\u51fa\u6765\u7684\u5b9e\u73b0\u65b9\u6848\uff0c\u4e5f\u5e0c\u671b\u770b\u5230\u66f4\u591a\u7684\u521b\u610f\u8111\u6d1e\u548c\u7f8e\u7684\u8bbe\u8ba1!<\/p>\n<p>\u8fd9\u4e2a\u662f\u8fd9\u4e2a\u9879\u76ee\u7684<a href=\"https:\/\/github.com\/chocoluffy\/screen-split-video\" target=\"_blank\" rel=\"external\">github repo<\/a>, \u8fd9\u4e2a\u662f\u9879\u76ee\u7684\u5c55\u793a<a href=\"http:\/\/chocoluffy.com\/screen-split-video\/\">demo<\/a> \u6b22\u8fce\u8bc4\u8bba\u548cpull request~<\/p>\n<h2>Q&amp;A<\/h2><p>\u540e\u7eed\u7684\u4e00\u4e9b\u7591\u95ee\u548c\u89e3\u7b54\uff1a(\u57fa\u4e8eV2ex\u548c\u5fae\u535a\u7684\u8bc4\u8bba)<\/p>\n<p><strong>\u8ddf<a href=\"http:\/\/www.mi.com\/hezi3s\/\" target=\"_blank\" rel=\"external\">\u8fd9\u4e2a\u94fe\u63a5<\/a>\u4e2d\u95f4\u7684 2K\uff0d4K \u5bf9\u6bd4\u5dee\u4e0d\u591a\u4e00\u4e2a\u610f\u601d\uff1f<\/strong><br>A: \u54c8\u54c8\u5728\u5206\u5c4f\u6548\u679c\u4e0a\u662f\u7c7b\u4f3c\u7684\uff0c \u4e0d\u8fc7\u90a3\u4e2a\u5bf9\u56fe\u7247\u7684\u5904\u7406\u5c31\u4f1a\u7b80\u5355\u5f88\u591a\u5566\uff0c \u611f\u89c9\u5c31\u662f\u5728\u67d0\u4e2a\u4f4d\u7f6e\u4ee5\u5de6\u53e0\u52a0\u4e00\u4e2a\u9ad8\u65af\u6a21\u7cca\u7684\u6ee4\u955c\u5c31\u53ef\u4ee5\u4e86~ \u76f8\u6bd4\u4e4b\u4e0b\uff0c \u5bf9\u89c6\u9891\u7684\u5904\u7406\u8fd8\u8981\u8003\u8651\u5230\u89c6\u7a97\u548c\u89c6\u9891\u672c\u8eab\u7684\u79fb\u52a8\u5462! \u4e0d\u8fc7\u8c22\u8c22\u5206\u4eab\u5566!<\/p>\n<p><strong>\u591a\u4e2a\u58f0\u97f3\u600e\u4e48\u529e\uff1f\u4e24\u4e2a\u58f0\u97f3\u4f1a\u91cd\u53e0\u561b\uff1f<\/strong><br>A: \u6211\u505a\u4e86\u97f3\u8f68\u7684\u6e10\u53d8\u5904\u7406\uff0c \u4e5f\u5c31\u662f\u6839\u636e\u89c6\u9891\u7684\u76f8\u5bf9\u5927\u5c0f\u6765\u76f8\u5bf9\u6539\u53d8\u97f3\u91cf\uff0c \u4e5f\u5c31\u662f\u8bf4\uff0c \u5f53\u67d0\u4e2a\u89c6\u9891\u5360\u4e3b\u4f53\u4f4d\u7f6e\u7684\u65f6\u5019\uff0c \u53e6\u4e00\u4e2a\u89c6\u9891\u7684\u58f0\u97f3\u662f\u4f1a\u6e10\u5f31\u7684\uff0c \u8fd9\u6837\u53ef\u80fd\u4f7f\u7528\u4f53\u9a8c\u66f4\u597d\u5427! \u5728\u535a\u6587\u6700\u540e\u6709 demo \u7684\u7f51\u5740\uff0c \u4f60\u53ef\u4ee5\u8bd5\u8bd5\uff0c \u6211 host \u5728\u4e86 github pages \u4e0a\uff0c \u5bf9\u4e86\uff0c \u8fd9\u4e2a demo \u53ea\u5728\u684c\u9762\u7aef work \uff0c \u5728\u624b\u673a\u7aef\u8fd8\u662f\u5b9e\u73b0\u4e0d\u4e86\u8fd9\u4e2a\u6548\u679c\u5462\uff0c \u6709\u70b9\u53ef\u60dc\u5566\uff0c \u5982\u679c\u6709\u6539\u8fdb\u7684\u5efa\u8bae\u7684\u8bdd\uff0c \u5e0c\u671b\u80fd\u63d0\u51fa\u6765\u5566~<\/p>\n<p><strong>\u5feb\u901f\u62c9\u626f\u7684\u65f6\u5019\u8fb9\u7f18\u7f1d\u9699\u6bd4\u8f83\u5927?<\/strong><br>A: \u554a\u5bf9\u7684\uff01\u6211\u8c03\u8bd5\u7684\u65f6\u5019\u4e5f\u53d1\u73b0\u662f\u6709\uff0c \u539f\u56e0\u4e5f\u5f88\u660e\u663e\uff0c \u6211\u53ea\u5bf9\u6574\u4e2a container \u7ed1\u5b9a\u4e86 mousemove \u4e8b\u4ef6\uff0c \u800c html \u9875\u9762\u5176\u4ed6\u5143\u7d20\u662f\u4e0d\u4f1a\u76d1\u542c mousemove \u7684\uff0c \u56e0\u6b64\u5f53\u9f20\u6807\u5feb\u901f\u79fb\u51fa container \u7684\u65f6\u5019\uff0c \u5c31\u4f1a\u53d1\u73b0\u8fb9\u7f18\u7f1d\u9699\u8f83\u5927\u4e86\uff0c \u6211\u73b0\u5728\u5c31\u6539\u6539 code \uff0c \u52a0\u4e2a condition \uff0c \u5982\u679c\u9f20\u6807\u5728 container \u4e4b\u5916\uff0c \u5c31\u628a\u89c6\u9891\u5bbd\u5ea6\u8ba2\u6b7b\u4e3a\u5168\u5c4f~\u8c22\u8c22\u5566!<\/p>"},{"title":"MEAN\u5168\u6808\u5f00\u53d1[\u7b2c\u4e09\u671f-Mongo\u6570\u636e\u5e93\u642d\u5efaREST API]","link":"http:\/\/chocoluffy.com\/2016\/03\/22\/MEAN%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91-%E7%AC%AC%E4%B8%89%E6%9C%9F-Mongo%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BAREST-API\/","guid":"http:\/\/chocoluffy.com\/2016\/03\/22\/MEAN\u5168\u6808\u5f00\u53d1-\u7b2c\u4e09\u671f-Mongo\u6570\u636e\u5e93\u642d\u5efaREST-API\/","pubDate":"2016-03-23T02:50:55.000Z","categories":["javascript","nodejs","web design","\u6280\u672f"],"author":"Shunzhe Yu","thumbnail":"","description":"<p>AirLoft\u7684\u539f\u578b\u3002 \u7b2c\u4e09\u671f\uff0c \u57fa\u4e8emongodb\u7684mongoose\u6765\u642d\u5efaRESTful API\uff0c \u4e3b\u8981\u5305\u62ec\u4e86\u5173\u4e8e\u5404\u7c7b\u6d89\u53ca\u5230\u5bf9\u8c61\u7684GET, POST, PUT DELETE\u65b9\u6cd5\u7684\u5b9e\u73b0\u3002 \u5728postman\u4e0a\u4e0d\u65ad\u7684\u6a21\u62df\uff0c \u4e5f\u6700\u7ec8\u642d\u597d\u4e00\u4e2a\u7a33\u5b9a\u4e14flexible\u7684\u540e\u7aefAPI\u5904\u7406\uff0c \u5269\u4e0b\u7684\u5c31\u662f\u5c06\u6570\u636e\u5e93\u548c\u8fd9\u4e2aExpress App\u7684controller\u7ed3\u5408\uff0c \u5e76\u5728\u524d\u7aef\u4e0a\u7075\u6d3b\u7684\u5e94\u7528\u5566\uff01\u5982\u679c\u8bf4\u524d\u7aef\u5c31\u50cf\u4e00\u4e2a\u4eba\u7684\u5986\u5bb9\uff0c \u90a3\u4e48\u6570\u636e\u5e93\u4ee5\u53caAPI\u5904\u7406\u5c31\u662f\u4ed6\u7684\u8c08\u5410\u548c\u5185\u6db5\uff0c \u8fd9\u4e2a\u5e94\u7528\u4e5f\u6709\u4e86scaling\u7684\u80fd\u529b\uff0c \u52a0\u6cb9!<\/p>","content":"<p>AirLoft\u7684\u539f\u578b\u3002 \u7b2c\u4e09\u671f\uff0c \u57fa\u4e8emongodb\u7684mongoose\u6765\u642d\u5efaRESTful API\uff0c \u4e3b\u8981\u5305\u62ec\u4e86\u5173\u4e8e\u5404\u7c7b\u6d89\u53ca\u5230\u5bf9\u8c61\u7684GET, POST, PUT DELETE\u65b9\u6cd5\u7684\u5b9e\u73b0\u3002 \u5728postman\u4e0a\u4e0d\u65ad\u7684\u6a21\u62df\uff0c \u4e5f\u6700\u7ec8\u642d\u597d\u4e00\u4e2a\u7a33\u5b9a\u4e14flexible\u7684\u540e\u7aefAPI\u5904\u7406\uff0c \u5269\u4e0b\u7684\u5c31\u662f\u5c06\u6570\u636e\u5e93\u548c\u8fd9\u4e2aExpress App\u7684controller\u7ed3\u5408\uff0c \u5e76\u5728\u524d\u7aef\u4e0a\u7075\u6d3b\u7684\u5e94\u7528\u5566\uff01\u5982\u679c\u8bf4\u524d\u7aef\u5c31\u50cf\u4e00\u4e2a\u4eba\u7684\u5986\u5bb9\uff0c \u90a3\u4e48\u6570\u636e\u5e93\u4ee5\u53caAPI\u5904\u7406\u5c31\u662f\u4ed6\u7684\u8c08\u5410\u548c\u5185\u6db5\uff0c \u8fd9\u4e2a\u5e94\u7528\u4e5f\u6709\u4e86scaling\u7684\u80fd\u529b\uff0c \u52a0\u6cb9!<\/p>\n<a><\/a>\n<p><img src=\"http:\/\/ww1.sinaimg.cn\/large\/c5ee78b5jw1f26lk141v7j21kw0tjn61.jpg\" alt=\"screenshot\"><\/p>\n<h2>\u524d\u8a00<\/h2><p>In MVC architecture, we need to have views without content or data. An common way to implement MVC architecture is to <strong>first build up a frontend clickable prototype, then extract the content from the view back to controller(concerned with data structure), then back to model.<\/strong> And now we are in the second step, we try to put variable in jade file in place of content, and put the content as variable into the controller.<\/p>\n<h2>Mongoose<\/h2><p>First set up a connection URI like: <code>var dbURI = 'mongodb:\/\/localhost\/airloft';<\/code>, username, password and port number is optional for localhost.<\/p>\n<p>A stupid mistake!! Need to open the <code>mongod<\/code> before you tried to connect to it. One thing to notice is that Mongoose connection doesn\u2019t automatically close when the application restarts or stops. In order to do that whenever we restart the <code>nodemon<\/code>, we will need to listen for nodejs event. Nodemon uses <code>SIGUSR2<\/code>, application termination uses <code>SIGINT<\/code>, Heroku uses <code>SIGTERM<\/code>, like:<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><\/pre><\/td><td><pre><span><span>var<\/span> graceShutDown = <span><span>function<\/span>(<span>msg, callback<\/span>)<\/span>{<\/span><br><span>\tmongoose.connection.close(<span><span>function<\/span>(<span><\/span>)<\/span>{<\/span><br><span>\t\t<span>console<\/span>.log(<span>'Mongoose is closed through '<\/span> + msg);<\/span><br><span>\t\tcallback();<\/span><br><span>\t});<\/span><br><span>};<\/span><br><span><\/span><br><span>process.once(<span>'SIGUSR2'<\/span>, <span><span>function<\/span>(<span><\/span>)<\/span>{<\/span><br><span>\tgraceShutDown(<span>'nodemon restart'<\/span>, <span><span>function<\/span>(<span><\/span>)<\/span>{<\/span><br><span>\t\tprocess.kill(process.pid, <span>'SIGUSR2'<\/span>);<\/span><br><span>\t});<\/span><br><span>});<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>use <code>process.once<\/code> to overwrite the default <code>SIGUSR2<\/code> function, but then use <code>kill<\/code> to resend the <code>SIGUSR2<\/code> signal again, but this time we hook up a msg display functionality. Especially the place, we use <code>process.once()<\/code> instead of <code>process.on()<\/code> in the <code>SIGUSR2<\/code> case, since nodejs will listen for the same event, and if we use <code>on<\/code>, then it will forms a infinite loop. Note that <code>process.kill()<\/code> serves the functionality of sending the signal.<\/p>\n<blockquote>\n<p>Recap: Basically four step as discussed here, first define a connection URI string, then second setup the db connection; third monitor the mongoose connection events like <code>connected<\/code> and <code>disconnected<\/code>, and fourth monitor the node process event in order to close the db connection when we restart.<\/p>\n<\/blockquote>\n<p>From view to controller, finally to store in db is what we have gone through so far. It works pretty well, since the moment we move the data to the controller, we gradually solidy the data structure we want to use!!<\/p>\n<p>Some technical names: \u201cpath\u201d is like attribute names in relational database while \u201cproperty object\u201d is like the values but like other JS object, can be nested. Also, we can add data validation inside the schema, two advantages: <\/p>\n<ul><li>save the roundtrip time to datebase<\/li>\n<li>save the code inside the application for validation.<\/li>\n<\/ul><p>Adding indexes can make database search more efficiently, jist like adding index to the files you want to search in your drawer. In order to add a GeoJSON path into your application, you only need to do this: <code>coords: {type: [Number], index: '2dsphere'}<\/code>; using <code>2dsphere<\/code> allows mongodb to be able to calculate the geolocation fast, thus <strong>it is helpful to build a location-based application.<\/strong><\/p>\n<p>Subdocument is helpful when handling nested data structure, one thing to note, when creating attributes like <code>timestamp<\/code>, we use data type called <code>Date<\/code>, like:   <\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><\/pre><\/td><td><pre><span><span>var<\/span> reviewSchema = <span>new<\/span> mongoose.Schema({<\/span><br><span>\trating: {type: <span>Number<\/span>, <span>\"default\"<\/span>: <span>0<\/span>, min: <span>0<\/span>, max: <span>5<\/span>},<\/span><br><span>\tauthor: <span>String<\/span>,<\/span><br><span>\tcreatedOn: {type: <span>Date<\/span>, <span>\"default\"<\/span>: <span>Date<\/span>.now},<\/span><br><span>\ttext: <span>String<\/span>;<\/span><br><span>});<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p><img src=\"http:\/\/ww3.sinaimg.cn\/large\/c5ee78b5gw1f1wrkszhcej218w0u6wib.jpg\" alt=\"mongo\"> \u8fd9\u5f20\u56fe\u8bb2\u5f97\u5f88\u6e05\u695a\uff0c schema\u662fapplication-side\u7684\u4e1c\u897f\uff0c \u6bcf\u4e00\u4e2amodel\u662f\u7684\u5b9e\u4f8binstance\u901a\u8fc7schema\u53ef\u4ee5map\u5230database\u91cc\u9762\u7684\u6bcf\u4e00\u4e2adocument, 1:1\u7684\u5bf9\u5e94\u5173\u7cfb\u3002<\/p>\n<p>While typing in <code>mongod<\/code> will let you start the mongodatabase, using <code>mongo<\/code> will start tht shell and let you connect to the test database. And some useful commands in mongo go here:<\/p>\n<ul><li><code>show dbs<\/code> to show all existing database so far.<\/li>\n<li><code>use local<\/code> to switch to another database. And if that db doesn\u2019t exist yet, mongo will create it for us.<\/li>\n<li><code>show collections<\/code><\/li>\n<li><code>db.startup_log.find()<\/code> returns all the content from collection, uesful when we check whether the data has been saved.<\/li>\n<li><code>db.missions.save({...})<\/code> will savev a new document into collection.<\/li>\n<li><code>db.inventory.remove({})<\/code> will remove all documents in collection <code>inventory<\/code>.<\/li>\n<li><code>db.missions.update()<\/code> will query a document and update its content. The first argument is query string, and second argument use <code>$push<\/code> to insert subdocuments.<\/li>\n<\/ul><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><\/pre><\/td><td><pre><span> &gt; db.locations.update({ <\/span><br><span>   name: <span>'Starcups'<\/span><\/span><br><span>  }, { <\/span><br><span>    $push: {<\/span><br><span>      reviews: {<\/span><br><span>        author: <span>'Simon Holmes'<\/span>,<\/span><br><span>        id: ObjectId(),<\/span><br><span>        rating: <span>5<\/span>,<\/span><br><span>        timestamp: <span>new<\/span> <span>Date<\/span>(<span>\"Jul 16, 2013\"<\/span>),<\/span><br><span>        reviewText: <span>\"What a great place. I can't say enough good things about it.\"<\/span><\/span><br><span>      } <\/span><br><span>      <\/span><br><span>    }<\/span><br><span>})<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>So far, we have insert a fake data document in our local computer, but in real life, <strong>we want database to be externally accessible.<\/strong> use <code>heroku addons:add mongolab<\/code> to register a db URI at mongolab as a heroku addons.<strong> And use <code>heroku addons:open mongolab<\/code> to go the website interface to check database details. <\/strong>In order to get the uri of the database, type <code>heroku config:get MONGOLAB_URI<\/code>. <\/p>\n<blockquote>\n<p>Note that in real practice, I have to fixed a typo bug from my previous data stored in mongolab, I have to first go to the mongo shell to <code>remove({})<\/code> and <code>insert({...})<\/code> again, then do the <code>mongodump<\/code> and <code>mongorestore<\/code> again to dump the data into the temp folder at <code>~\/tmp<\/code> and push the data to live database. And make sure to press the \u201cDelete all collection\u201d button before we did <code>mongorestore<\/code> to avoid same key collision.<\/p>\n<\/blockquote>\n<p>After receive URI, we will first dump our localhost data into a folder in local computer, then restore the data to the live database. use <code>mkdir -p ~\/tmp\/mongodump<\/code> will create a folder to hold up the dumped data. Note that use <code>-p<\/code> option will create the non-existed folders on the path like \u201ctmp\u201d.<\/p>\n<ul><li>use <code>mongodump -h localhost:27017 -d airloft -o ~\/tmp\/mongodump<\/code> to export airloft.missions data into BSON.<\/li>\n<li>use <code>mongorestore -h &lt;host and port number&gt; -d &lt;live database name&gt; -u &lt;username(same as database name)&gt; -p &lt;password&gt; &lt;path to dump data folder&gt;<\/code> to push the data up to the mongolab live database.<\/li>\n<li>Last step(testing), we can use <code>mongo hostname:port\/database_name -u username -p password<\/code> to change the <code>mongo<\/code> to interact with an external database. Note that in the last two steps, database name is the same as username. Then, we can use commands introduced before to interact with live database. In summery, we have one source code and can be used to manipulate databases at two locations, one in local computer, a test database, and one in Heroku, a live database.<\/li>\n<\/ul><p>Let application use right database. use <code>heroku config:set NODE_ENV=production<\/code> to set the environment variable <code>NODE_ENV<\/code> to be production for Heroku. <strong>Environment variable will affect the way the core process runs.<\/strong> When we tried to use <code>nodemon<\/code> to start application, one way to make sure what environemnt we are running in is to prepend a ENV variable before nodemon like <code>NODE_ENV=production nodemon<\/code>, and corresponds to this change, we also change the code in db.js(with a if-else block) to set the dbURI aligned with environment. In application, we can access to such variable by <code>process.env.NODE_ENV<\/code>, but since we post it in public repo, we don\u2019t want our credentials to be public. Instead, we use environment variables from Heroku configuration.<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><\/pre><\/td><td><pre><span><span>var<\/span> dbURI = <span>'mongodb:\/\/localhost\/airloft'<\/span>;<\/span><br><span><\/span><br><span><span>if<\/span>(process.env.NODE_ENV === <span>'production'<\/span>){<\/span><br><span>\tdbURI = process.env.MONGOLAB_URI;<\/span><br><span>}<\/span><br><span><\/span><br><span>mongoose.connect(dbURI);<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><h2>REST APIs<\/h2><p>REST is an architecture style, it\u2019s stateless, meaning it will not recognize users or history. Having such program interface will allow us to talk to our database through HTTP and perform CRUD operations then send back a HTTP response. An way to construct URLs is to think about the collections in our database. In \u2018airloft.missions\u2019 collection, we may want to allow operations like:<\/p>\n<ul><li><code>\/missions<\/code> to create an new mission.<\/li>\n<li><code>\/missions<\/code> to read all missions.<\/li>\n<li><code>\/missions\/&lt;index&gt;<\/code> to read a specific mission.<\/li>\n<li><code>\/missions\/&lt;index&gt;<\/code> to update a specific mission. And so on so forth.<\/li>\n<\/ul><p>As we can see the urls are same for several operations, and we will use different request methods to tell the server what action to take.<\/p>\n<ul><li><code>POST<\/code> to create new data in database(from submitting form).<\/li>\n<li><code>GET<\/code> to read data.<\/li>\n<li><code>PUT<\/code> to update a document.<\/li>\n<li><code>DELETE<\/code> to delete a document.<\/li>\n<\/ul><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><\/pre><\/td><td><pre><span><span>\/\/ missions<\/span><\/span><br><span>router.get(<span>'\/missions'<\/span>, ctrlMissions.missionsListByDistance);<\/span><br><span>router.post(<span>'\/missions'<\/span>, ctrlMissions.missionsCreate);<\/span><br><span>router.get(<span>'\/missions\/:missionid'<\/span>, ctrlMissions.missionsReadOne);<\/span><br><span>router.put(<span>'\/missions\/:missionid'<\/span>, ctrlMissions.missionsUpdateOne);<\/span><br><span>router.delete(<span>'\/missions\/:missionid'<\/span>, ctrlMissions.missionsDeleteOne);<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>Then in the corresponding controller files, we define these functions and fill them with the simplest response to display when received such request.<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><\/pre><\/td><td><pre><span><span>var<\/span> sendJsonRes = <span><span>function<\/span>(<span>res, status, content<\/span>)<\/span>{<\/span><br><span>\tres.status(status);<\/span><br><span>\tres.json(content);<\/span><br><span>}<\/span><br><span><\/span><br><span><span>module<\/span>.exports.missionsListByDistance = <span><span>function<\/span>(<span>req, res<\/span>)<\/span>{<\/span><br><span>\tsendJsonRes(res, <span>200<\/span>, {<span>\"status\"<\/span>: <span>\"success\"<\/span>});<\/span><br><span>}<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><h2>\u201cGET\u201d method implementation<\/h2><p>Some useful queries in Mongoose:<\/p>\n<ul><li><code>find<\/code> general search based on query object.<\/li>\n<li><code>findById<\/code> look for specific ID.<\/li>\n<li><code>findOne<\/code> get the first match document.<\/li>\n<li><code>geoNear<\/code> find geo-closef query.<\/li>\n<li><code>geoSearch<\/code> add query functionality to geoNear operation.<\/li>\n<\/ul><p>After using queries, we use <code>exec<\/code> method execute the query and passes a callback function that will run when the operation is complete. The callback function should accept two parameters, an error object and the instance of found document.<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><\/pre><\/td><td><pre><span><span>var<\/span> sendJsonRes = <span><span>function<\/span>(<span>res, status, content<\/span>)<\/span>{<\/span><br><span>\tres.status(status);<\/span><br><span>\tres.json(content);<\/span><br><span>}<\/span><br><span><\/span><br><span><span>module<\/span>.exports.missionsReadOne = <span><span>function<\/span>(<span>req, res<\/span>)<\/span>{<\/span><br><span>\tMissions<\/span><br><span>\t\t.findById(req.params.missionid)<\/span><br><span>\t\t.exec(<span><span>function<\/span>(<span>err, mission<\/span>)<\/span>{<\/span><br><span>\t\t\tsendJsonRes(res, <span>200<\/span>, mission);<\/span><br><span>\t\t})<\/span><br><span>}<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>Then, we want to add error checking like this: note that we can also utilize <code>console.log<\/code> to print out some useful information about the data in terminal since we use <code>nodemon<\/code>. <\/p>\n<p>In real practice, we may not always want to retrive a whole document from mongodb, we may only just need some specific data. Thus, we can limit the data being passed around to improve speed, using <code>select<\/code> to retriece only \u201cname\u201d and \u201creviews\u201d entry from a document in collection. Like this:<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><span>20<\/span><br><span>21<\/span><br><span>22<\/span><br><span>23<\/span><br><span>24<\/span><br><span>25<\/span><br><span>26<\/span><br><span>27<\/span><br><span>28<\/span><br><span>29<\/span><br><span>30<\/span><br><span>31<\/span><br><span>32<\/span><br><span>33<\/span><br><span>34<\/span><br><span>35<\/span><br><span>36<\/span><br><span>37<\/span><br><span>38<\/span><br><\/pre><\/td><td><pre><span><span>module<\/span>.exports.reviewsReadOne = <span><span>function<\/span>(<span>req, res<\/span>)<\/span>{<\/span><br><span>\t<span>if<\/span>(req.params &amp;&amp; req.params.missionid &amp;&amp; req.params.reviewid){<\/span><br><span>\t\tMissions<\/span><br><span>\t\t\t.findById(req.params.missionid)<\/span><br><span>\t\t\t.select(<span>'name reviews'<\/span>)<\/span><br><span>\t\t\t.exec(<span><span>function<\/span>(<span>err, mission<\/span>)<\/span>{<\/span><br><span>\t\t\t\t<span>if<\/span>(!mission){<\/span><br><span>\t\t\t\t\tsendJsonRes(res, <span>404<\/span>, {<\/span><br><span>\t\t\t\t\t\t<span>\"message\"<\/span>: <span>\"missionid not found\"<\/span><\/span><br><span>\t\t\t\t\t})<\/span><br><span>\t\t\t\t\t<span>return<\/span>;<\/span><br><span>\t\t\t\t}<span>else<\/span> <span>if<\/span>(err){<\/span><br><span>\t\t\t\t\tsendJsonRes(res, <span>404<\/span>, err);<\/span><br><span>\t\t\t\t\t<span>return<\/span>;<\/span><br><span>\t\t\t\t}<\/span><br><span>\t\t\t\t<span>var<\/span> response, review;<\/span><br><span>\t\t\t\treview = mission.reviews.id(req.params.reviewid);<\/span><br><span>\t\t\t\t<span>if<\/span>(!review){<\/span><br><span>\t\t\t\t\tsendJsonRes(res, <span>404<\/span>, {<\/span><br><span>\t\t\t\t\t\t<span>\"message\"<\/span>: <span>\"reviewid not found!\"<\/span><\/span><br><span>\t\t\t\t\t})<\/span><br><span>\t\t\t\t\t<span>return<\/span>;<\/span><br><span>\t\t\t\t}<\/span><br><span>\t\t\t\tresponse = {<\/span><br><span>\t\t\t\t\tmission: {<\/span><br><span>\t\t\t\t\t\tname: mission.name,<\/span><br><span>\t\t\t\t\t\tid: req.params.missionid<\/span><br><span>\t\t\t\t\t},<\/span><br><span>\t\t\t\t\treviews: review<\/span><br><span>\t\t\t\t};<\/span><br><span>\t\t\t\tsendJsonRes(res, <span>200<\/span>, response);<\/span><br><span>\t\t\t});<\/span><br><span>\t}<span>else<\/span>{<\/span><br><span>\t\tsendJsonRes(res, <span>404<\/span>, {<\/span><br><span>\t\t\t<span>\"message\"<\/span>: <span>\"No missionid or reviewid in request\"<\/span><\/span><br><span>\t\t})<\/span><br><span>\t}<\/span><br><span>}<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>Apart from the error checking in the above code, we can use <code>id<\/code> to query subdocument the <code>_id<\/code> entry. <strong>note that in the raw data, I mistakenly put the entry name to be <code>id<\/code> instead of <code>_id<\/code>, which causes me to re-insert the data again to let the <code>id()<\/code> work for subdocument.<\/strong><\/p>\n<p>These above example codes shows us how to simulate \u201cGET\u201d request for mission and reviews in \u201cmissions\u201d collection in live mongolab database. When it comes to geo-query, we need to query the longtitude and latitude in <code>req.query<\/code> with some urls like this: <code>api\/missions?lng=-12.34343434&amp;lat=51.22424224<\/code>.<\/p>\n<p>Besides, the way writing the js code is quite important using closure!! I use an example that will be reused in later geo-distance calculation to illustrate how to <strong>only expost functions for later use with closure to wrap the inner variables from outer collisions.<\/strong><\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><\/pre><\/td><td><pre><span><span>var<\/span> theEarth = (<span><span>function<\/span>(<span><\/span>)<\/span>{<\/span><br><span>  <span>var<\/span> earthRadius = <span>6371<\/span>;<\/span><br><span>  <span>var<\/span> getDistanceFromRads = <span><span>function<\/span>(<span>rads<\/span>)<\/span>{<\/span><br><span>    <span>return<\/span> <span>parseFloat<\/span>(earthRadius * rads);<\/span><br><span>  }<\/span><br><span>  <span>var<\/span> getRadsFromDistance = <span><span>function<\/span>(<span>distance<\/span>)<\/span>{<\/span><br><span>    <span>return<\/span> <span>parseFloat<\/span>(distance\/getRadsFromDistance);<\/span><br><span>  }<\/span><br><span>  <span>return<\/span> {<\/span><br><span>    getDistanceFromRads: getDistanceFromRads,<\/span><br><span>    getRadsFromDistance: getRadsFromDistance<\/span><br><span>  }<\/span><br><span>})()<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>Then the complete geo searching functions are:<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><span>20<\/span><br><span>21<\/span><br><span>22<\/span><br><span>23<\/span><br><span>24<\/span><br><span>25<\/span><br><span>26<\/span><br><span>27<\/span><br><span>28<\/span><br><span>29<\/span><br><span>30<\/span><br><span>31<\/span><br><span>32<\/span><br><span>33<\/span><br><span>34<\/span><br><span>35<\/span><br><span>36<\/span><br><span>37<\/span><br><span>38<\/span><br><span>39<\/span><br><span>40<\/span><br><span>41<\/span><br><span>42<\/span><br><span>43<\/span><br><span>44<\/span><br><span>45<\/span><br><\/pre><\/td><td><pre><span><span>\/\/ for main page listing by distance.<\/span><\/span><br><span><span>var<\/span> resToList = <span><span>function<\/span>(<span>results<\/span>)<\/span>{<\/span><br><span>\t<span>var<\/span> lst = [];<\/span><br><span>\tresults.forEach(<span><span>function<\/span>(<span>doc<\/span>)<\/span>{<\/span><br><span>\t\tlst.push({<\/span><br><span>\t\t\t\tdistance: theEarth.getDistanceFromRads(doc.dis),<\/span><br><span>\t\t\t\tname: doc.obj.name,<\/span><br><span>\t\t\t\tauthor: doc.obj.author,<\/span><br><span>\t\t\t\trating: doc.obj.rating,<\/span><br><span>\t\t\t\ttags: doc.obj.tag,<\/span><br><span>\t\t\t\t_id: doc.obj._id<\/span><br><span>\t\t})<\/span><br><span>\t})<\/span><br><span>\t<span>return<\/span> lst;<\/span><br><span>};<\/span><br><span><\/span><br><span><span>module<\/span>.exports.missionsListByDistance = <span><span>function<\/span>(<span>req, res<\/span>)<\/span>{<\/span><br><span>\t<span>if<\/span>(req.query.lng &amp;&amp; req.query.lat){<\/span><br><span>\t\t<span>var<\/span> lng = <span>parseFloat<\/span>(req.query.lng);<\/span><br><span>\t\t<span>var<\/span> lat = <span>parseFloat<\/span>(req.query.lat);<\/span><br><span>\t\t<span>var<\/span> point = {<\/span><br><span>\t\t\ttype: <span>\"Point\"<\/span>,<\/span><br><span>\t\t\tcoordinates: [lng, lat]<\/span><br><span>\t\t};<\/span><br><span>\t\t<span>var<\/span> geoOptions = {<\/span><br><span>\t\t\tspherical: <span>true<\/span>,<\/span><br><span>\t\t\tmaxDistance: theEarth.getRadsFromDistance(<span>parseInt<\/span>(req.query.maxdistance||<span>2000<\/span>)),<\/span><br><span>\t\t\tnum: <span>10<\/span>,<\/span><br><span>\t\t};<\/span><br><span>\t\t<span>\/\/ console.log(geoOptions.maxDistance);<\/span><\/span><br><span>\t\tMissions.geoNear(point, geoOptions, <span><span>function<\/span>(<span>err, results, stats<\/span>)<\/span>{<\/span><br><span>\t\t\t<span>if<\/span>(err){<\/span><br><span>\t\t\t\tsendJsonRes(res, <span>404<\/span>, err);<\/span><br><span>\t\t\t\t<span>return<\/span> ;<\/span><br><span>\t\t\t}<\/span><br><span>\t\t\tsendJsonRes(res, <span>200<\/span>, resToList(results));<\/span><br><span>\t\t});<\/span><br><span>\t}<\/span><br><span>\t<span>else<\/span> {<\/span><br><span>\t\tsendJsonRes(res, <span>404<\/span>, {<\/span><br><span>\t\t\t<span>\"message\"<\/span>: <span>\"Found no longtitue or lattitude in query string.\"<\/span><\/span><br><span>\t\t});<\/span><br><span>\t\t<span>return<\/span>;<\/span><br><span>\t}<\/span><br><span>}<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><blockquote>\n<p>So far, we complete all three \u201cGET\u201d methods for this website, namely, [1]ListByDistance for the main page \u201c\/api\/missions\u201d; [2]get a single mission information for each mission document in db \u201c\/api\/missions\/<_id>\u201c; [3]get a single review information for reviews from each mission document as subdocument \u201c\/api\/missions\/<_id>\/reviews\/<_id>\u201c. And next, we will look at other methods like \u201cPOST\u201d, \u201cPUT\u201d and \u201cDELETE\u201d.<\/_id><\/_id><\/_id><\/p>\n<\/blockquote>\n<h2>\u201cPOST\u201d method implementation<\/h2><p>In this project, since we only involve missions and reviews, we need to implement new mission post and new review post from form data, which is stored at <code>req.body.&lt;attr&gt;<\/code>.<br>The way we create an document is using <code>create()<\/code> directly :<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><\/pre><\/td><td><pre><span><span>module<\/span>.exports.missionsCreate = <span><span>function<\/span>(<span>req, res<\/span>)<\/span>{<\/span><br><span>\tMissions.create({<\/span><br><span>\t\tname: req.body.name,<\/span><br><span>\t\trating: req.body.rating,<\/span><br><span>\t\ttag: req.body.tags.split(<span>\",\"<\/span>),<\/span><br><span>\t\tauthor: req.body.author,<\/span><br><span>\t\tcoords: [<span>parseFloat<\/span>(req.body.lng), <span>parseFloat<\/span>(req.body.lat)],<\/span><br><span>\t\ttimepanel: {<\/span><br><span>\t\t\ttitle: req.body.timetitle,<\/span><br><span>\t\t\ttimeslots: req.body.timeslots.split(<span>\",\"<\/span>)<\/span><br><span>\t\t}<\/span><br><span>\t}, <span><span>function<\/span>(<span>err, mission<\/span>)<\/span>{<\/span><br><span>\t\t<span>if<\/span>(err){<\/span><br><span>\t\t\tsendJsonRes(res, <span>404<\/span>, err);<\/span><br><span>\t\t}<span>else<\/span>{<\/span><br><span>\t\t\tsendJsonRes(res, <span>201<\/span>, mission);<\/span><br><span>\t\t}<\/span><br><span>\t})<\/span><br><span>}<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>For subdocuments or facing with a list instead of an array, we probably just retrieve that list and <code>push<\/code> a new item into the list. Then we just need to <code>&lt;instance&gt;.save()<\/code> to save the item like this:<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><\/pre><\/td><td><pre><span><span>var<\/span> addReiview = <span><span>function<\/span>(<span>req, res, mission<\/span>)<\/span>{<\/span><br><span>\tmission.reviews.push({<\/span><br><span>\t\trating: req.body.rating,<\/span><br><span>\t\tauthor: req.body.author,<\/span><br><span>\t\ttext: req.body.text<\/span><br><span>\t})<\/span><br><span>\tmission.save(<span><span>function<\/span>(<span>err, mission<\/span>)<\/span>{<\/span><br><span>\t\t<span>var<\/span> thisReview;<\/span><br><span>\t\t<span>if<\/span>(err){<\/span><br><span>\t\t\tsendJsonRes(res, <span>404<\/span>, err);<\/span><br><span>\t\t}<span>else<\/span>{<\/span><br><span>\t\t\tupdateAveRating(mission._id);<\/span><br><span>\t\t\tthisReview = mission.reviews[mission.reviews.length - <span>1<\/span>];<\/span><br><span>\t\t\tsendJsonRes(res, <span>201<\/span>, thisReview);<\/span><br><span>\t\t}<\/span><br><span>\t})<\/span><br><span>}<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><h2>\u201cPUT\u201d method implementation<\/h2><p>\u201cPUT\u201d method is similar to \u201cPOST\u201d in a way that they both use form data stored in <code>req.body<\/code>, while one is create from nothing and add to the database, the other is to find an existing one and update part of the information. <\/p>\n<ul><li>One hack I thought about is to use <code>Object.keys(obj)<\/code> to obtain the keys from a js object, then using <code>$set<\/code> in <code>mongo.update()<\/code> to only update the value in body? <strong>Ideas:<\/strong> this idea only works when all field are requiring same manipulation from body data. To be more specifically, some data are needed to be processed to feed for later use, such as we add <code>.split(\",\");<\/code> for tags data, and some fields like \u201ccoords\u201d is an array. Thus, if we want to apply more operations on some data, we cannot just treat them in the same way in a for loop<\/li>\n<li>Or, utilize the the way mongoose model treat model parameters, we can do <code>var newReview = new Review(req.body)<\/code> to create an instance of \u201cReview\u201d model, then use this to replace the old one?<\/li>\n<\/ul><blockquote>\n<p>One important thing to notice is that when we save, we save <strong>parent document!<\/strong> In our case, we did <code>mission.save(function(err, mission))<\/code> instead of <code>review.save(...)<\/code>!<\/p>\n<\/blockquote>\n<h2>\u201cDELETE\u201d method implementation<\/h2><p>\u201cDELETE\u201d method is easier, we only need to find that document by \u201cmissionid\u201d, then do <code>Missions.remove(function(err, mission))<\/code>. For the subdocument, we simply find that subdocument and call remove at the end. The prototype is like:<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><\/pre><\/td><td><pre><span><span>\/\/ A working prototype without error checking.<\/span><\/span><br><span><span>module<\/span>.exports.reviewsDeleteOne = <span><span>function<\/span>(<span>req, res<\/span>)<\/span>{<\/span><br><span>\tMissions<\/span><br><span>\t\t.findById(req.params.missionid)<\/span><br><span>\t\t.select(<span>\"reviews\"<\/span>)<\/span><br><span>\t\t.exec(<span><span>function<\/span>(<span>err, mission<\/span>)<\/span>{<\/span><br><span>\t\t\t<span>if<\/span>(err){<\/span><br><span>\t\t\t\tsendJsonRes(res, <span>404<\/span>, {<\/span><br><span>\t\t\t\t\t<span>\"message\"<\/span>: <span>\"Found no match\"<\/span><\/span><br><span>\t\t\t\t})<\/span><br><span>\t\t\t}<\/span><br><span>\t\t\tmission.reviews.id(req.params.reviewid).remove();<\/span><br><span>\t\t\tmission.save(<span><span>function<\/span>(<span>err, mission<\/span>)<\/span>{ <span>\/\/ save parent document.<\/span><\/span><br><span>\t\t\t\tupdateAveRating(mission._id);<\/span><br><span>\t\t\t\tsendJsonRes(res, <span>204<\/span>, <span>null<\/span>);<\/span><br><span>\t\t\t})<\/span><br><span>\t\t})<\/span><br><span>}<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><h2>Summery<\/h2><ul><li><p>How to insert an common model instance into mongodb? I mean, since we can\u2019t generate the \u201c_id\u201d by ourselves, then how comes we insert such object into <code>mongo<\/code>? <strong>Answer:<\/strong> we need to know the difference between <code>db.missions.save<\/code> and <code>db.missions.insert<\/code>, using <code>save<\/code>, we can simple provide an model instance according to the model schma, while using using <code>insert<\/code>, we have to write the object exacty the same as the final document! <\/p>\n<\/li>\n<li><p>\u201cGET\u201d method implementation? <strong>Answer:<\/strong> using mongodb query like <code>findById<\/code> and others to get the document from db, and sometimes we need <code>id<\/code> to retrieve info from subdocument. Besides, <code>geoNear<\/code> is handy in mongodb to get displaying documents by distance.<\/p>\n<\/li>\n<li><p>Some important places for error checking: <\/p>\n<ul><li>If argument is in the <code>req.body<\/code> or <code>req.query<\/code> or <code>req.params<\/code>. <strong>if not, return a message in <code>res<\/code> saying founding no argument in coming request.<\/strong><\/li>\n<li>Then given an ID(probably), we may want to search that document in database using <code>getById()<\/code>, and the callback function contains an <code>error<\/code> object and a instance object, where the returning instance object indicates whether or not searching database is succeeded or not. <strong>If not, return a message saying object not found in database.<\/strong><\/li>\n<li>When we tried to update of create a new document, we may usually use <code>save<\/code> and <code>create<\/code>, the callback function contains an error object either, <strong>it indicates whether or not such instance can be created or updated correctly, if the error message appears, it usually dues to the fact that some fields violates the validation rules specified in database schema.<\/strong><\/li>\n<\/ul><\/li>\n<\/ul><h2>Tools<\/h2><ul><li>Unless you fancy adding hundreds of script tags to your pages, you need a build tool to bundle your dependencies. You also need something to <strong>allow NPM packages to work in browsers<\/strong>. This is where Webpack comes in.<\/li>\n<li>Add a .gitattributes file and push it to github to overwrite the project type calculated by github, adding <code>*.css linguist-language=Javascript<\/code> into the file to let a specific file being overwritten.<\/li>\n<\/ul>"},{"title":"MEAN\u5168\u6808\u5f00\u53d1[\u7b2c\u4e8c\u671f-\u524d\u7aef\u5b9e\u6218\u624b\u8bb0]","link":"http:\/\/chocoluffy.com\/2016\/03\/11\/MEAN%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91-%E7%AC%AC%E4%BA%8C%E6%9C%9F-%E5%89%8D%E7%AB%AF%E5%AE%9E%E6%88%98%E6%89%8B%E8%AE%B0\/","guid":"http:\/\/chocoluffy.com\/2016\/03\/11\/MEAN\u5168\u6808\u5f00\u53d1-\u7b2c\u4e8c\u671f-\u524d\u7aef\u5b9e\u6218\u624b\u8bb0\/","pubDate":"2016-03-11T20:10:55.000Z","categories":["javascript","nodejs","web design","\u6280\u672f"],"author":"Shunzhe Yu","thumbnail":"","description":"<p>AirLoft\u7684\u539f\u578b\u3002 \u7b2c\u4e8c\u671f\uff0c \u57fa\u4e8eBootstrap\u7684\u6241\u5e73\u5316\u8bbe\u8ba1\uff0c \u628a\u6240\u6709\u6d89\u53ca\u7684\u9875\u9762\u7684clickable prototype\u505a\u51fa\u6765\uff0c \u518d\u8fc1\u79fb\u5230express application\u6216\u8005Angular SPA\u4e0a\uff0c \u867d\u7136\u53ea\u662f\u524d\u7aef\u7684prototype\uff0c \u4f46\u662f\u505a\u597d\u4e00\u4e9bnpm scripts\u7684\u914d\u7f6e\u4f1a\u8ba9\u524d\u7aef\u5f00\u53d1\u7279\u522b\u7684\u9ad8\u6548\u548c\u8212\u670d\uff0c \u4e5f\u7b97\u662f\u5728\u5165\u95e8\u4e86\u5404\u79cd\u70ab\u6280\u7684\u524d\u7aef\u5c55\u793a\u540e\uff0c \u9010\u6b65\u5230\u4e00\u4e2afull-fledged website\u7684\u8fc7\u6e21\u3002<\/p>","content":"<p>AirLoft\u7684\u539f\u578b\u3002 \u7b2c\u4e8c\u671f\uff0c \u57fa\u4e8eBootstrap\u7684\u6241\u5e73\u5316\u8bbe\u8ba1\uff0c \u628a\u6240\u6709\u6d89\u53ca\u7684\u9875\u9762\u7684clickable prototype\u505a\u51fa\u6765\uff0c \u518d\u8fc1\u79fb\u5230express application\u6216\u8005Angular SPA\u4e0a\uff0c \u867d\u7136\u53ea\u662f\u524d\u7aef\u7684prototype\uff0c \u4f46\u662f\u505a\u597d\u4e00\u4e9bnpm scripts\u7684\u914d\u7f6e\u4f1a\u8ba9\u524d\u7aef\u5f00\u53d1\u7279\u522b\u7684\u9ad8\u6548\u548c\u8212\u670d\uff0c \u4e5f\u7b97\u662f\u5728\u5165\u95e8\u4e86\u5404\u79cd\u70ab\u6280\u7684\u524d\u7aef\u5c55\u793a\u540e\uff0c \u9010\u6b65\u5230\u4e00\u4e2afull-fledged website\u7684\u8fc7\u6e21\u3002<\/p>\n<a><\/a>\n<p><img src=\"http:\/\/ww4.sinaimg.cn\/large\/c5ee78b5gw1f1tkjoatboj21kw0r7aic.jpg\" alt=\"project screenshot\"><\/p>\n<h2>Difference about MEAN stack<\/h2><p>Traditional web server like Apache is multi-thread, <strong><em>the key idea about multi-thread is visitors use seperate resources.<\/em><\/strong>Like a bank system, it works perfectly fine when the population size is small, while when the size grows more than the resources, you have to queue for resources. (\u7136\u800c\u5f53\u4f60\u8bbf\u95ee\u4e00\u4e2a\u7f51\u7ad9\u7684\u65f6\u5019\uff0c \u4f60\u662f\u4e0d\u4f1a\u7b49\u7684\uff0c \u4f60\u770b\u90a3\u4e2a\u7f51\u7ad9\u54cd\u5e94\u5f88\u6162\uff0c \u4f60\u5c31\u9000\u51fa\u4e86). In nodejs, it is single-threaded. \u6240\u4ee5\u4f60\u77e5\u9053\u73b0\u5728\u5f88\u591a\u5927\u578b\u7684\u4f01\u4e1a\u67b6\u6784\uff0c \u5c24\u5176\u662f\u56fd\u5185\u7684\uff0c \u5728\u524d\u51e0\u5e74\u8fd8\u7279\u522b\u4e25\u91cd\uff0c \u4e00\u5230\u8fc7\u5e74\u8fc7\u8282\u6d41\u91cf\u7279\u522b\u5927\u7684\u65f6\u5019\uff0c \u4f60\u7684\u7f51\u7ad9\u5c31\u4f1a\u5b95\u673a\uff0c \u56e0\u4e3a\u592a\u591a\u4eba\u8bbf\u95ee\u4e86\uff0c \u4f60\u5fc5\u987b\u7b49\u3002\u6240\u4ee5\u89e3\u51b3\u529e\u6cd5\u662f\u4ec0\u4e48\uff0c \u901a\u5e38\u4f01\u4e1a\u5c31\u56de\u53bb\u4e70\u66f4\u591a\u7684\u670d\u52a1\u5668\uff0c \u6216\u8005\u66f4\u65b0\u8fc7\u5927\u7684\u5185\u5b58\uff0c \u6765\u625b\u8fc7\u6d41\u91cf\u6700\u5927\u7684\u65f6\u5019\uff0c \u53ef\u662f\u6709\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\uff0c \u5728\u6d41\u91cf\u6ca1\u6709\u90a3\u4e48\u5927\u7684\u7edd\u5927\u591a\u6570\u65f6\u5019\uff0c \u4f60\u7684\u8d44\u6e90\u88ab\u6d6a\u8d39\u4e86! <\/p>\n<p>\u5728\u5355\u7ebf\u7a0b\u7684nodejs\u91cc\u9762\uff0c \u6709\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u7279\u6027\u5c31\u662f\u5fc5\u987b\u662f\u975e\u963b\u585e\uff0c \u56e0\u4e3a\u9ed8\u8ba4\u7684\u60c5\u51b5\u5c31\u662f\u5927\u5bb6\u90fd\u4f1a\u53bb\u540c\u4e00\u4e2acenter office\uff0c \u540c\u4e00\u4e2a\u7ebf\u7a0b\uff0c \u7136\u800c\u6211\u4eec\u4e0d\u5e0c\u671b\u524d\u4e00\u4e2a\u7684request, \u6bd4\u5982request static files or database, \u5f71\u54cd\u5230\u4e0b\u4e00\u4e2a\u7528\u6237\uff0c \u6240\u4ee5nodejs\u91cc\u9762\u7684\u51fd\u6570\u90fd\u662f\u5f02\u6b65\u7684\u3002<\/p>\n<p>Some useful helper libraries like Underscorejs, Mochajs, and Colors(which can add color to the nodejs console log).<\/p>\n<p>Check out the articles in Evernore, saying that why we don\u2019t want to use the default way of using directory to organize our view static files in Expressjs, but instead use a function-focused way to group the files.<\/p>\n<p>Mongodbd stores documents as BSON(binary format of JSON). Mongoose like the shell for mongodb, enable us to add data validation on database(schema)<\/p>\n<p>Traditional way of doing web, is let the server do all the data processing and application logic, then passes HTML out to the browser. While angularjs allows us to pull some data and logic to the browser.(so server only pass the data from database). Since we have V8 in Chrome.<\/p>\n<p>The difference of Jquery and AngularJS is that Jquery added to the page to provide interactivity, it assume that you have a complete DOM, While angularjs comes earilier to help you form the HTML.<\/p>\n<p>\u5173\u4e8eSPA(single page application)\u7684\u7f3a\u70b9\uff0c \u5c24\u5176\u5728SEO\u4e0a\uff0c search engine only fetches the page layout and it won\u2019t run any javascript, thus those data and contents generated by javascript will be ignored by search engine. <strong><em>the key feature of SPA is that it takes a longer load for first time login, and it can reduce the pressure on server side, since it handle the logic mostly on browser. <\/em><\/strong> For example, for a blog website, the blog post entry is for people to read and is expected to show up quitely quickly, is not suitable for SPA, while the admin page can be done in SPA. <strong><em>Thus, for the blog entry, we want the original and traditional method(passing the HTML pages), utilizing Express!<\/em><\/strong><\/p>\n<p>Remeber, Angularjs is not only for SPA, it can also provide rich data interactivity to an static pages.<\/p>\n<p><strong><em>API-rich means decouple the reliance!!! You don\u2019t contact directly to the database, but instead use API and if API is satisfied, components can be substituted by any other components.<\/em><\/strong><\/p>\n<p>\u57fa\u7840\u7684\u67b6\u6784\u662f\uff1a database\\rest API\\application\u5728\u540c\u4e00\u4e2aserver\u4e0a\uff0c \u4f46\u4e4b\u540e\u6211\u4eec\u901a\u5e38\u4f1a\u628adatabase\u5206\u5f00\u5230\u53e6\u5916\u4e00\u4e2aserver\u4e0a\uff08avoid fighting for the same resources\uff09.<\/p>\n<h2>Express<\/h2><p>When using express, we can configure it to have some options, like which html engine to use, which css preprocessor, and whether to add the support for session;<\/p>\n<p>We can see in <code>app.js<\/code> that there are a lot of <code>app.use()<\/code>, they are middlewares, and the request coming from the application will go through each of them. For example, use <code>app.use(cookieParser());<\/code> will parse out the cookie information from the request and prepare to be more friendly in controller code. Server side js(app.js) if modified, should let the server stop and restart, but the client-side js or html or css, can just use browser refresh to update on-the-fly. <strong><em>To fix that, we use <code>nodemon<\/code>, a module that allows auto-reloading when server-side javascript is changed. I have install it globally, so we just need to type <code>nodemon<\/code> inside the project folder.<\/em><\/strong><\/p>\n<p><code>block content<\/code> in jade, is the inheritance machanism of HTML layout, we can define some block + <variable name=\"\"> in the parent template, then in each child layout that extends it, the child template will redefine such block, just like in c++\\java, an abstract class.<\/variable><\/p>\n<p>We decided to implement MVC inside the Express, like what we did in rails, we route the corresponding URL to controllers(which we created in a new folder).<\/p>\n<p>Bootstrap is not being processed by node engine, thus we put it under <code>public<\/code> folder. Inside the <code>layout.jade<\/code> file, we will include the bootstrap theme and js files we want to use in our project:<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><\/pre><\/td><td><pre><span>doctype html<\/span><br><span>html<\/span><br><span>  head<\/span><br><span>    # <span><span>set<\/span> viewport metadata <span>for<\/span> better display <span>in<\/span> mobile device.<\/span><br><span>  \tmeta(<span>name<\/span>=<span>'viewport'<\/span>, <span>content<\/span>=<span>'width=device-width, initial-scale=1.0'<\/span>)<\/span><br><span>    title= title<\/span><br><span>    # <span>before<\/span> the <span>style<\/span>.css <span>file<\/span>, so that we can write <span>style<\/span> <span>to<\/span> override <span>or<\/span> polish the <span>style<\/span> <span>in<\/span> bootstrap theme.<\/span><br><span>    <span>link<\/span>(rel=<span>'stylesheet'<\/span>, href=<span>'\/bootstrap\/css\/cerulean.bootstrap.css'<\/span>)<\/span><br><span>    <span>link<\/span>(rel=<span>'stylesheet'<\/span>, href=<span>'\/stylesheets\/style.css'<\/span>)<\/span><br><span>  <span>body<\/span><\/span><br><span>    <span>block<\/span> <span>content<\/span><\/span><\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>After deciding on the urls we want to use, we will add corresponding controller into the index.js inside the routes folder. since we mainly have two function groups, we use <code>ctrlLocations<\/code> and <code>ctrlOthers<\/code> to represent these two main controller files.<\/p>\n<h2>Jade in Express<\/h2><p>Let\u2019s start to move the content in view into controller. When we look at the clickable prototype, especially its Jade view pages, we define Javascript object in hash in controller to store the data. <strong><em>We design data structure to hold data for views.<\/em><\/strong> Then in view folder, we can do: [1] use <code>=<\/code> to use that object\u2019s value, or use <code>#{}<\/code> to <strong><em>insert<\/em><\/strong> the value into a string.<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><\/pre><\/td><td><pre><span>h1= <span>title<\/span> <\/span><br><span>p &amp;nbsp; #{<span>title<\/span>}<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><blockquote>\n<p>Pay attention to the format when using the programming syntax or inline coding. <\/p>\n<\/blockquote>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><\/pre><\/td><td><pre><span>&lt;!--\u6ce8\u610f\u5728\u7528synax\u7684\u65f6\u5019\u8981\u591a\u7a7a<span>4<\/span>\u4e2aspace--&gt;<\/span><br><span>.row<\/span><br><span>    .<span>col<\/span>-xs-<span>12<\/span>.<span>col<\/span>-<span>sm<\/span>-<span>8<\/span><\/span><br><span>        .row.<span>list<\/span>-group<\/span><br><span>            each mission in missions<\/span><br><span>                .<span>col<\/span>-xs-<span>12<\/span>.<span>list<\/span>-group-item<\/span><br><span>                    h4<\/span><br><span>                        <span>a<\/span>(href=<span>'\/mission'<\/span>)= mission.name<\/span><br><span>                        small &amp;nbsp;<\/span><br><span>                            - <span>for<\/span> (var <span>i<\/span>=<span>0<\/span>; <span>i<\/span>&lt;mission.rating; <span>i<\/span>++)<\/span><br><span>                                span.glyphicon.glyphicon-<span>star<\/span><\/span><br><span>                            - <span>for<\/span> (var <span>i<\/span>=mission.rating; <span>i<\/span>&lt;<span>5<\/span>; <span>i<\/span>++)<\/span><br><span>                                span.glyphicon.glyphicon-<span>star<\/span>-<span>empty<\/span><\/span><br><span>                        span.badge.pull-<span>right<\/span>.badge-default <span>100<\/span><span>m<\/span><\/span><br><span>                    <span>p<\/span>.author= mission.author<\/span><br><span>                    <span>p<\/span><\/span><br><span>                        each <span>tag<\/span> in mission.<span>tags<\/span><\/span><br><span>                            span.label.label-warning= <span>tag<\/span><\/span><br><span>                            | &amp;nbsp;<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>In Jade, we want to use <strong>mixin<\/strong> as functions inside a jada file and use <code>include<\/code> to make it reuseable for other file. Like this, we usually put mixin at between <code>extends layout<\/code> and <code>block content<\/code>. <\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><\/pre><\/td><td><pre><span>mixin outputRating(rating)<\/span><br><span>  - <span>for<\/span> (var <span>i<\/span>=<span>0<\/span>; <span>i<\/span>&lt;mission.rating; <span>i<\/span>++)<\/span><br><span>    span.glyphicon.glyphicon-star<\/span><br><span>  - <span>for<\/span> (var <span>i<\/span>=mission.rating; <span>i<\/span>&lt;<span>5<\/span>; <span>i<\/span>++)<\/span><br><span>    span.glyphicon.glyphicon-star-empty<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><\/pre><\/td><td><pre><span><span>&lt;!--same place, but using `include`--&gt;<\/span><\/span><br><span>include _includes\/sharedHTMLfunctions<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>Here is an example of showing how to render sting to HTML when the textarea has newline character:<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><\/pre><\/td><td><pre><span>extends layout<\/span><br><span><\/span><br><span>block content<\/span><br><span>\t<span>#banner.page-header<\/span><\/span><br><span>\t\t.row<\/span><br><span>\t\t\t.col-sm-<span>12<\/span><\/span><br><span>\t\t\t\th1= title<\/span><br><span>\t.row<\/span><br><span>\t\t.col-sm-<span>12<\/span><\/span><br><span>\t\t\tp !{(<span>text<\/span>).<span>replace<\/span>(\/\\n\/g, <span>'&lt;br\/&gt;'<\/span>)}<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>For now, the data is stored in controller, while in practice, we need database and data model to store the data. But here we are in the right track of fast development, namely, from developing a clickable prototype, to move hard-cored data into controller as variables, and finally put them into database.<\/p>\n<h2>Heroku<\/h2><p>Add the <code>engines<\/code> part at project\u2019s package.json, add the node and npm version on it.<\/p>\n<p>Add a Procfile, used to declare the process type used by application. we put <code>web: npm start<\/code> inside the Procfile so that it tells Heroku to tun such web process.<\/p>\n<p>Use forego to test before push it into production environment. <code>brew install forego<\/code> to install forego, then do <code>forego start<\/code> and go to <code>localhost:5000<\/code> to see the result.<\/p>\n<p>Then if everything goes fine, from <strong><em>a) engines part b) Profile c) tested under <code>forego<\/code><\/em><\/strong>, then we do <code>heroku create<\/code> and <code>git push heroku master<\/code> to push the local git repo to the remote heroku container. Then <code>heroku open<\/code> to open that url.<\/p>\n<p>Terminology: <strong>Dynos<\/strong> are isolated, virtualized Unix containers, that provide the environment required to run an application. Generally, if you deploy an application for the first time, Heroku will run 1 web dyno automatically. In other words, it will boot a dyno, load it with your slug, and execute the command you\u2019ve associated with the web process type in your Procfile. <strong>So, it mainly is about scaling, if we have more dynos, we will have more resources. And we got that 1 dyno for free.<\/strong> we can type in <code>heroku ps<\/code> to check which dyno is running which process and for this command, <code>heroku ps:scale web=3 queue=2<\/code>, it means that we can start 5 dynos, 3 for the web and 2 for the queue process types.<\/p>\n<h2>Bootstrap<\/h2><p>in Bootstrap, there is always 12 columns, and you can define how many columns you want to use in device, <code>col-sm-6<\/code> means that element will take up 6 columns on device of size sm <strong>and larger.<\/strong> <\/p>\n<ul><li>xs: phone<\/li>\n<li>sm: tablets<\/li>\n<li>md: laptop<\/li>\n<li>lg: external monitors<\/li>\n<\/ul><p><code>&lt;div class=\"col-xs-12 col-sm-6\"&gt;&lt;\/div&gt;<\/code> means it will take the full width in phone screen while take only half in tablets or larger.<\/p>\n<p>In Jade, in order to put plain text, we need to use pipe at front.<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><\/pre><\/td><td><pre><span>ul.nav.navbar-nav.navbar-<span>right<\/span><\/span><br><span>    li<\/span><br><span>        <span>a<\/span>(href=<span>'#'<\/span>)<\/span><br><span>            span.glyphicon.glyphicon-user<\/span><br><span>            |  Sign Up<\/span><br><span>    li<\/span><br><span>        <span>a<\/span>(href=<span>'#'<\/span>)<\/span><br><span>            span.glyphicon.glyphicon-<span>log<\/span>-<span>in<\/span><\/span><br><span>            |  Login<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>When dealing with <code>block content<\/code>, we should note that if some elements are not contrained by css, then they will be strethed to have full width of screen. what we did now is do wrap the content with a <code>div.container<\/code> so that we can apply css on the container easily.<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><\/pre><\/td><td><pre><span><span>div<\/span><span>.container<\/span><\/span><br><span>  block <span>content<\/span><\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>\u73b0\u5728\u7684\u4e00\u4e2a\u4e3b\u8981\u95ee\u9898\u662f\uff0c \u6211\u77e5\u9053\u5e03\u5c40\u662f\u4ec0\u4e48\u6837\u5b50\u7684\uff0c \u4f46\u662f\u6211\u4e0d\u77e5\u9053\u5e94\u8be5\u600e\u4e48\u5199\uff1fwhen to use <code>.row<\/code> or <code>.page-header<\/code>. <\/p>\n<ul><li><strong>row. Rows must be placed within a .container (fixed-width) or .container-fluid (full-width) for proper alignment and padding. <\/strong><\/li>\n<li>Use rows to create horizontal groups of columns.<\/li>\n<li>Content should be placed within columns, and only columns may be immediate children of rows.<strong><em><code>col-<\/code> is the direct child element for <code>row<\/code><\/em><\/strong><\/li>\n<li>Actually <code>.page-header<\/code> just applies some of its default styling options to the element with that class. In practice, we find that the element with that class will be margined from normal element. <\/li>\n<\/ul><p>We can download the cutomized bootstrap theme from <a href=\"http:\/\/getbootstrap.com\/customize\/\" target=\"_blank\" rel=\"external\">the website<\/a>, say it I only want to use the <code>glyphicon<\/code> icon from Bootstrap, then I can just check that box and download it, then after unzipping the file, we include the file under the css part and <strong>inlcude the css tag inside the html<\/strong>, then it works fine! Hooray! In this project, I mainly use <code>glyphicon-user<\/code>, <code>glyphicon-fire<\/code> and <code>glyphicon-chevron-left<\/code> for navigation.<\/p>\n<p>Using <a href=\"https:\/\/github.com\/nicinabox\/superslides\" target=\"_blank\" rel=\"external\">superslides<\/a> to achieve a full-screen images scrolling animation. pretty amazing effects.<\/p>\n<p>Use <code>.panel<\/code> for inner component positioning.<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><\/pre><\/td><td><pre><span>   <span>.panel<\/span><span>.panel-primary<\/span><\/span><br><span><span>.panel-heading<\/span><\/span><br><span>\t<span>h2<\/span><span>.panel-title<\/span> Training Time<\/span><br><span><span>.panel-body<\/span><\/span><br><span>\t<span>p<\/span> March <span>15<\/span> - March <span>17<\/span>: <span>7<\/span>:<span>00<\/span> am - <span>7<\/span>:<span>00<\/span> pm<\/span><br><span>\t<span>p<\/span> March <span>21<\/span> - March <span>23<\/span>: <span>7<\/span>:<span>00<\/span> am - <span>7<\/span>:<span>00<\/span> pm<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><h2>Additional reference<\/h2><p>How to undo the <code>git add &lt;filename&gt;<\/code> before <code>git commit<\/code>. Use <code>git reset &lt;filename&gt;<\/code>. Include <code>node_modules<\/code> into <code>.gitignore<\/code> so that it won\u2019t be commited to github. Use<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><\/pre><\/td><td><pre><span><span>#You<\/span> can create your own <span>.gitignore<\/span> which ignores itself. Create <span>a<\/span> <span>.gitignore<\/span> with this two records:<\/span><br><span><span>.gitignore<\/span><\/span><br><span>node_modules<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>\u5728<a href=\"http:\/\/bootswatch.com\/\" target=\"_blank\" rel=\"external\">free bootstrap themes<\/a>\u4e0b\u8f7dbootstrap theme\u5230public folder.<\/p>\n<p><a href=\"http:\/\/stackoverflow.com\/questions\/33549178\/best-practices-for-loading-videos-on-a-web-page\" target=\"_blank\" rel=\"external\">Like Airbnb, how to load video at the background of a website<\/a>, using progressive loading or ?<\/p>\n<p>\u4f7f\u7528nodemon\u6765\u76d1\u542cserver-side js\u6587\u4ef6\u7684\u6539\u52a8\u6765\u81ea\u52a8\u66f4\u65b0server\uff0c \u4f7f\u7528browser-sync\u6765\u76d1\u542c\u5404\u79cdcss file\u7684\u6539\u52a8\u3002\u6709\u4e24\u79cd\u6a21\u5f0f\uff0c \u4e00\u79cd\u662f\u901a\u8fc7\u76f4\u63a5\u521b\u5efa\u4e00\u4e2aserver\u6765host\u672c\u5730\u7684static file, \u53e6\u4e00\u79cd\u6a21\u5f0f\u662f\u901a\u8fc7\u4ee3\u7406\u53e6\u4e00\u4e2a\u670d\u52a1\u5668\uff0c \u6bd4\u5982php server, rails webbrick server, python simplehttpserver, nodejs server\u90fd\u53ef\u4ee5\u7684!!!!<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><\/pre><\/td><td><pre><span>browser-<span>sync<\/span> start --proxy=<span>'localhost:3000'<\/span> --<span>files<\/span> <span>'app_server\/views\/*.jade, app_server\/controllers\/*.js, public\/stylesheets\/*.css'<\/span><\/span><br><span><\/span><br><span>browser-<span>sync<\/span> start --server --<span>files<\/span> <span>'app_server\/views\/*.jade, app_server\/controllers\/*.js, public\/stylesheets\/*.css'<\/span><\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>\u7531\u4e8e\u6211\u5728nodejs\u91cc\u9762\u8bbe\u7f6e\u4e86\u670d\u52a1\u5668\u7684\u7aef\u53e3\u662f3000\uff0c \u90a3\u4e48\u901a\u8fc7\u8ba9browser-sync\u76d1\u542c\u8fd9\u4e2a\u7aef\u53e3\u5e76\u521b\u5efa\u57283001\u7684\u4ee3\u7406\uff0c \u6211\u53ef\u4ee5\u5728<code>localhost:3001<\/code>\u4e0a\u9762\u5f97\u5230\u81ea\u52a8\u66f4\u65b0\u7684\u7f51\u9875!!<\/p>"},{"title":"MEAN\u5168\u6808\u5f00\u53d1[\u7b2c\u4e00\u671f-\u524d\u7aef\u5e03\u5c40]","link":"http:\/\/chocoluffy.com\/2016\/03\/06\/MEAN%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91-%E7%AC%AC%E4%B8%80%E6%9C%9F-%E5%89%8D%E7%AB%AF%E5%B8%83%E5%B1%80\/","guid":"http:\/\/chocoluffy.com\/2016\/03\/06\/MEAN\u5168\u6808\u5f00\u53d1-\u7b2c\u4e00\u671f-\u524d\u7aef\u5e03\u5c40\/","pubDate":"2016-03-06T14:38:41.000Z","categories":["javascript","web design","\u6280\u672f"],"author":"Shunzhe Yu","thumbnail":"","description":"<p>AirLoft\u7684\u539f\u578b\u3002\u4e00\u4e2asharing economy\u7684\u7f51\u7ad9\u3002 Loft\u662f\u9601\u697c\u7684\u610f\u601d\uff0c \u6bcf\u4e2a\u5fc3\u4e2d\u90a3\u4e2a\u9759\u9759\u5b88\u5019\u4e00\u4e9b\u79d8\u5bc6\u548c\u7656\u597d\u7684\u5730\u65b9\u3002 \u6709\u4e9b\u60c5\u611f\uff0c \u53ea\u80fd\u5728\u5c18\u5c01\u7684\u94c1\u95e8\u540e\u8bc9\u8bf4\uff0c \u5c31\u50cf\u6709\u4e9b\u8bdd\uff0c \u53ea\u8bb2\u7ed9\u67d0\u4e2a\u4eba\u542c\u3002\u538c\u5026\u4e86\u67d0\u4e9b\u7f51\u7ad9\u6ca1\u6709\u5ba1\u7f8e\u7684UI\uff0c \u4e5f\u8d81\u7740\u9752\u6625\u8f7b\u72c2\uff0c \u53bb\u6539\u53d8\u5427\u3002\u7b2c\u4e00\u671f\uff0c \u8bb0\u5f55\u6211\u524d\u7aef\u9875\u9762\u5f00\u53d1\u7684\u4e00\u4e9b\u624b\u8bb0\uff0c \u540e\u9762\u6162\u6162\u8fc7\u6e21\u5230\u6570\u636e\u5e93\u548c\u540e\u53f0API\u8bbe\u8ba1\u3002<\/p>","content":"<p>AirLoft\u7684\u539f\u578b\u3002\u4e00\u4e2asharing economy\u7684\u7f51\u7ad9\u3002 Loft\u662f\u9601\u697c\u7684\u610f\u601d\uff0c \u6bcf\u4e2a\u5fc3\u4e2d\u90a3\u4e2a\u9759\u9759\u5b88\u5019\u4e00\u4e9b\u79d8\u5bc6\u548c\u7656\u597d\u7684\u5730\u65b9\u3002 \u6709\u4e9b\u60c5\u611f\uff0c \u53ea\u80fd\u5728\u5c18\u5c01\u7684\u94c1\u95e8\u540e\u8bc9\u8bf4\uff0c \u5c31\u50cf\u6709\u4e9b\u8bdd\uff0c \u53ea\u8bb2\u7ed9\u67d0\u4e2a\u4eba\u542c\u3002\u538c\u5026\u4e86\u67d0\u4e9b\u7f51\u7ad9\u6ca1\u6709\u5ba1\u7f8e\u7684UI\uff0c \u4e5f\u8d81\u7740\u9752\u6625\u8f7b\u72c2\uff0c \u53bb\u6539\u53d8\u5427\u3002\u7b2c\u4e00\u671f\uff0c \u8bb0\u5f55\u6211\u524d\u7aef\u9875\u9762\u5f00\u53d1\u7684\u4e00\u4e9b\u624b\u8bb0\uff0c \u540e\u9762\u6162\u6162\u8fc7\u6e21\u5230\u6570\u636e\u5e93\u548c\u540e\u53f0API\u8bbe\u8ba1\u3002<\/p>\n<a><\/a>\n<h2>\u524d\u8a00<\/h2><p>\u6700\u8fd1\u5728\u505a\u4e00\u4e2asharing economy\u7684\u7f51\u7ad9\uff0c\u5728\u53c2\u8003\u4e86\u5927\u90e8\u5206\u73b0\u6709\u7f51\u7ad9\u7684UI\u7684\u6837\u5f0f\u540e\uff0c \u6211\u4eec\u611f\u89c9\u975e\u5e38\u7684\u4e0d\u6ee1\ud83d\ude02(\u5f53\u7136\u50cfquora\u8fd9\u79cd\u5c5e\u4e8e\u77e5\u8bc6\u4fe1\u606f\u5bc6\u5ea6\u7279\u522b\u9ad8\u7684\u7f51\u7ad9\u4f7f\u7528\u6587\u672c\u5bc6\u96c6\u7684\u5f62\u52bf\u8fd8\u8bf4\u7684\u8fc7\u53bb)\uff0c \u4f46\u662f\u50cfairbnb\u8fd8\u6709\u643a\u7a0b\u8fd9\u79cd\u5927\u578b\u7684peer sharing\u7684\u7f51\u7ad9\uff0c \u5982\u4f55\u53ef\u4ee5\u4ece\u7b2c\u4e00\u5c4f\u5c31\u5438\u5f15\u5230\u7528\u6237\u662f\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u95ee\u9898\u3002\u76f4\u63a5\u4e0a\u56fe\u770b\u770b\uff1a<br>\u9996\u5148\u662f<a href=\"https:\/\/www.airbnb.ca\/\" target=\"_blank\" rel=\"external\">airbnb<\/a>\u7684\u7f51\u7ad9\uff1a<br><img src=\"http:\/\/ww1.sinaimg.cn\/large\/c5ee78b5gw1f1mrezw5z0j21kw0t9dqn.jpg\" alt=\"airbnb website\"><br>airbnb\u5728\u7f51\u7ad9\u7684\u7b2c\u4e00\u5c4f\u662f\u7528\u4e00\u6bb5\u89c6\u9891\u6765\u5f53\u505a\u80cc\u666f\u7684\uff0c \u975e\u5e38\u60ca\u8273\uff0c \u4f46\u662f\u7b2c\u4e00\u5c4f\u6ca1\u6709\u6ee1\u5c4f\u662f\u4ec0\u4e48\u610f\u601d\uff1f\u662f\u60f3\u5438\u5f15\u6211\u4eec\u53ef\u4ee5\u5f80\u4e0b\u6eda\u561b\uff1f\u4f46\u662f\u8fd9\u79cd\u6837\u5f0f\u8ba9\u6211\u975e\u5e38\u4e0d\u8212\u670d\uff0c \u660e\u660e\u6709\u975e\u5e38\u597d\u7684\u521b\u610f\uff0c \u4e3a\u4ec0\u4e48\u4e0d\u50cf\u8fd9\u4e2a<a href=\"http:\/\/thenewcode.com\/samples\/polina.html\" target=\"_blank\" rel=\"external\">thenewcode.com<\/a>\u4e00\u6837\u4f7f\u7528\u9ad8\u6e05\u5168\u5c4f\u7684\u89c6\u9891\u6765\u5f53\u505a\u7f51\u9875\u80cc\u666f\u5462\uff0c \u5f88\u60ca\u8273\u5bf9\u4e0d\u5bf9!!<\/p>\n<p>\u518d\u770b\u4e00\u4e0b<a href=\"http:\/\/www.ctrip.com\/#ctm_ref=nb_cn_top\" target=\"_blank\" rel=\"external\">\u643a\u7a0b<\/a>\u7684\u7f51\u7ad9\uff0c \u611f\u89c9\u8fd8\u662f\u6ede\u7559\u5728\u4e0a\u4e2a\u4e16\u7eaa\u7684UI\u3002<br><img src=\"http:\/\/ww2.sinaimg.cn\/large\/c5ee78b5gw1f1mrhyoxpvj21kw0t7qiu.jpg\" alt=\"\u643a\u7a0bwebsite\"><br>\u4e8e\u662f\uff0c \u4e5f\u662f\u51fa\u4e8e\u5bf9\u989c\u503c\u7684\u8ffd\u6c42\uff0c\u6211\u51b3\u5b9a\u5c1d\u8bd5\u4f7f\u7528\u8f6e\u64ad\u5728\u7b2c\u4e8c\u5c4f\u7684\u7f51\u7ad9\u5c55\u793a\u9875\u9762\u6765\u5c55\u793a\u5404\u4e2a\u5174\u8da3\u5c0f\u7ec4\uff08\u6bd4\u5982\u4e00\u8d77\u505a\u65e9\u9910\u5403\u65e9\u9910\u5566\uff0c \u4e00\u8d77go hiking\u5566\uff0c \u4e00\u8d77\u590d\u4e60\u671f\u672b\u8003\u5199\u4f5c\u4e1a\u7684\u5174\u8da3\u5c0f\u7ec4\u5566\uff09<\/p>\n<p>\u8003\u8651\u5230\u5b8c\u6574\u9879\u76ee\u7684\u65f6\u95f4\u7d27\u8feb\uff0c \u5c31\u4e0d\u51c6\u5907\u5728\u524d\u7aef\u7684js\u7684\u4ee3\u7801\u4e0a\u82b1\u592a\u591a\u65f6\u95f4\uff0c \u6bd5\u7adf\u540e\u9762\u8fd8\u6709\u8f6c\u79fb\u5230express\u7684jade\u6a21\u7248\uff0c \u7136\u540e\u6700\u540e\u8fd8\u8981\u7528angularjs\u6765\u91cd\u5199\u3002 \u4e8e\u662f\u6211\u5c31\u5728\u627e\u5404\u7c7b\u6bd4\u8f83\u597d\u7684carousel\u7684js\u63d2\u4ef6\uff0c \u5728\u6bd4\u8f83\u4e86\u51e0\u4e2a\u7684\u8868\u73b0\u4e4b\u540e\uff0c \u8fd8\u662f<a href=\"https:\/\/github.com\/nicinabox\/superslides\" target=\"_blank\" rel=\"external\">superslides<\/a>\u6700\u5f97\u6211\u5fc3\u3002\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c \u76f4\u63a5\u4e0a\u5b9e\u4f8b\u4ee3\u7801\uff1a<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><span>20<\/span><br><span>21<\/span><br><span>22<\/span><br><span>23<\/span><br><span>24<\/span><br><span>25<\/span><br><span>26<\/span><br><span>27<\/span><br><span>28<\/span><br><span>29<\/span><br><span>30<\/span><br><span>31<\/span><br><span>32<\/span><br><span>33<\/span><br><\/pre><\/td><td><pre><span><span>&lt;!DOCTYPE html&gt;<\/span><\/span><br><span><span>&lt;<span>html<\/span>&gt;<\/span><\/span><br><span><span>&lt;<span>head<\/span>&gt;<\/span><\/span><br><span>  <span>&lt;<span>meta<\/span> <span>charset<\/span>=<span>\"utf-8\"<\/span>&gt;<\/span><\/span><br><span>  <span>&lt;<span>title<\/span>&gt;<\/span>Superslides - A fullscreen slider for jQuery<span>&lt;\/<span>title<\/span>&gt;<\/span><\/span><br><span>  <span>&lt;<span>link<\/span> <span>rel<\/span>=<span>\"stylesheet\"<\/span> <span>href<\/span>=<span>\"..\/dist\/stylesheets\/superslides.css\"<\/span>&gt;<\/span><\/span><br><span><span>&lt;\/<span>head<\/span>&gt;<\/span><\/span><br><span><span>&lt;<span>body<\/span>&gt;<\/span><\/span><br><span>  <span>&lt;<span>div<\/span> <span>id<\/span>=<span>\"slides\"<\/span>&gt;<\/span><\/span><br><span>    <span>&lt;<span>div<\/span> <span>class<\/span>=<span>\"slides-container\"<\/span>&gt;<\/span><\/span><br><span>      <span>&lt;<span>img<\/span> <span>src<\/span>=<span>\"images\/people.jpeg\"<\/span> <span>alt<\/span>=<span>\"Cinelli\"<\/span>&gt;<\/span><\/span><br><span>      <span>&lt;<span>img<\/span> <span>src<\/span>=<span>\"images\/surly.jpeg\"<\/span> <span>width<\/span>=<span>\"1024\"<\/span> <span>height<\/span>=<span>\"682\"<\/span> <span>alt<\/span>=<span>\"Surly\"<\/span>&gt;<\/span><\/span><br><span>      <span>&lt;<span>img<\/span> <span>src<\/span>=<span>\"images\/cinelli-front.jpeg\"<\/span> <span>width<\/span>=<span>\"1024\"<\/span> <span>height<\/span>=<span>\"683\"<\/span> <span>alt<\/span>=<span>\"Cinelli\"<\/span>&gt;<\/span><\/span><br><span>      <span>&lt;<span>img<\/span> <span>src<\/span>=<span>\"images\/affinity.jpeg\"<\/span> <span>width<\/span>=<span>\"1024\"<\/span> <span>height<\/span>=<span>\"685\"<\/span> <span>alt<\/span>=<span>\"Affinity\"<\/span>&gt;<\/span><\/span><br><span>    <span>&lt;\/<span>div<\/span>&gt;<\/span><\/span><br><span><\/span><br><span>    <span>&lt;<span>nav<\/span> <span>class<\/span>=<span>\"slides-navigation\"<\/span>&gt;<\/span><\/span><br><span>      <span>&lt;<span>a<\/span> <span>href<\/span>=<span>\"#\"<\/span> <span>class<\/span>=<span>\"next\"<\/span>&gt;<\/span>Next<span>&lt;\/<span>a<\/span>&gt;<\/span><\/span><br><span>      <span>&lt;<span>a<\/span> <span>href<\/span>=<span>\"#\"<\/span> <span>class<\/span>=<span>\"prev\"<\/span>&gt;<\/span>Previous<span>&lt;\/<span>a<\/span>&gt;<\/span><\/span><br><span>    <span>&lt;\/<span>nav<\/span>&gt;<\/span><\/span><br><span>  <span>&lt;\/<span>div<\/span>&gt;<\/span><\/span><br><span><\/span><br><span>  <span>&lt;<span>script<\/span> <span>src<\/span>=<span>\"http:\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/1.9.1\/jquery.min.js\"<\/span>&gt;<\/span><span><\/span><span>&lt;\/<span>script<\/span>&gt;<\/span><\/span><br><span>  <span>&lt;<span>script<\/span> <span>src<\/span>=<span>\"javascripts\/jquery.easing.1.3.js\"<\/span>&gt;<\/span><span><\/span><span>&lt;\/<span>script<\/span>&gt;<\/span><\/span><br><span>  <span>&lt;<span>script<\/span> <span>src<\/span>=<span>\"javascripts\/jquery.animate-enhanced.min.js\"<\/span>&gt;<\/span><span><\/span><span>&lt;\/<span>script<\/span>&gt;<\/span><\/span><br><span>  <span>&lt;<span>script<\/span> <span>src<\/span>=<span>\"..\/dist\/jquery.superslides.js\"<\/span> <span>type<\/span>=<span>\"text\/javascript\"<\/span> <span>charset<\/span>=<span>\"utf-8\"<\/span>&gt;<\/span><span><\/span><span>&lt;\/<span>script<\/span>&gt;<\/span><\/span><br><span>  <span>&lt;<span>script<\/span>&gt;<\/span><span><\/span><br><span>    $(<span>'#slides'<\/span>).superslides({<\/span><br><span>      animation: <span>'fade'<\/span><\/span><br><span>    });<\/span><br><span>  <\/span><span>&lt;\/<span>script<\/span>&gt;<\/span><\/span><br><span><span>&lt;\/<span>body<\/span>&gt;<\/span><\/span><br><span><span>&lt;\/<span>html<\/span>&gt;<\/span><\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>\u5ffd\u7565\u5176\u4ed6\u7684\u4e0d\u7ba1\uff0c \u5982\u679c\u6211\u4eec\u5e0c\u671b\u5f15\u5165superslides\u7684\u529f\u6548\uff0c \u6211\u4eec\u53ea\u9700\u8981\u6dfb\u52a0\u8fd9\u51e0\u4e2atag:<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><\/pre><\/td><td><pre><span><span>&lt;!--css--&gt;<\/span><\/span><br><span><span>&lt;<span>link<\/span> <span>rel<\/span>=<span>\"stylesheet\"<\/span> <span>href<\/span>=<span>\"..\/dist\/stylesheets\/superslides.css\"<\/span>&gt;<\/span><\/span><br><span><\/span><br><span><span>&lt;!--js--&gt;<\/span><\/span><br><span><span>&lt;<span>script<\/span> <span>src<\/span>=<span>\"http:\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/1.9.1\/jquery.min.js\"<\/span>&gt;<\/span><span><\/span><span>&lt;\/<span>script<\/span>&gt;<\/span><\/span><br><span><span>&lt;<span>script<\/span> <span>src<\/span>=<span>\"..\/dist\/jquery.superslides.js\"<\/span> <span>type<\/span>=<span>\"text\/javascript\"<\/span> <span>charset<\/span>=<span>\"utf-8\"<\/span>&gt;<\/span><span><\/span><span>&lt;\/<span>script<\/span>&gt;<\/span><\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>\u6ce8\u610fjquery\u7684\u5f15\u5165\u8981\u5728superslides\u7684\u524d\u9762\uff0c \u6765\u4fdd\u8bc1superslides\u5728\u5f15\u7528\u7684\u65f6\u5019\u53ef\u4ee5\u7528\u5230jquery\u91cc\u9762\u7684\u5b9a\u4e49\u7684\u51fd\u6570\u3002<\/p>\n<p>\u5728\u6dfb\u52a0\u4e86css\u548cjs\u4e4b\u540e\uff0c \u6211\u4eec\u5c31\u53ef\u4ee5\u6765\u521b\u5efa\u5168\u5c4f\u56fe\u7247\u8f6e\u64ad\u7684html\u7ed3\u6784\u4e86\uff0c \u5b98\u65b9\u63a8\u8350\u7684\u662f\u5728<code>&lt;div id=\"slides\"&gt;<\/code>\u91cc\u9762\u653e\u4e00\u4e2adiv\u91cc\u9762\u653e\u5404\u79cdimg\uff0c \u6216\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a<code>&lt;li&gt;<\/code>\u6765\u5206\u5f00img\u548cdiv\u6765\u5728\u540e\u671f\u5206\u522b\u5199\u6837\u5f0f\u548c\u5b9a\u4f4d\uff0c \u6211\u5728\u6211\u7684\u9879\u76ee\u4e2d\u4f7f\u7528\u7684\u5c31\u662f\u540e\u8005\uff0c \u6bd4\u5982\uff1a<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><span>20<\/span><br><span>21<\/span><br><span>22<\/span><br><span>23<\/span><br><span>24<\/span><br><span>25<\/span><br><span>26<\/span><br><\/pre><\/td><td><pre><span><span>&lt;<span>div<\/span> <span>id<\/span>=<span>\"slides\"<\/span>&gt;<\/span><\/span><br><span>  <span>&lt;<span>ul<\/span> <span>class<\/span>=<span>\"slides-container\"<\/span>&gt;<\/span><\/span><br><span>    <span>&lt;<span>li<\/span>&gt;<\/span><\/span><br><span>      <span>&lt;<span>img<\/span> <span>src<\/span>=<span>\"http:\/\/flickholdr.com\/1000\/800\"<\/span> <span>alt<\/span>=<span>\"\"<\/span>&gt;<\/span><\/span><br><span>      <span>&lt;<span>div<\/span> <span>class<\/span>=<span>\"container\"<\/span>&gt;<\/span><\/span><br><span>        Slide one<\/span><br><span>      <span>&lt;\/<span>div<\/span>&gt;<\/span><\/span><br><span>    <span>&lt;\/<span>li<\/span>&gt;<\/span><\/span><br><span>    <span>&lt;<span>li<\/span>&gt;<\/span><\/span><br><span>      <span>&lt;<span>img<\/span> <span>src<\/span>=<span>\"http:\/\/flickholdr.com\/1000\/800\/space\"<\/span> <span>alt<\/span>=<span>\"\"<\/span>&gt;<\/span><\/span><br><span>      <span>&lt;<span>div<\/span> <span>class<\/span>=<span>\"container\"<\/span>&gt;<\/span><\/span><br><span>        Slide two<\/span><br><span>      <span>&lt;\/<span>div<\/span>&gt;<\/span><\/span><br><span>    <span>&lt;\/<span>li<\/span>&gt;<\/span><\/span><br><span>    <span>&lt;<span>li<\/span>&gt;<\/span><\/span><br><span>      <span>&lt;<span>img<\/span> <span>src<\/span>=<span>\"http:\/\/flickholdr.com\/1000\/800\/tech\"<\/span> <span>alt<\/span>=<span>\"\"<\/span>&gt;<\/span><\/span><br><span>      <span>&lt;<span>div<\/span> <span>class<\/span>=<span>\"container\"<\/span>&gt;<\/span><\/span><br><span>        Slide three<\/span><br><span>      <span>&lt;\/<span>div<\/span>&gt;<\/span><\/span><br><span>    <span>&lt;\/<span>li<\/span>&gt;<\/span><\/span><br><span>  <span>&lt;\/<span>ul<\/span>&gt;<\/span><\/span><br><span>  <span>&lt;<span>nav<\/span> <span>class<\/span>=<span>\"slides-navigation\"<\/span>&gt;<\/span><\/span><br><span>    <span>&lt;<span>a<\/span> <span>href<\/span>=<span>\"#\"<\/span> <span>class<\/span>=<span>\"next\"<\/span>&gt;<\/span>Next<span>&lt;\/<span>a<\/span>&gt;<\/span><\/span><br><span>    <span>&lt;<span>a<\/span> <span>href<\/span>=<span>\"#\"<\/span> <span>class<\/span>=<span>\"prev\"<\/span>&gt;<\/span>Previous<span>&lt;\/<span>a<\/span>&gt;<\/span><\/span><br><span>  <span>&lt;\/<span>nav<\/span>&gt;<\/span><\/span><br><span><span>&lt;\/<span>div<\/span>&gt;<\/span><\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>\u7531\u4e8e\u6211\u7684\u7f51\u7ad9\u80cc\u666f\u989c\u8272\u662f\u6697\u8272\u7cfb\u7684\uff0c \u6211\u6dfb\u52a0\u4e86<code>reveselay<\/code>\u548c<code>overlay<\/code>\u6765\u521b\u5efa\u4e24\u4e2amask\u6765\u5199\u51fa\u6e10\u53d8\u6e10\u51fa\u7684\u6548\u679c\uff0c \u8fd9\u6837\u53ef\u4ee5\u5f88\u597d\u7684\u548c\u80cc\u666f\u989c\u8272\u6df7\u4e3a\u4e00\u4f53\u3002<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><span>20<\/span><br><span>21<\/span><br><span>22<\/span><br><span>23<\/span><br><span>24<\/span><br><span>25<\/span><br><span>26<\/span><br><span>27<\/span><br><span>28<\/span><br><span>29<\/span><br><span>30<\/span><br><span>31<\/span><br><span>32<\/span><br><span>33<\/span><br><span>34<\/span><br><span>35<\/span><br><span>36<\/span><br><span>37<\/span><br><span>38<\/span><br><span>39<\/span><br><span>40<\/span><br><span>41<\/span><br><span>42<\/span><br><span>43<\/span><br><span>44<\/span><br><span>45<\/span><br><span>46<\/span><br><span>47<\/span><br><span>48<\/span><br><span>49<\/span><br><span>50<\/span><br><span>51<\/span><br><span>52<\/span><br><span>53<\/span><br><span>54<\/span><br><\/pre><\/td><td><pre><span><span>&lt;<span>div<\/span> <span>class<\/span>=<span>\"section\"<\/span> <span>id<\/span>=<span>\"android\"<\/span>&gt;<\/span><\/span><br><span>  <span>&lt;<span>div<\/span> <span>class<\/span>=<span>\"containerrow\"<\/span>&gt;<\/span><\/span><br><span>    <span>&lt;<span>div<\/span> <span>id<\/span>=<span>\"slides\"<\/span>&gt;<\/span><\/span><br><span>      <span>&lt;<span>ul<\/span> <span>class<\/span>=<span>\"slides-container\"<\/span>&gt;<\/span><\/span><br><span>        <span>&lt;<span>li<\/span>&gt;<\/span><\/span><br><span>          <span>&lt;<span>img<\/span> <span>src<\/span>=<span>\".\/image\/desk.jpg\"<\/span> <span>alt<\/span>=<span>\"\"<\/span>&gt;<\/span><\/span><br><span>          <span>&lt;<span>div<\/span> <span>class<\/span>=<span>\"reverselay\"<\/span>&gt;<\/span><span>&lt;\/<span>div<\/span>&gt;<\/span><\/span><br><span>          <span>&lt;<span>div<\/span> <span>class<\/span>=<span>\"overlay\"<\/span>&gt;<\/span><span>&lt;\/<span>div<\/span>&gt;<\/span><\/span><br><span>          <span>&lt;<span>div<\/span> <span>class<\/span>=<span>\"mainbadget\"<\/span>&gt;<\/span><\/span><br><span>              <span>&lt;<span>h5<\/span>&gt;<\/span><\/span><br><span>                <span>&lt;<span>span<\/span> <span>class<\/span>=<span>\"glyphicon glyphicon-user\"<\/span>&gt;<\/span><span>&lt;\/<span>span<\/span>&gt;<\/span>&amp;nbsp;134 &amp;nbsp;&amp;nbsp;<\/span><br><span>                <span>&lt;<span>span<\/span> <span>class<\/span>=<span>\"glyphicon glyphicon-fire\"<\/span>&gt;<\/span><span>&lt;\/<span>span<\/span>&gt;<\/span>&amp;nbsp;3440<\/span><br><span>              <span>&lt;\/<span>h5<\/span>&gt;<\/span><\/span><br><span>          <span>&lt;\/<span>div<\/span>&gt;<\/span><\/span><br><span>          <span>&lt;<span>div<\/span> <span>class<\/span>=<span>\"text-container\"<\/span>&gt;<\/span><\/span><br><span>            <span>&lt;<span>div<\/span> <span>class<\/span>=<span>\"maintitle\"<\/span>&gt;<\/span><\/span><br><span>               <span>&lt;<span>a<\/span> <span>href<\/span>=<span>\"\"<\/span>&gt;<\/span>Morning Call<span>&lt;\/<span>a<\/span>&gt;<\/span><\/span><br><span>            <span>&lt;\/<span>div<\/span>&gt;<\/span><\/span><br><span>            <span>&lt;<span>div<\/span> <span>class<\/span>=<span>\"maintext\"<\/span>&gt;<\/span><\/span><br><span>              <span>&lt;<span>p<\/span>&gt;<\/span>Join our breakfast cooking club for fresh pancakes and sunshine!<\/span><br><span>              Meet your friends here and enjoy every piece of buttered toast. <span>&lt;<span>a<\/span> <span>href<\/span>=<span>\"\"<\/span>&gt;<\/span>See more.<span>&lt;\/<span>a<\/span>&gt;<\/span><span>&lt;\/<span>p<\/span>&gt;<\/span><\/span><br><span>            <span>&lt;\/<span>div<\/span>&gt;<\/span><\/span><br><span>          <span>&lt;\/<span>div<\/span>&gt;<\/span>    <\/span><br><span>        <span>&lt;\/<span>li<\/span>&gt;<\/span><\/span><br><span>      <span>&lt;\/<span>ul<\/span>&gt;<\/span><\/span><br><span><\/span><br><span>      <span>&lt;<span>nav<\/span> <span>class<\/span>=<span>\"slides-navigation\"<\/span>&gt;<\/span><\/span><br><span>        <span>&lt;<span>a<\/span> <span>href<\/span>=<span>\"#\"<\/span> <span>class<\/span>=<span>\"prev\"<\/span>&gt;<\/span><span>&lt;<span>span<\/span> <span>class<\/span>=<span>\"glyphicon glyphicon-chevron-left\"<\/span>&gt;<\/span><span>&lt;\/<span>span<\/span>&gt;<\/span><span>&lt;\/<span>a<\/span>&gt;<\/span><\/span><br><span>        <span>&lt;<span>a<\/span> <span>href<\/span>=<span>\"#\"<\/span> <span>class<\/span>=<span>\"next\"<\/span>&gt;<\/span><span>&lt;<span>span<\/span> <span>class<\/span>=<span>\"glyphicon glyphicon-chevron-right\"<\/span>&gt;<\/span><span>&lt;\/<span>span<\/span>&gt;<\/span><span>&lt;\/<span>a<\/span>&gt;<\/span><\/span><br><span>      <span>&lt;\/<span>nav<\/span>&gt;<\/span><\/span><br><span>    <span>&lt;\/<span>div<\/span>&gt;<\/span><\/span><br><span>    <\/span><br><span>    <span>&lt;<span>div<\/span> <span>id<\/span>=<span>\"slider-control\"<\/span>&gt;<\/span><\/span><br><span>      <span>&lt;<span>a<\/span> <span>href<\/span>=<span>\"#react\"<\/span> <span>class<\/span>=<span>\"active\"<\/span>&gt;<\/span><\/span><br><span>        <span>&lt;<span>div<\/span> <span>class<\/span>=<span>\"dot\"<\/span>&gt;<\/span><span>&lt;\/<span>div<\/span>&gt;<\/span><\/span><br><span>      <span>&lt;\/<span>a<\/span>&gt;<\/span><\/span><br><span>      <span>&lt;<span>a<\/span> <span>href<\/span>=<span>\"#intro\"<\/span>&gt;<\/span><\/span><br><span>        <span>&lt;<span>div<\/span> <span>class<\/span>=<span>\"dot\"<\/span>&gt;<\/span><span>&lt;\/<span>div<\/span>&gt;<\/span><\/span><br><span>      <span>&lt;\/<span>a<\/span>&gt;<\/span><\/span><br><span><\/span><br><span>      <span>&lt;<span>a<\/span> <span>href<\/span>=<span>\"#native\"<\/span>&gt;<\/span><\/span><br><span>        <span>&lt;<span>div<\/span> <span>class<\/span>=<span>\"dot\"<\/span>&gt;<\/span><span>&lt;\/<span>div<\/span>&gt;<\/span><\/span><br><span>      <span>&lt;\/<span>a<\/span>&gt;<\/span><\/span><br><span><\/span><br><span>      <span>&lt;<span>a<\/span> <span>href<\/span>=<span>\"#touch\"<\/span>&gt;<\/span><\/span><br><span>        <span>&lt;<span>div<\/span> <span>class<\/span>=<span>\"dot\"<\/span>&gt;<\/span><span>&lt;\/<span>div<\/span>&gt;<\/span><\/span><br><span>      <span>&lt;\/<span>a<\/span>&gt;<\/span><\/span><br><span><\/span><br><span>      <span>&lt;<span>a<\/span> <span>href<\/span>=<span>\"#android\"<\/span>&gt;<\/span><\/span><br><span>        <span>&lt;<span>div<\/span> <span>class<\/span>=<span>\"dot\"<\/span>&gt;<\/span><span>&lt;\/<span>div<\/span>&gt;<\/span><\/span><br><span>      <span>&lt;\/<span>a<\/span>&gt;<\/span><\/span><br><span>    <span>&lt;\/<span>div<\/span>&gt;<\/span><\/span><br><span>  <span>&lt;\/<span>div<\/span>&gt;<\/span><\/span><br><span><span>&lt;\/<span>div<\/span>&gt;<\/span><\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>\u6ce8\u610f\u6211\u8fd9\u91cc\u7684<code>text-container<\/code>, <code>maintitle<\/code>, <code>maintext<\/code>\u90fd\u662f\u7528\u6765\u521b\u5efaoverlay\u5728\u56fe\u7247\u4e0a\u9762\u7684\u6587\u5b57\uff0c \u5206\u79bb\u51fa\u6765\u6bd4\u8f83\u65b9\u4fbf\u5b9a\u4f4d\u3002\u6700\u540e\u8bb0\u5f97\u8981\u521d\u59cb\u5316js\uff1a<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><\/pre><\/td><td><pre><span><span>&lt;<span>script<\/span>&gt;<\/span><span><\/span><br><span>  $(<span>'#slides'<\/span>).superslides({<\/span><br><span>    animation: <span>'fade'<\/span>,<\/span><br><span>    play: <span>'8000'<\/span><\/span><br><span>  });<\/span><br><span><\/span><span>&lt;\/<span>script<\/span>&gt;<\/span><\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>\u8fd8\u6709\u5f88\u591a\u7684\u529f\u80fd\u9009\u9879\uff0c \u5728<a href=\"https:\/\/github.com\/nicinabox\/superslides\" target=\"_blank\" rel=\"external\">\u4e3b\u9875<\/a>\u53ef\u4ee5\u67e5\u770b\u5230\u6700\u5168\u7684\u529f\u80fd\u914d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u53c2\u8003\u4ed6\u7684<a href=\"http:\/\/archive.nicinabox.com\/superslides\/#1\" target=\"_blank\" rel=\"external\">\u5b9e\u4f8b\u9875\u9762<\/a> \u90a3\u5c31\u641e\u5b9a\u4e86! \u6700\u540e\u9644\u4e0a\u6210\u54c1\u7684gif:<br><img src=\"https:\/\/giant.gfycat.com\/WetLongHapuka.gif\" alt=\"project gif\"><\/p>"},{"title":"Ajax(with Jquery) on Nodejs server","link":"http:\/\/chocoluffy.com\/2016\/02\/20\/Ajax-with-Jquery-on-Nodejs-server\/","guid":"http:\/\/chocoluffy.com\/2016\/02\/20\/Ajax-with-Jquery-on-Nodejs-server\/","pubDate":"2016-02-20T19:37:25.000Z","categories":["javascript","nodejs","\u6280\u672f"],"author":"Shunzhe Yu","thumbnail":"","description":"<p>Nodejs\u7684\u7b2c\u4e00\u4e2a\u4e0a\u624b\u5c0f\u9879\u76ee\uff0c \u5c31\u662f\u5c1d\u8bd5\u81ea\u5df1\u5728\u672c\u5730\u7684\u9875\u9762\u6765\u53d1\u9001Ajax\u8bf7\u6c42\uff0c \u5e76\u4e14\u901a\u8fc7nodejs\u7684json\u6587\u4ef6\u8fd4\u56de\u540e\u4ee5\u6bd4\u8f83\u4f18\u96c5\u7684\u524d\u7aef\u6837\u5f0f\u5448\u73b0\u51fa\u6765\u3002 \u7b97\u662f\u518d\u4e00\u6b21\u590d\u4e60\u4e86Bootstrap\uff0c fontawesome\u5e93\u7684\u8c03\u7528\uff0c \u4ee5\u53ca\u4e00\u4e9bjquery\u7684\u8bed\u6cd5\u3002 \u4ed4\u7ec6\u56de\u60f3\uff0c \u5176\u5b9enodejs\u7684\u540e\u7aef\u5f00\u53d1\u548crails\\django\u7684router\u7684\u672c\u8d28\u90fd\u662f\u4e00\u6837\u7684\uff0c \u4ee5\u524d\u5728\u8fd8\u6ca1\u6709\u7406\u89e3\u5b9e\u8d28\u7684\u65f6\u5019\u5c31\u4e0a\u624b\u5b9e\u6218\uff0c \u73b0\u5728\u6162\u6162\u7406\u89e3\u4e86\u624d\u80fd\u591f\u878d\u4f1a\u8d2f\u901a\uff0c \u73b0\u5728\u7684\u5f00\u53d1\u901f\u5ea6\u5927\u5927\u8fdb\u6b65\u4e86\u3002 \u540c\u65f6\u4e5f\u5b66\u4f1a\u4e86\u5982\u4f55\u5141\u8bb8CORS\u7684\u8bf7\u6c42\uff0c \u548c\u6b63\u5219\u5339\u914d\u7684\u90e8\u5206\u7ec6\u8282\u3002<br>","content":"<p>Nodejs\u7684\u7b2c\u4e00\u4e2a\u4e0a\u624b\u5c0f\u9879\u76ee\uff0c \u5c31\u662f\u5c1d\u8bd5\u81ea\u5df1\u5728\u672c\u5730\u7684\u9875\u9762\u6765\u53d1\u9001Ajax\u8bf7\u6c42\uff0c \u5e76\u4e14\u901a\u8fc7nodejs\u7684json\u6587\u4ef6\u8fd4\u56de\u540e\u4ee5\u6bd4\u8f83\u4f18\u96c5\u7684\u524d\u7aef\u6837\u5f0f\u5448\u73b0\u51fa\u6765\u3002 \u7b97\u662f\u518d\u4e00\u6b21\u590d\u4e60\u4e86Bootstrap\uff0c fontawesome\u5e93\u7684\u8c03\u7528\uff0c \u4ee5\u53ca\u4e00\u4e9bjquery\u7684\u8bed\u6cd5\u3002 \u4ed4\u7ec6\u56de\u60f3\uff0c \u5176\u5b9enodejs\u7684\u540e\u7aef\u5f00\u53d1\u548crails\\django\u7684router\u7684\u672c\u8d28\u90fd\u662f\u4e00\u6837\u7684\uff0c \u4ee5\u524d\u5728\u8fd8\u6ca1\u6709\u7406\u89e3\u5b9e\u8d28\u7684\u65f6\u5019\u5c31\u4e0a\u624b\u5b9e\u6218\uff0c \u73b0\u5728\u6162\u6162\u7406\u89e3\u4e86\u624d\u80fd\u591f\u878d\u4f1a\u8d2f\u901a\uff0c \u73b0\u5728\u7684\u5f00\u53d1\u901f\u5ea6\u5927\u5927\u8fdb\u6b65\u4e86\u3002 \u540c\u65f6\u4e5f\u5b66\u4f1a\u4e86\u5982\u4f55\u5141\u8bb8CORS\u7684\u8bf7\u6c42\uff0c \u548c\u6b63\u5219\u5339\u914d\u7684\u90e8\u5206\u7ec6\u8282\u3002<br><a><\/a><\/p>\n<p><img src=\"https:\/\/zippy.gfycat.com\/FancyWeeBrontosaurus.gif\" alt=\"project gif\"><\/p>\n<h2>Requirements<\/h2><p>Requesting 127.0.0.1:3000 should give your index page (with CSS and JS). For the subsequent requests, you should use AJAX to send requests to the Node server and update only some parts of the page with the response data. Ideally, you should return JSON data as a response and then format that using Javascript.<\/p>\n<h2>Ongoing notes<\/h2><ul><li><p>how to use Ajax to request the data instead of using url request to node server? <strong><em>Main idea is that to use <code>$.getJSON(\"http:\/\/127.0.0.1:3000\/favs.json\", function(...){...}<\/code> to send out the Ajax request, and set the nodejs script to be able to respond such json file request and properly handle CORS problem. The things left will be just styling and formatted retrieved information and display.<\/em><\/strong><\/p>\n<\/li>\n<li><p>nodejs. You might use Node.js to connect to a database (returning a result set from a query, say, or updating a record); deliver HTML, XML, or JSON content; connect to local files; or serve up static web pages like Apache or another web server.<\/p>\n<\/li>\n<li><p>ajax. The mechanism for sending data to and retrieving data from the server with Ajax is the XMLHttpRequest object. So, now that we have an XMLHttpRequest object created, what do we do with it? We use it to make HTTP requests. To do so, we initialize the object with the open() method, which takes three arguments. Like <code>xmlhttp.open(\"GET\",\"Demo.xml\",true);<\/code>.<\/p>\n<ul><li>HEAD. <code>xmlhttp.open(\"HEAD\",\"Demo\",true);<\/code> and <code>xmlhttp.send(null)<\/code>.<\/li>\n<li>GET. <code>xmlhttp.open(\"GET\",\"Demo?FirstName=Nat&amp;LastName=Dunn\",true);<\/code>, the last argument is choose for true(asynchronous) or false(synchronous). The difference is that for synchronous version, browser has to wait for a response. The code below shows how to use Ajax solely to listen to the content change.<\/li>\n<\/ul><\/li>\n<\/ul><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><span>20<\/span><br><\/pre><\/td><td><pre><span><\/span><br><span><span>&lt;<span>script<\/span> <span>type<\/span>=<span>\"text\/javascript\"<\/span>&gt;<\/span><span><\/span><br><span>    <span><span>function<\/span> <span>start<\/span>(<span><\/span>) <\/span>{<\/span><br><span>        <span>var<\/span> xmlhttp = <span>new<\/span> XMLHttpRequest();<\/span><br><span>        <span>var<\/span> contentDiv = <span>document<\/span>.getElementById(<span>\"Content\"<\/span>);<\/span><br><span> <\/span><br><span>        xmlhttp.open(<span>\"GET\"<\/span>, <span>\"Demo?FirstName=Nat&amp;LastName=Dunn\"<\/span>, <span>true<\/span>);<\/span><br><span>        xmlhttp.onreadystatechange = <span><span>function<\/span>(<span><\/span>) <\/span>{ <span>\/\/ handle Ajax response.<\/span><\/span><br><span>            <span>if<\/span> (xmlhttp.readyState == <span>4<\/span> &amp;&amp; xmlhttp.status == <span>200<\/span>) {<\/span><br><span>                contentDiv.innerHTML = xmlhttp.responseText;<\/span><br><span>            }<\/span><br><span>        }<\/span><br><span>        xmlhttp.send(<span>null<\/span>);<\/span><br><span>    }<\/span><br><span> <\/span><br><span>    observeEvent(<span>window<\/span>, <span>\"load\"<\/span>, <span><span>function<\/span>(<span><\/span>) <\/span>{<\/span><br><span>        <span>var<\/span> btn = <span>document<\/span>.getElementById(<span>\"btnStart\"<\/span>);<\/span><br><span>        observeEvent(btn, <span>\"click\"<\/span>, start);<\/span><br><span>    });<\/span><br><span><\/span><span>&lt;\/<span>script<\/span>&gt;<\/span><\/span><br><\/pre><\/td><\/tr><\/table><\/figure><ul><li><p>Ajax in jquery. In general, Ajax does not work across domains. Exceptions are services that provide JSONP (JSON with Padding) support, which allow limited cross-domain functionality. JQuery provides Ajax support that abstracts away painful browser differences. It offers both a full-featured $.ajax() method, and simple convenience methods such as $.get(), $.getScript(), $.getJSON(), $.post(), and $.fn.load(). A working example of using Ajax of pulling image data from Flick referring <a href=\"http:\/\/www.w3school.com.cn\/jquery\/ajax_getjson.asp\" target=\"_blank\" rel=\"external\">this post<\/a><\/p>\n<\/li>\n<li><p>How to avoid CORS(cross-origin resources sharing) error, refer to <a href=\"http:\/\/www.bennadel.com\/blog\/2327-cross-origin-resource-sharing-cors-ajax-requests-between-jquery-and-node-js.htm\" target=\"_blank\" rel=\"external\">this post<\/a>. <strong><em>Main idea is that at the nodejs server part, we allow some origin and some type of content being CORS, thus we can request such resources at client part, which in this case in my own browser.<\/em><\/strong><\/p>\n<\/li>\n<li><p>How to regex all the href links inside a tweet? Especially how to do that in javascript? <\/p>\n<\/li>\n<\/ul><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><\/pre><\/td><td><pre><span><span>\/\/ tweet here is a JSON object<\/span><\/span><br><span><span>var<\/span> tweetString = <span>JSON<\/span>.stringify(tweet);<\/span><br><span><span>var<\/span> regex = <span>\/(https?:\\\/\\\/.*?)(\"|\\s)\/g<\/span>;<\/span><br><span><span>var<\/span> matchlst = [];<\/span><br><span>tweetString.replace(regex, <span><span>function<\/span>(<span>a, b, c, d<\/span>)<\/span>{<\/span><br><span>\t<span>if<\/span>(a.slice(-<span>1<\/span>)==<span>'\"'<\/span>){<\/span><br><span>\t\ta = a.slice(<span>0<\/span>, -<span>1<\/span>);<\/span><br><span>\t}<\/span><br><span>\tmatchlst.push(a);<\/span><br><span>})<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p><strong><em>Main idea is that we first make a JSON object into a string, then we can do regex match on a string. we use \/\/g to indicate that it is search globally. And then for those valid match, we trim out the trailing quote then store it into a list for later formatting use. <\/em><\/strong>. Note that we should make full use of the flag option provided with regex matching, refer to <a href=\"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Guide\/Regular_Expressions\" target=\"_blank\" rel=\"external\">this post<\/a>. For example, <code>\/...\/g<\/code> is for global match, <code>\/...\/i<\/code> is for case-insensitive match.<\/p>\n<ul><li>How to use Jquery to construct <code>div<\/code> or <code>a<\/code> elements? refer to <a href=\"http:\/\/stackoverflow.com\/questions\/867916\/creating-a-div-element-in-jquery\" target=\"_blank\" rel=\"external\">this post<\/a>, simply do the following: <strong><em>Here I make use of the Bootstrap alert styling!<\/em><\/strong><\/li>\n<\/ul><figure><table><tr><td><pre><span>1<\/span><br><\/pre><\/td><td><pre><span>$<span>(<span>\"&lt;div&gt;\"<\/span>)<\/span>.addClass<span>('alert alert-warning')<\/span>.html<span>(<span>\"&lt;strong&gt;Warning!&lt;\/strong&gt; Such user or tweet does not exist. Please enter a valid query.\"<\/span>)<\/span>.prependTo<span>(query_list)<\/span>;<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><ul><li>Avoid the <code>submit<\/code> event cause a page redirection or refresh? simply add a <code>return false<\/code> at the end of the submit function. Here is the submit function I wrote to process the info after AJAX from nodejs server. Note that my nodejs server host at <code>http:\/\/127.0.0.1:3000\/<\/code>.<\/li>\n<\/ul><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><span>20<\/span><br><span>21<\/span><br><span>22<\/span><br><span>23<\/span><br><span>24<\/span><br><span>25<\/span><br><span>26<\/span><br><span>27<\/span><br><span>28<\/span><br><span>29<\/span><br><span>30<\/span><br><span>31<\/span><br><span>32<\/span><br><span>33<\/span><br><span>34<\/span><br><span>35<\/span><br><span>36<\/span><br><span>37<\/span><br><\/pre><\/td><td><pre><span>$(<span>\"#queryform\"<\/span>).submit(<span><span>function<\/span>(<span><\/span>)<\/span>{<\/span><br><span>    \t\temptyAll();<\/span><br><span>    \t\t<span>var<\/span> searchval = $(<span>\"#search\"<\/span>).val();<\/span><br><span>    \t\t<span>console<\/span>.log(searchval);<\/span><br><span>    \t\t$(<span>\"#list ul\"<\/span>).addClass(<span>\"unseen\"<\/span>);<\/span><br><span>    \t\t<span>var<\/span> query_list = $(<span>\"#query\"<\/span>);<\/span><br><span>    \t\t<span>var<\/span> nameHash = {};<\/span><br><span>    \t\t<span>var<\/span> tweetidHash = {}; <\/span><br><span>\t    \t$.getJSON(<span>\"http:\/\/127.0.0.1:3000\/favs.json\"<\/span>, <span><span>function<\/span>(<span>tweets<\/span>)<\/span>{<\/span><br><span>\t\t\t\t$.each(tweets, <span><span>function<\/span>(<span>i,tweet<\/span>)<\/span>{<\/span><br><span>\t\t\t\t\tnameHash[tweet.user.screen_name] = tweet;<\/span><br><span>\t\t\t\t\ttweetidHash[tweet.id_str] = tweet;<\/span><br><span>\t\t\t\t});<\/span><br><span>\t\t\t\t<span>if<\/span>(<span>Object<\/span>.keys(nameHash).indexOf(searchval)&gt;=<span>0<\/span>){<\/span><br><span>\t\t\t\t\t<span>var<\/span> formattedText = <span>\"&lt;strong&gt;User screen name: &lt;\/strong&gt;\"<\/span>;<\/span><br><span>\t\t\t\t\tformattedText += searchval + <span>\"&lt;br&gt;\"<\/span>;<\/span><br><span>\t\t\t\t\tformattedText += <span>\"&lt;strong&gt;Tweet: &lt;\/strong&gt;&lt;br&gt;\"<\/span>;<\/span><br><span>\t\t\t\t\tformattedText += <span>\"&lt;pre&gt;&lt;code&gt;\"<\/span> + <span>JSON<\/span>.stringify(nameHash[searchval], <span>null<\/span>, <span>4<\/span>) + <span>\"&lt;\/code&gt;&lt;\/pre&gt;\"<\/span>;<\/span><br><span>\t\t\t\t\t$(<span>\"&lt;p&gt;\"<\/span>).html(formattedText).prependTo(query_list);<\/span><br><span>\t\t\t\t}<\/span><br><span>\t\t\t\t<span>else<\/span> <span>if<\/span>(<span>Object<\/span>.keys(tweetidHash).indexOf(searchval)&gt;=<span>0<\/span>){<\/span><br><span>\t\t\t\t\t<span>var<\/span> formattedText = <span>\"&lt;strong&gt;Tweet ID: &lt;\/strong&gt;\"<\/span>;<\/span><br><span>\t\t\t\t\tformattedText += searchval + <span>\"&lt;br&gt;\"<\/span>;<\/span><br><span>\t\t\t\t\tformattedText += <span>\"&lt;strong&gt;Tweet: &lt;\/strong&gt;&lt;br&gt;\"<\/span>;<\/span><br><span>\t\t\t\t\tformattedText += <span>\"&lt;pre&gt;&lt;code&gt;\"<\/span> + <span>JSON<\/span>.stringify(tweetidHash[searchval], <span>null<\/span>, <span>4<\/span>) + <span>\"&lt;\/code&gt;&lt;\/pre&gt;\"<\/span>;<\/span><br><span>\t\t\t\t\t$(<span>\"&lt;p&gt;\"<\/span>).html(formattedText).prependTo(query_list);<\/span><br><span>\t\t\t\t}<\/span><br><span>\t\t\t\t<span>else<\/span>{\t\t<\/span><br><span>\t\t\t\t\t$(<span>\"&lt;div&gt;\"<\/span>).addClass(<span>'alert alert-warning'<\/span>).html(<span>\"&lt;strong&gt;Warning!&lt;\/strong&gt; Such user or tweet does not exist. Please enter a valid query.\"<\/span>).prependTo(query_list);<\/span><br><span><\/span><br><span>\t\t\t\t}<\/span><br><span>\t\t\t});<\/span><br><span>\t<\/span><br><span>\t\t\t$(<span>\"#query\"<\/span>).removeClass(<span>\"unseen\"<\/span>);<\/span><br><span>\t\t\t$(<span>\"#query\"<\/span>).addClass(<span>\"seen\"<\/span>); <\/span><br><span>\t\t\t<span>return<\/span> <span>false<\/span>; <\/span><br><span>    \t});<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><ul><li>Some JS tricks:<ul><li><code>if...in...<\/code> equivalent type in JS as in python. use <code>Array.indexOf(element)&gt;=0<\/code> to know that if such element exist in this array.<\/li>\n<li>Get the keys array of a Hash. <code>Object.keys(hash)<\/code>.<\/li>\n<li>Get the last character from a string. <code>string.slice(-1)<\/code>.<\/li>\n<li>Trim out the last character from a string. <code>string = string.slice(0, -1)<\/code>.<\/li>\n<li>Use Jquery to get the value from submitted form. <\/li>\n<\/ul><\/li>\n<\/ul>"},{"title":"Online messege sending\u540e\u7aefC\u5b9e\u73b0\u7248","link":"http:\/\/chocoluffy.com\/2016\/02\/18\/Online-messege-sending%E5%90%8E%E7%AB%AFC%E5%AE%9E%E7%8E%B0%E7%89%88\/","guid":"http:\/\/chocoluffy.com\/2016\/02\/18\/Online-messege-sending\u540e\u7aefC\u5b9e\u73b0\u7248\/","pubDate":"2016-02-18T22:51:30.000Z","categories":["C","\u6280\u672f"],"author":"Shunzhe Yu","thumbnail":"","description":"<p>\u539f\u578b\u662f\u6700\u8fd1\u4e00\u95e8\u8bfe\u7684\u4f5c\u4e1a\uff0c \u8fd9\u662f\u6211\u5728\u8fc7\u7a0b\u4e2d\u8bb0\u4e0b\u7684\u4e00\u4e9b\u624b\u8bb0\u5fc3\u5f97\uff0c \u90fd\u662f\u6211\u8ba4\u4e3a\u662f\u503c\u5f97\u5173\u6ce8\u7684\u5730\u65b9\u3002 \u672a\u6765\u4f1a\u628a\u8fd9\u4e9b\u540e\u7aef\u51fd\u6570\u52a0\u5165TCP\u534f\u8bae\uff0c \u66f4\u8d34\u8fd1\u5b9e\u6218\u4f7f\u7528\u5427\u3002\u57fa\u7840\u7684\u6570\u636e\u7ed3\u6784\u4e3b\u8981\u662f\u94fe\u8868\uff0c \u7b97\u662f\u7528C\u81ea\u5df1\u518d\u590d\u4e60\u4e00\u904d\u94fe\u8868\u5b9e\u73b0\u3002\u7b97\u6cd5\u561b\uff1f\u6ca1\u6709\u7b97\u6cd5\ud83d\ude02\u4e0d\u9700\u8981\u8003\u8651\u6027\u80fd\u4e5f\u5c31\u6ca1\u6709\u8003\u8651\u7b97\u6cd5\u4f18\u5316\u54af\u3002<\/p>","content":"<p>\u539f\u578b\u662f\u6700\u8fd1\u4e00\u95e8\u8bfe\u7684\u4f5c\u4e1a\uff0c \u8fd9\u662f\u6211\u5728\u8fc7\u7a0b\u4e2d\u8bb0\u4e0b\u7684\u4e00\u4e9b\u624b\u8bb0\u5fc3\u5f97\uff0c \u90fd\u662f\u6211\u8ba4\u4e3a\u662f\u503c\u5f97\u5173\u6ce8\u7684\u5730\u65b9\u3002 \u672a\u6765\u4f1a\u628a\u8fd9\u4e9b\u540e\u7aef\u51fd\u6570\u52a0\u5165TCP\u534f\u8bae\uff0c \u66f4\u8d34\u8fd1\u5b9e\u6218\u4f7f\u7528\u5427\u3002\u57fa\u7840\u7684\u6570\u636e\u7ed3\u6784\u4e3b\u8981\u662f\u94fe\u8868\uff0c \u7b97\u662f\u7528C\u81ea\u5df1\u518d\u590d\u4e60\u4e00\u904d\u94fe\u8868\u5b9e\u73b0\u3002\u7b97\u6cd5\u561b\uff1f\u6ca1\u6709\u7b97\u6cd5\ud83d\ude02\u4e0d\u9700\u8981\u8003\u8651\u6027\u80fd\u4e5f\u5c31\u6ca1\u6709\u8003\u8651\u7b97\u6cd5\u4f18\u5316\u54af\u3002<\/p>\n<a><\/a>\n<p><img src=\"http:\/\/ww3.sinaimg.cn\/large\/c5ee78b5gw1f149fxx25oj21360w6n5z.jpg\" alt=\"screenshot\"><br><img src=\"http:\/\/ww4.sinaimg.cn\/large\/c5ee78b5gw1f149r4zqkaj213e0zgajd.jpg\" alt=\"profileshot\"><\/p>\n<h2>Ongoing notes<\/h2><ul><li>how to enter the interactive mode? the main function for interactive mode is process_args. Like the code snippet below, it keep reading inputs from stdin(then using <code>fgets<\/code> to feed it into a input buffer), then using tokenize function(making use of <code>strtok<\/code> to tokenize the input commands), then the input command is stored in <code>char ** cmdargv<\/code>, which just like <code>argv<\/code> we often use. <code>cmdargv[0]<\/code> stores the first command, like <code>profile<\/code> and so on. What is left is just to depend on the return value from each core functions to display a proper information back to the screen.  <\/li>\n<\/ul><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><\/pre><\/td><td><pre><span><span>printf<\/span>(<span>\"Welcome to FriendMe! (Local version)\\nPlease type a command:\\n&gt; \"<\/span>);<\/span><br><span><\/span><br><span><span>while<\/span> (fgets(input, INPUT_BUFFER_SIZE, input_stream) != <span>NULL<\/span>) {<\/span><br><span>    <span>\/\/ only echo the line in batch mode since in interactive mode the user<\/span><\/span><br><span>    <span>\/\/ just typed the line<\/span><\/span><br><span>    <span>if<\/span> (batch_mode) {<\/span><br><span>        <span>printf<\/span>(<span>\"%s\"<\/span>, input);<\/span><br><span>    }<\/span><br><span><\/span><br><span>    <span>char<\/span> *cmd_argv[INPUT_ARG_MAX_NUM];<\/span><br><span>    <span>int<\/span> cmd_argc = tokenize(input, cmd_argv);<\/span><br><span><\/span><br><span>    <span>if<\/span> (cmd_argc &gt; <span>0<\/span> &amp;&amp; process_args(cmd_argc, cmd_argv, &amp;user_list) == -<span>1<\/span>) {<\/span><br><span>        <span>break<\/span>; <span>\/\/ can only reach if quit command was entered<\/span><\/span><br><span>    }<\/span><br><span><\/span><br><span>    <span>printf<\/span>(<span>\"&gt; \"<\/span>);<\/span><br><span>}<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><ul><li>cast type when allocating memory for <strong><em>Fixed length character array<\/em><\/strong><\/li>\n<\/ul><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><\/pre><\/td><td><pre><span><span>typedef<\/span> <span>struct<\/span> user {<\/span><br><span>    <span>char<\/span> name[MAX_NAME];<\/span><br><span>    <span>char<\/span> profile_pic[MAX_NAME];  <span>\/\/ This is a *filename*, not the file contents.<\/span><\/span><br><span>    <span>struct<\/span> post *first_post;<\/span><br><span>    <span>struct<\/span> user *friends[MAX_FRIENDS];<\/span><br><span>    <span>struct<\/span> user *next;<\/span><br><span>} User;<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>we need to do this:<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><\/pre><\/td><td><pre><span>char* username = malloc<span>(<span>MAX_NAME*sizeof<\/span><span>(<span>char<\/span>)<\/span>)<\/span><span>;<\/span><\/span><br><span>strcpy<span>(<span>newuser-&gt;name<\/span>, username)<\/span><span>;<\/span><\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>to be able to allocate the memory for that character array. <\/p>\n<ul><li>how to handle structs of linked list when only the head of the list is given like <code>int create_user(const char *name, User **user_ptr_add)<\/code>. Note that since we will modify the linked list itself, we will have to pass in a pointer of pointer. Now if we only want to iterate through this linked list, we don\u2019t need the ptr of ptr. Resolved by referring to <a href=\"http:\/\/geeksquiz.com\/linked-list-set-2-inserting-a-node\/\" target=\"_blank\" rel=\"external\">this post <\/a>, and refer to <a href=\"https:\/\/www.cs.bu.edu\/teaching\/c\/linked-list\/delete\/\" target=\"_blank\" rel=\"external\">this post<\/a> and <a href=\"http:\/\/geeksquiz.com\/linked-list-set-3-deleting-node\/\" target=\"_blank\" rel=\"external\">this post from Geeksquiz<\/a> for deleting a node from a post. <blockquote>\n<p>one key thing of dealing with ptr of ptr in linked list is that we need make clear the use of <code>curr<\/code> pointer and <code>*user_ptr<\/code> since we are suppore to change it in function <code>int create_user(const char *name, User **user_ptr_add)<\/code>. <\/p>\n<\/blockquote>\n<\/li>\n<\/ul><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><span>20<\/span><br><\/pre><\/td><td><pre><span><span>\/\/ add the newuser to the end of linked list.<\/span><\/span><br><span><span>\/\/ int create_user(const char *name, User **user_ptr_add) <\/span><\/span><br><span><\/span><br><span>\t<span>\/\/ now append this node to the end of linked list.<\/span><\/span><br><span>\tUser* last = *user_ptr_add;<\/span><br><span>\t<span>if<\/span>(*user_ptr_add == <span>NULL<\/span>){ <span>\/\/ if linked list is empty<\/span><\/span><br><span>\t\t*user_ptr_add = newuser;<\/span><br><span>\t}<\/span><br><span>\t<span>else<\/span>{ <span>\/\/ otherwise<\/span><\/span><br><span>\t\t<span>if<\/span>(<span>strcmp<\/span>(last-&gt;name, name) == <span>0<\/span>){ <span>\/\/ if the first node is the same user.<\/span><\/span><br><span>\t\t\t<span>return<\/span> <span>1<\/span>;<\/span><br><span>\t\t}<\/span><br><span>\t\t<span>while<\/span>(last-&gt;next!=<span>NULL<\/span>){<\/span><br><span>\t\t\t<span>if<\/span>(<span>strcmp<\/span>(last-&gt;name, name) == <span>0<\/span>){ <span>\/\/ if same user exists<\/span><\/span><br><span>\t\t\t\t<span>return<\/span> <span>1<\/span>;<\/span><br><span>\t\t\t}<\/span><br><span>\t\t\tlast = last-&gt;next;<\/span><br><span>\t\t}<\/span><br><span>\t\tlast-&gt;next = newuser;<\/span><br><span>\t}<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><span>20<\/span><br><span>21<\/span><br><\/pre><\/td><td><pre><span><span>\/\/ delete the user with name from the linked list.<\/span><\/span><br><span><span>\/\/ int delete_user(const char *name, User **user_ptr_del)<\/span><\/span><br><span><\/span><br><span>\t\tUser* curr = *user_ptr_del;<\/span><br><span>\t\tUser* prev; <span>\/\/ store previous node.<\/span><\/span><br><span><\/span><br><span>\t\t<span>\/\/ if head node itself holds the user to be deleted.<\/span><\/span><br><span>\t\t<span>if<\/span>(curr != <span><span>NULL<\/span> &amp;&amp; <span>strcmp<\/span><span>(curr-&gt;name, name)<\/span><\/span>== <span>0<\/span>){<\/span><br><span>\t\t\t*user_ptr_del = curr-&gt;next;<\/span><br><span>\t\t\t<span>free<\/span>(curr);<\/span><br><span>\t\t\t<span>return<\/span> <span>0<\/span>;<\/span><br><span>\t\t}<\/span><br><span><\/span><br><span>\t\t<span>while<\/span>(curr != <span><span>NULL<\/span> &amp;&amp; <span>strcmp<\/span><span>(curr-&gt;name, name)<\/span> !<\/span>= <span>0<\/span>){<\/span><br><span>\t\t\tprev = curr;<\/span><br><span>\t\t\tcurr = curr-&gt;next;<\/span><br><span>\t\t}<\/span><br><span><\/span><br><span>\t\tdelete_user_from_friends(name, *user_ptr_del);<\/span><br><span>\t\tprev-&gt;next = curr-&gt;next;<\/span><br><span>\t\t<span>free<\/span>(curr);<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><ul><li><p>type is not assignable during <code>malloc<\/code>: <code>struct user *friends[MAX_FRIENDS];<\/code><\/p>\n<\/li>\n<li><p>segmentation fault!!! <strong><em>Usually in practice, if we want to access the memory location where we don\u2019t have access to, meaning that when we want to set some attributes, we need to first make sure that that part of memory has been malloc!!<\/em><\/strong><\/p>\n<blockquote>\n<p>One trick on this is to make sure that whenever we see a struct like this: first is to malloc memory for the all struct, then for each array, like here <code>name<\/code>, <code>profile_pic<\/code> and <code>friends<\/code> array. Especially the <code>friends<\/code> array, the haunting time when debugging for the final function <code>delete_user<\/code>, I always get a segmentation fault, which results from that I did not malloc the memory for the friend array at the very first beginning inside <code>create_user<\/code> function, thus when I try to change one element\u2019s value, I will access to unallocated memory, a segmentation fault.<\/p>\n<\/blockquote>\n<\/li>\n<\/ul><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><\/pre><\/td><td><pre><span><span>typedef<\/span> <span>struct<\/span> user {<\/span><br><span>    <span>char<\/span> name[MAX_NAME];<\/span><br><span>    <span>char<\/span> profile_pic[MAX_NAME];  <span>\/\/ This is a *filename*, not the file contents.<\/span><\/span><br><span>    <span>struct<\/span> post *first_post;<\/span><br><span>    <span>struct<\/span> user *friends[MAX_FRIENDS];<\/span><br><span>    <span>struct<\/span> user *next;<\/span><br><span>} User;<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><ul><li>Difference between <code>memcpy<\/code> and <code>strcpy<\/code>. <code>strcpy<\/code> will stop when meeting a \u2018\\0\u2019 line terminator, while <code>memcpy<\/code> will not do that, it can do the content copy without looking to the value of the contents.<\/li>\n<\/ul><h2>Bugs remaining to fix<\/h2><ul><li>time.h. I finally do a trick to cover up the failure of using time.h. we are supposed to record the time when a post is created, and store the address of that <code>time_t<\/code>, which is actually a long int, to the struct attribute <code>post-&gt;date<\/code>, while it fails to display the right time when doing <code>ctime<\/code> in <code>print_user<\/code> function. I finally insert a time update right into the <code>print_user<\/code> function to let them next to each other and it display right result?!.<\/li>\n<\/ul>"},{"title":"Responsive web design[\u7b2c\u4e09\u671f]-js\u52a8\u753b","link":"http:\/\/chocoluffy.com\/2016\/02\/04\/Responsive-web-design-%E7%AC%AC%E4%B8%89%E6%9C%9F-js%E5%8A%A8%E7%94%BB\/","guid":"http:\/\/chocoluffy.com\/2016\/02\/04\/Responsive-web-design-\u7b2c\u4e09\u671f-js\u52a8\u753b\/","pubDate":"2016-02-05T01:48:22.000Z","categories":["javascript","web design","\u6280\u672f"],"author":"Shunzhe Yu","thumbnail":"","description":"<p>Introduce greensock library to javascript, along with GPU acceleration to create high-quality and smooth animations. <\/p>","content":"<p>Introduce greensock library to javascript, along with GPU acceleration to create high-quality and smooth animations. <\/p>\n<a><\/a>\n<h2>Introduction<\/h2><p>\u5f88\u591a\u524d\u7aef\u5f00\u53d1\u8005\u4f1a\u544a\u8bc9\u4f60\uff0c\u4f60\u5e94\u8be5\u907f\u514d\u4f7f\u7528 JavaScript \u52a8\u753b\u3002\u4f7f\u7528 CSS \u52a8\u753b\u4f1a\u6709\u66f4\u597d\u7684\u6027\u80fd\uff08\u66f4\u5c11\u7684 CPU \u65f6\u95f4\uff09\u548c\u66f4\u5e73\u6ed1\u7684\u6548\u679c\uff08\u66f4\u9ad8\u7684\u5e27\u7387\uff09\u3002<\/p>\n<p>\u7136\u800c\uff0cJavaScript \u52a8\u753b\u6162\u7684\u539f\u56e0\u7ecf\u5e38\u662f\u56e0\u4e3a\u4f60\u7528\u7684\u5e93\u5e76\u6ca1\u6709\u4e3a\u52a8\u753b\u8fdb\u884c\u4f18\u5316\u3002\u4f18\u5316\u8fc7\u7684 JavaScript \u52a8\u753b\u5f15\u64ce\uff08\u6bd4\u5982 GreenSock \u6216 Velocity.js\uff09\u6709\u582a\u6bd4 CSS \u52a8\u753b\u7684\u6027\u80fd\u3002\u67d0\u4e9b\u60c5\u51b5\u4e0b JS \u52a8\u753b\u751a\u81f3\u6bd4 CSS \u52a8\u753b\u66f4\u5feb\uff01\u53ef\u53c2\u8003\u4e0b\u9762\u8fd9\u4e2a\u6027\u80fd\u7684\u6bd4\u8f83\uff0c \u6700\u540e\u53d1\u73b0\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0bgreensock\u7684\u6027\u80fd\u4f1a\u6bd4jquery\u597d\u4e0a5-6\u500d<\/p>\n<ul><li><a href=\"https:\/\/www.greensock.com\/js\/speed.html\" target=\"_blank\" rel=\"external\">greensock<\/a> <\/li>\n<\/ul><h2>\u5f15\u5165greensock js\u5e93<\/h2><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><span>20<\/span><br><span>21<\/span><br><\/pre><\/td><td><pre><span>TweenMax.fromTo(<span>\"#box\"<\/span>,<span>1<\/span>, {<\/span><br><span>    <span>\/\/ from<\/span><\/span><br><span>    css: {<\/span><br><span>      left: <span>\"-200px\"<\/span>,<\/span><br><span>    }<\/span><br><span>  },{<\/span><br><span>    <span>\/\/ to<\/span><\/span><br><span>    css: {<\/span><br><span>      left: <span>\"200px\"<\/span>,<\/span><br><span>    },<\/span><br><span><\/span><br><span>    <span>\/\/ \u6c38\u4e45\u91cd\u590d\u52a8\u753b\u7684\u9009\u9879<\/span><\/span><br><span>    repeat: -<span>1<\/span>,<\/span><br><span><\/span><br><span>    <span>\/\/ \u53cd\u8f6c\u3001\u91cd\u65b0\u8fd0\u884c\u52a8\u753b\u7684\u9009\u9879<\/span><\/span><br><span>    yoyo: <span>true<\/span>,<\/span><br><span><\/span><br><span>    <span>\/\/ \u6539\u53d8 easing \u7c7b\u578b<\/span><\/span><br><span>    ease: Power2.easeInOut,<\/span><br><span>  }<\/span><br><span>);<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><blockquote>\n<p>\u4ec0\u4e48\u662ffps? \u5e27\u7387\u6216\u753b\u9762\u66f4\u65b0\u7387\u662f\u7528\u4e8e\u6d4b\u91cf\u663e\u793a\u5e27\u6570\u7684\u91cf\u5ea6[1]\u3002\u6d4b\u91cf\u5355\u4f4d\u4e3a\u201c\u6bcf\u79d2\u663e\u793a\u5e27\u6570\u201d\uff08Frame per Second\uff0cFPS\uff0c\u5e27\u7387\uff09\u6216\u201c\u8d6b\u5179\u201d\uff0c\u4e00\u822c\u6765\u8bf4FPS\u7528\u4e8e\u63cf\u8ff0\u5f71\u7247\u3001\u7535\u5b50\u7ed8\u56fe\u6216\u6e38\u620f\u6bcf\u79d2\u64ad\u653e\u591a\u5c11\u5e27\uff0c\u800c\u8d6b\u5179\u5219\u63cf\u8ff0\u663e\u793a\u5c4f\u7684\u753b\u9762\u6bcf\u79d2\u66f4\u65b0\u591a\u5c11\u6b21\u3002<br>\u7531\u4e8e\u4eba\u7c7b\u773c\u775b\u7684\u7279\u6b8a\u751f\u7406\u7ed3\u6784\uff0c\u5982\u679c\u6240\u770b\u753b\u9762\u4e4b\u5e27\u7387\u9ad8\u4e8e\u6bcf\u79d2\u7ea610-12\u5e27\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u8ba4\u4e3a\u662f\u8fde\u8d2f\u7684[2]\uff0c \u6b64\u73b0\u8c61\u79f0\u4e4b\u4e3a\u89c6\u89c9\u6682\u7559\u3002\u8fd9\u4e5f\u5c31\u662f\u4e3a\u4ec0\u4e48\u7535\u5f71\u80f6\u7247\u662f\u4e00\u683c\u4e00\u683c\u62cd\u6444\u51fa\u6765\uff0c\u7136\u540e\u5feb\u901f\u64ad\u653e\u7684\u3002\u4f4630\u5e27\u4ec5\u4ec5\u662f\u6d41\u7545\uff0c\u800c\u975e\u5e73\u6ed1\u8fde\u7eed\uff0c\u56e0\u6b64\u6709\u66f4\u591a\u5e27\u7387\u7684\u4ea7\u54c1\u63a8\u51fa\u4e5f\u5c31\u4e0d\u8db3\u4e3a\u5947\u4e86\u3002<br>\u6709\u58f0\u7535\u5f71\u7684\u62cd\u6444\u53ca\u64ad\u653e\u5e27\u7387\u5747\u4e3a\u6bcf\u79d224\u5e27\uff0c\u5bf9\u4e00\u822c\u4eba\u800c\u8a00\u5df2\u7b97\u53ef\u63a5\u53d7\uff0c\u4f46\u5bf9\u65e9\u671f\u7684\u9ad8\u52a8\u6001\u7535\u5b50\u6e38\u620f\uff0c\u5c24\u5176\u662f\u5c04\u51fb\u6e38\u620f\u6216\u7ade\u901f\u6e38\u620f\u6765\u8bf4\uff0c\u5e27\u7387\u5c11\u4e8e\u6bcf\u79d230\u5e27\u7684\u8bdd\uff0c\u6e38\u620f\u5c31\u4f1a\u663e\u5f97\u4e0d\u8fde\u8d2f\uff0c\u8fd9\u662f\u56e0\u4e3a\u7535\u8111\u4f1a\u51c6\u786e\u5730\u663e\u793a\u77ac\u65f6\u7684\u753b\u9762\uff08\u50cf\u662f\u4e00\u53f0\u5feb\u95e8\u901f\u5ea6\u65e0\u9650\u5927\u7684\u76f8\u673a\uff09\uff0c\u6ca1\u6709\u52a8\u6001\u6a21\u7cca\u4f7f\u6d41\u7545\u5ea6\u964d\u4f4e\u3002\u800c\u4f7f\u7528\u76f8\u540c\u5e27\u7387\u7684\u6444\u5f71\u673a\u62cd\u6444\u7269\u4f53\u79fb\u52a8\u65f6\uff0c\u8be5\u573a\u666f\u7684\u89c6\u9891\u5fc5\u5b9a\u4f1a\u8868\u73b0\u6240\u6709\u79fb\u52a8\u7269\u4f53\u5728\u66dd\u5149\u65f6\u95f4\u5185\u6240\u6709\u4f4d\u7f6e\u7684\u5b8c\u6574\u7ec4\u5408\u3002\u56e0\u6b64\u5f88\u591a\u65b0\u4e16\u4ee3\u7535\u73a9\u6e38\u620f\u4ee5\u52a8\u6001\u6a21\u7cca\u4e3a\u7279\u8272\u3002\u5728\u5b9e\u9645\u4f53\u9a8c\u4e2d\uff0c60\u5e27\u76f8\u5bf9\u4e8e30\u5e27\u6709\u7740\u66f4\u597d\u7684\u4f53\u9a8c\u3002<\/p>\n<\/blockquote>\n<p>\u5728app.js\u91cc\u9762\u6211\u4eec\u7528y\u6765\u8868\u73b0\u51fa\u5782\u76f4\u72b6\u6001\u7684\u53d8\u5316<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><\/pre><\/td><td><pre><span><span>function<\/span> animateLogo(){<\/span><br><span>\tTweenMax.fromTo(<span>\"#logo\"<\/span>, <span>2.5<\/span>, {<\/span><br><span>\t\tcss: {<\/span><br><span>\t\t\ty: <span>\"-30px\"<\/span>,<\/span><br><span>\t\t}<\/span><br><span>\t}, {<\/span><br><span>\t\tcss: {<\/span><br><span>\t\t\ty: <span>\"20px\"<\/span>,<\/span><br><span>\t\t},<\/span><br><span><\/span><br><span>\t\trepeat: -<span>1<\/span>,<\/span><br><span>\t\tyoyo: true,<\/span><br><span>\t\tease: Sine.easeInOut,<\/span><br><span>\t});<\/span><br><span>}<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><h2>GPU\u52a0\u901f<\/h2><p>\u4f60\u53ef\u4ee5\u628a\u4e00\u4e2a\u7f51\u9875\u60f3\u8c61\u4e3a\u4e00\u5806\u77e9\u5f62\u3002\u5e03\u5c40\u548c\u7ed8\u56fe\u90fd\u662f\u7531 CPU \u5b8c\u6210\u7684\uff1a<\/p>\n<p>CPU \u8ba1\u7b97\u8fd9\u4e9b\u77e9\u5f62\u7684\u5e03\u5c40\u3002\u77e9\u5f62\u5728\u54ea\u91cc\uff1f\u5b83\u4eec\u6709\u591a\u5927\uff1f<br>CPU \u628a\u77e9\u5f62\u6e32\u67d3\u6210\u70b9\u9635\u4f4d\u56fe\uff08bitmap\uff09\u3002<br>\u4e4b\u540e\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u77e9\u5f62\u88ab\u9001\u5230 GPU \u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u6027\u80fd\uff1a<\/p>\n<p>CPU \u4ee5\u70b9\u9635\u4f4d\u56fe\u7684\u5f62\u5f0f\u4e0a\u4f20\u5230 GPU \u4e2d\u3002<br>CPU \u7ed9 GPU \u53d1\u9001\u6307\u4ee4\u53bb\u5904\u7406\u8fd9\u4e9b\u4f4d\u56fe\u3002\u53ef\u80fd\u6709\u5e73\u79fb\/\u7f29\u653e\/\u65cb\u8f6c\uff0c\u4fee\u6539\u900f\u660e\u5ea6\uff0c\u7b49\u7b49\u3002<br>GPU \u4e3a\u4ec0\u4e48\u6bd4 CPU \u5feb\u5462\uff1f\u5047\u8bbe\u6211\u4eec\u628a\u4e00\u4e2a\u7ea2\u8272\u70b9\u9635\u548c\u4e00\u4e2a\u7eff\u8272\u70b9\u9635\u7ed3\u5408\uff0cCPU \u4e0d\u5f97\u4e0d\u4e00\u4e2a\u4e00\u4e2a\u50cf\u7d20\u5730\u505a.<\/p>\n<p>\u603b\u7684\u6765\u8bf4\uff0c\u5f53\u4fee\u6539 CSS \u5c5e\u6027\u65f6\uff0c\u6709\u4e09\u79cd\u53ef\u80fd\u7684\u5f00\u9500\uff1a<\/p>\n<p>\u91cd\u6392\uff08CPU\u3002\u4ee3\u4ef7\u6700\u9ad8\uff09\u3002<br>\u91cd\u7ed8\uff08CPU\uff09\u3002<br>\u53d8\u6362, \u65cb\u8f6c, \u7f29\u653e, \u900f\u660e\u5ea6\uff08GPU\uff0c\u4ee3\u4ef7\u6700\u4f4e\uff09\u3002<\/p>\n<p>\u56e0\u6b64\u5728\u4f7f\u7528transform\u7684\u65f6\u5019\uff0c \u6211\u4eec\u5e38\u5e38\u7528y\u5728\u8868\u793a\u5782\u76f4\u65b9\u5411\u7684\u79fb\u52a8\uff0c\u8fd9\u4e48\u505a\u662f\u4e0d\u4f1a\u91cd\u65b0\u6392\u5217\u5e03\u5c40\u7684\uff0c \u800c\u662f\u5728\u5c40\u90e8\u4f4d\u7f6e\u504f\u79fb\u3002<\/p>\n<blockquote>\n<p>\u6ce8\u610f\uff1a left \u53ea\u5bf9 position: absolute \u751f\u6548 <\/p>\n<\/blockquote>\n<p>transform \u7684\u539f\u7406\u662f\u7531\u5143\u7d20\u7684\u5b9a\u4f4d\u4f4d\u7f6e\uff08absolute or relative) \u504f\u79fb\u3002<br>\u7528 GreenSocks \u53bb\u4fee\u6539 left \u7684\u8bdd\u662f\u6539\u53d8\u5b9a\u4f4d\u4f4d\u7f6e\u3002<br>\u4e5f\u5c31\u662f\u8bf4 left \u7684\u52a8\u753b\u6539\u53d8\u5e03\u5c40\uff0c\u4f46 transform \u52a8\u753b\u4e0d\u4f1a\u6539\u53d8\u5e03\u5c40\u3002<\/p>\n<h2>\u591a\u6b65\u9aa4\u52a8\u753b<\/h2><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><\/pre><\/td><td><pre><span><span>var<\/span> t = <span>new<\/span> TimelineMax();<\/span><br><span>t.<span>to<\/span>(<span>\"<span>#box<\/span>\"<\/span>,<span>1<\/span>,{<span>x<\/span>: <span>200<\/span>})<\/span><br><span>  .<span>to<\/span>(<span>\"<span>#box<\/span>\"<\/span>,<span>0.5<\/span>,{<span>rotation<\/span>: <span>\"360deg\"<\/span>})<\/span><br><span>  .<span>to<\/span>(<span>\"<span>#box<\/span>\"<\/span>,<span>1<\/span>,{<span>y<\/span>: <span>100<\/span>})<\/span><br><span>  .<span>to<\/span>(<span>\"<span>#box<\/span>\"<\/span>,<span>0.5<\/span>,{<span>rotation<\/span>: <span>\"-=360deg\"<\/span>});<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><h2>\u6307\u793a\u5668(\u6eda\u52a8\u6307\u793a\u6761)<\/h2><p>\u5f53\u7a97\u53e3\u6eda\u52a8\u65f6, \u4f60\u53ef\u4ee5\u7528 window.scrollY \u6765\u7b97\u51fa\u7a97\u53e3\u6b63\u5728\u5c55\u793a\u7684\u662f\u54ea\u4e00\u90e8\u5206\u3002\u90a3\u4e48\u73b0\u5728\u7684\u91cd\u70b9\u5c31\u5728\u4e8e\uff0c \u600e\u6837\u53ef\u4ee5\u83b7\u5f97\u5173\u4e8e\u5143\u7d20\u6240\u5728\u4f4d\u7f6e\uff0c \u9ad8\u5ea6\u7684\u5404\u79cd\u5c5e\u6027\uff0c \u6bd4\u5982<code>scrollY<\/code>, <code>offsetHeight<\/code>, <code>offsetTop<\/code><\/p>\n<ul><li><a href=\"http:\/\/stackoverflow.com\/questions\/6777506\/offsettop-vs-jquery-offset-top\/21880020#21880020\" target=\"_blank\" rel=\"external\">offset\u7684\u5404\u79cd\u7528\u6cd5\u5b9e\u4f8b<\/a><\/li>\n<\/ul><h2>\u53d6\u6d88link\u9ed8\u8ba4\u884c\u4e3a<\/h2><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><\/pre><\/td><td><pre><span><span><span>function<\/span> <span>addSmoothScrolling<\/span>(<span><\/span>)<\/span>{<\/span><br><span>\t<span>var<\/span> links = <span>document<\/span>.querySelectorAll(<span>\"#slider-control a\"<\/span>);<\/span><br><span>\t<span>for<\/span>(<span>var<\/span> i=<span>0<\/span>; i&lt;links.length; i++){<\/span><br><span>\t\t<span>var<\/span> link = links[i];<\/span><br><span>\t\t<span>var<\/span> section = <span>document<\/span>.querySelectorAll(<span>\"div.section\"<\/span>)[i];<\/span><br><span>\t\t(<span><span>function<\/span>(<span>sec<\/span>)<\/span>{<\/span><br><span>\t\t\t<span>\/\/ console.log(sec);<\/span><\/span><br><span>\t\t\tlink.addEventListener(<span>\"click\"<\/span>, <span><span>function<\/span>(<span>e<\/span>)<\/span>{<\/span><br><span>\t\t\t\t<span>\/\/ console.log(sec.offsetTop+\"px\");<\/span><\/span><br><span>\t\t\t\tscrollToElement(sec);<\/span><br><span>\t\t\t\te.preventDefault();<\/span><br><span>\t\t\t})<\/span><br><span>\t\t})(section)<\/span><br><span>\t}<\/span><br><span>}<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>\u9996\u5148\u7528\u4e00\u4e2a\u95ed\u5305\u6765\u4fdd\u8bc1\uff0c \u91cc\u9762\u7684\u51fd\u6570\u5728click\u7684\u65f6\u5019\u624d\u4e4b\u884c\uff0c \u800c\u5728\u90a3\u4e2a\u65f6\u5019\uff0c i \u5df2\u7ecf\u5230\u4e86\u6700\u540e\u4e00\u4e2alink\u7684\u4f4d\u7f6e\uff0c \u6240\u4ee5\u5fc5\u987b\u63d0\u524d\u627e\u5230\u5bf9\u5e94\u7684section\uff0c \u7136\u540e\u5728\u95ed\u5305\u4e2d\u4f20\u5165\u3002 \u540c\u65f6\u9700\u8981\u5728click\u4e8b\u4ef6\u7684\u6700\u540e\u52a0\u4e0a\u4e00\u4e2ae.preventDefault\uff0c \u6765\u963b\u6b62link\u7684\u9ed8\u8ba4\u884c\u4e3a\uff0c link\u7684\u9ed8\u8ba4\u884c\u4e3a\u662f\u76f4\u63a5\u8df3\u8f6c\uff0c \u7136\u540e\u6211\u4eec\u9700\u8981\u52a8\u753b\u6765\u8f85\u52a9\u3002<\/p>"},{"title":"Memory allocation in C","link":"http:\/\/chocoluffy.com\/2016\/01\/26\/Memory-allocation-in-C\/","guid":"http:\/\/chocoluffy.com\/2016\/01\/26\/Memory-allocation-in-C\/","pubDate":"2016-01-26T22:36:34.000Z","categories":["C","\u6280\u672f"],"author":"Shunzhe Yu","thumbnail":"","description":"<p>Learning memory allocation in C for beginners will be totally a pain. This post, distilled from course materials, will provide you a practice guide and example coding snippets to help you learning more and fast in C programming language. It is cherishable, at least to me :)<\/p>","content":"<p>Learning memory allocation in C for beginners will be totally a pain. This post, distilled from course materials, will provide you a practice guide and example coding snippets to help you learning more and fast in C programming language. It is cherishable, at least to me :)<\/p>\n<a><\/a>\n<h2>Introduction to malloc<\/h2><ul><li>Variable defined in function will be stored in stack, so how to use that part of memory after function returns? we use <code>void * malloc(size_t size)<\/code> will allocate memory in heap. This function will remain the memory for the variables until the function explicitly deallocate them. The argument for this function indicates how many bytes of memory should it allocate.<\/li>\n<li>In general, <code>size_t<\/code> is unsigned_int. Notice the <code>void *<\/code> type of the pointer, we know that in C, add 1 to a pointer will go to the next legal address, for <code>int*<\/code>, it is the next integer, for <code>char*<\/code>, it is next character.<\/li>\n<li>A void pointer is a pointer that represent a generic type. It just points to the memory specified, so it do not need to specify right now what type of that memory is, instead, we will declare the type when use pointer:<\/li>\n<\/ul><figure><table><tr><td><pre><span>1<\/span><br><\/pre><\/td><td><pre><span><span>int<\/span> * pt = <span>malloc<\/span>(<span>sizeof<\/span>(<span>int<\/span>));<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>the above code indicates that we will the allocated memory for integer. <\/p>\n<h2>Example code<\/h2><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><span>20<\/span><br><span>21<\/span><br><span>22<\/span><br><span>23<\/span><br><span>24<\/span><br><span>25<\/span><br><span>26<\/span><br><span>27<\/span><br><span>28<\/span><br><span>29<\/span><br><\/pre><\/td><td><pre><span><span>#include &lt;stdio.h&gt;<\/span><\/span><br><span><span>#include &lt;stdlib.h&gt;<\/span><\/span><br><span><\/span><br><span>\/* <\/span><br><span> * <span>Return<\/span> an <span>array<\/span> <span>of<\/span> the squares <span>from<\/span> <span>1<\/span> to max_val.<\/span><br><span> *\/<\/span><br><span><span>int<\/span> *squares(<span>int<\/span> max_val) {<\/span><br><span>    <span>int<\/span> *<span>result<\/span> = malloc(sizeof(<span>int<\/span>) * max_val);<\/span><br><span>    <span>int<\/span> i;<\/span><br><span>    <span>for<\/span> (i = <span>1<\/span>; i &lt;= max_val; i++) {<\/span><br><span>        <span>result<\/span>[i - <span>1<\/span>] = i * i ;<\/span><br><span>    }<\/span><br><span>    <span>return<\/span> <span>result<\/span>;<\/span><br><span>}<\/span><br><span><\/span><br><span><\/span><br><span><span>int<\/span> main() {<\/span><br><span><\/span><br><span>    <span>int<\/span> *squares_to_10 = squares(<span>10<\/span>);<\/span><br><span>    <\/span><br><span>    \/\/ <span>let<\/span>'s print them <span>out<\/span> <\/span><br><span>    <span>int<\/span> i;<\/span><br><span>    <span>for<\/span> (i = <span>0<\/span>; i &lt; <span>10<\/span>; i++) {<\/span><br><span>        printf(<span>\"%d\\t\"<\/span>, squares_to_10[i]);<\/span><br><span>    }<\/span><br><span>    printf(<span>\"\\n\"<\/span>);<\/span><br><span><\/span><br><span>    <span>return<\/span> <span>0<\/span>;<\/span><br><span>}<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>Note that in the above code, there are several variables that are located in heap. They are, the address store inside the variable result, since it points to a integer that lies in heap, while <strong>the addresss of the variable result is not in the heap, it is in the stack<\/strong>. One quick trick is that those value in heap, their address is valid. <\/p>\n<h2>Explicitly deallocate the memory<\/h2><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><span>20<\/span><br><span>21<\/span><br><span>22<\/span><br><span>23<\/span><br><span>24<\/span><br><span>25<\/span><br><span>26<\/span><br><span>27<\/span><br><span>28<\/span><br><\/pre><\/td><td><pre><span><span>#<span>include<\/span> <span>&lt;stdio.h&gt;<\/span><\/span><\/span><br><span><span>#<span>include<\/span> <span>&lt;stdlib.h&gt;<\/span><\/span><\/span><br><span><\/span><br><span><span><span>int<\/span> <span>play_with_memory<\/span><span>()<\/span> <\/span>{<\/span><br><span>    <span>int<\/span> i;<\/span><br><span>    <span>int<\/span> *pt = <span>malloc<\/span>(<span>sizeof<\/span>(<span>int<\/span>));<\/span><br><span><\/span><br><span>    i = <span>15<\/span>;<\/span><br><span>    *pt = <span>49<\/span>;<\/span><br><span>    <\/span><br><span>    <span>\/\/ What happens if you comment out this call to free?<\/span><\/span><br><span>    <span>free<\/span>(pt);<\/span><br><span><\/span><br><span>    <span>\/\/ What happens if you uncomment these statements?<\/span><\/span><br><span>    <span>printf<\/span>(<span>\"%d\\n\"<\/span>, *pt); <span>\/\/ output 49<\/span><\/span><br><span>    *pt = <span>7<\/span>;<\/span><br><span><\/span><br><span>    <span>printf<\/span>(<span>\"%d\\n\"<\/span>, *pt); <span>\/\/ output 7<\/span><\/span><br><span><\/span><br><span>    <span>return<\/span> <span>0<\/span>;<\/span><br><span>}<\/span><br><span><\/span><br><span><span><span>int<\/span> <span>main<\/span><span>()<\/span> <\/span>{<\/span><br><span>    play_with_memory();<\/span><br><span>    play_with_memory();<\/span><br><span>    play_with_memory();<\/span><br><span>    <span>return<\/span> <span>0<\/span>;<\/span><br><span>}<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><blockquote>\n<p>Important issue here: when returned from the function, all variables will be freed from stack, which means that the <code>i<\/code> and <code>result<\/code> in the above code will be removed. It will cause a memory leak if we forget to link the memory from <code>malloc<\/code> to other heap variables. Since there will be no way from elsewhere to access that part of memory.<\/p>\n<\/blockquote>\n<ul><li>The danger of memory leak is that if it accumulates, it will finally cause a <code>out of memory<\/code> issue.<\/li>\n<li>what happens if we print out the value stored in that memory location after we free up that pointer? <strong>Address is still valid and the value can still be accessed, but this time, we are using the part of memory that does not belong to us<\/strong>. Note that using unallocated memory is OK in some cases, but it will be dangerous when that part of memory being reallocated. So, always use allocated memory!<\/li>\n<\/ul><h2>Passing values<\/h2><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><span>20<\/span><br><span>21<\/span><br><span>22<\/span><br><span>23<\/span><br><\/pre><\/td><td><pre><span><span>#<span>include<\/span> <span>&lt;stdio.h&gt;<\/span><\/span><\/span><br><span><span>#<span>include<\/span> <span>&lt;stdlib.h&gt;<\/span><\/span><\/span><br><span><\/span><br><span><span><span>void<\/span> <span>helper<\/span><span>(<span>int<\/span> **arr_matey)<\/span> <\/span>{<\/span><br><span>   <span>\/\/ let's make an array of 3 integers on the heap<\/span><\/span><br><span>   *arr_matey = <span>malloc<\/span>(<span>sizeof<\/span>(<span>int<\/span>) * <span>3<\/span>);<\/span><br><span><\/span><br><span>   <span>int<\/span> *arr = *arr_matey;<\/span><br><span>   arr[<span>0<\/span>] = <span>18<\/span>;<\/span><br><span>   arr[<span>1<\/span>] = <span>21<\/span>;<\/span><br><span>   arr[<span>2<\/span>] = <span>23<\/span>;<\/span><br><span>}<\/span><br><span><\/span><br><span><span><span>int<\/span> <span>main<\/span><span>()<\/span> <\/span>{<\/span><br><span>    <span>int<\/span> *data;<\/span><br><span>    helper(&amp;data);<\/span><br><span><\/span><br><span>    <span>\/\/ let's just access one of them for demonstration<\/span><\/span><br><span>    <span>printf<\/span>(<span>\"the middle value: %d\\n\"<\/span>, data[<span>1<\/span>]);<\/span><br><span><\/span><br><span>    <span>free<\/span>(data);<\/span><br><span>    <span>return<\/span> <span>0<\/span>;<\/span><br><span>}<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><ul><li>there are basically two ways to help to avoid memory leak, a) <strong>return value<\/strong>, if we define that function type to be a pointer type, so that we can return the pointer in order to assign the values in main function. b) <strong>argument<\/strong>, we pass the one we want to assign values to the function and do the assigning part inside that function, and this time, the function type can be void but still finish the task.<\/li>\n<li>However, it is much harder to use <code>argument<\/code> one since in C, the changes inside the function will not be preserved if we return nothing. Therefore, we need to the \u201caddress-value\u201d relation in such scenario \u2013 That is <strong>we pass in pointer, we change value pointed at pointer, without returning anything, and we\u2019re done.<\/strong> While problem comes when we want to change the pointer, say this line <code>*arr_matey = malloc(sizeof(int) * 3);<\/code>, we want to change the pointer now, but such change will not be preserved after function. Therefore, we will need to pass in a <strong>\u201cpoiter of pointer\u201d to deal with pointer assignment!<\/strong> <\/li>\n<\/ul><h2>Nested structure<\/h2><p>if we want to use a nested struture to represent an array, say in that array, each element points to another array, since we don\u2019t know that array size at compilation time, we would use <code>malloc<\/code> to allocate memory for those int array. The code is like<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><\/pre><\/td><td><pre><span><span>int<\/span> ** pt = <span>malloc<\/span>(<span>sizeof<\/span>(<span>int<\/span>*)*<span>2<\/span>);<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>Say, now, I want the pt[0] to hold up an array of one integer, the way to do that is to use:<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><\/pre><\/td><td><pre><span>pt[<span>0<\/span>] = <span>malloc<\/span>(<span>sizeof<\/span>(<span>int<\/span>));<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>Similarly, if we want pt[1] to hold up 3 integers, we would use:<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><\/pre><\/td><td><pre><span>pt[<span>1<\/span>] = <span>malloc<\/span>(<span>sizeof<\/span>(<span>int<\/span>)*<span>3<\/span>);<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><blockquote>\n<p>Note that when we free those pointers, we need to free the innermost pointer first then outer one. <\/p>\n<\/blockquote>\n<p>An complete code example:<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><span>20<\/span><br><span>21<\/span><br><span>22<\/span><br><span>23<\/span><br><span>24<\/span><br><span>25<\/span><br><span>26<\/span><br><span>27<\/span><br><span>28<\/span><br><span>29<\/span><br><span>30<\/span><br><span>31<\/span><br><\/pre><\/td><td><pre><span><span>#<span>include<\/span> <span>&lt;stdio.h&gt;<\/span><\/span><\/span><br><span><span>#<span>include<\/span> <span>&lt;stdlib.h&gt;<\/span><\/span><\/span><br><span><\/span><br><span><span><span>int<\/span> <span>main<\/span><span>()<\/span> <\/span>{<\/span><br><span><\/span><br><span>    <span>\/\/ this allocates space for the 2 pointers<\/span><\/span><br><span>    <span>int<\/span> **pointers = <span>malloc<\/span>(<span>sizeof<\/span>(<span>int<\/span> *) * <span>2<\/span>); <\/span><br><span>    <span>\/\/ the first pointer points to a single integer<\/span><\/span><br><span>    pointers[<span>0<\/span>] = <span>malloc<\/span>(<span>sizeof<\/span>(<span>int<\/span>));<\/span><br><span>    <span>\/\/ the second pointer pointes to an array of 3 integers<\/span><\/span><br><span>    pointers[<span>1<\/span>] = <span>malloc<\/span>(<span>sizeof<\/span>(<span>int<\/span>) * <span>3<\/span>);<\/span><br><span><\/span><br><span>    <span>\/\/ let's set their values<\/span><\/span><br><span>    *pointers[<span>0<\/span>] = <span>55<\/span>;<\/span><br><span><\/span><br><span>    pointers[<span>1<\/span>][<span>0<\/span>] = <span>100<\/span>;<\/span><br><span>    pointers[<span>1<\/span>][<span>1<\/span>] = <span>200<\/span>;<\/span><br><span>    pointers[<span>1<\/span>][<span>2<\/span>] = <span>300<\/span>;<\/span><br><span><\/span><br><span>    <\/span><br><span>    <span>\/\/ do other stuff with this memory<\/span><\/span><br><span><\/span><br><span>    <span>\/\/ now time to free the memory as we are finished with the data-structure<\/span><\/span><br><span>    <span>\/\/ first we need to free the inner pieces<\/span><\/span><br><span>    <span>free<\/span>(pointers[<span>0<\/span>]);<\/span><br><span>    <span>free<\/span>(pointers[<span>1<\/span>]);<\/span><br><span>    <span>\/\/ now we can free the space to hold the array of pointers themselves<\/span><\/span><br><span>    <span>free<\/span>(pointers);<\/span><br><span>    <\/span><br><span>    <span>return<\/span> <span>0<\/span>;<\/span><br><span>}<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><h2>Memory model<\/h2><ul><li>note that th variable in main function does not belong to global variable, indicating it should still go to the stack part. The \u201cglobal data\u201d part contains mainly three stuff: <strong>a) global variables, b) string literals <\/strong> Note that for the string literals, the code like this: <code>char* str = \"Hello world!\";<\/code> can lie in a local function, it just means that the pointer str can be in the stack, while the string literal \u201cHello world!\u201d is in global data part. <\/li>\n<li>And dynamic memory allocation lie in heap.<\/li>\n<\/ul><h2>String<\/h2><ul><li><p>difference between a string and a character is that at the end of string, there is a <code>\\0<\/code> as an ending signal. Once the character array declared, the size is fixed. Note that the difference between these similar version of declaring character array:<\/p>\n<ul><li><code>char string[20] = \"cool shit\"<\/code>, it is defining a <strong>string variable<\/strong>, with a <code>\\0<\/code> at the end of the array, note that there will be a lot of <code>\\0<\/code> following the valid words. It can be changed afterwards.<\/li>\n<li><code>char string[] = \"cool shit\"<\/code>, defining a <strong>string variable<\/strong> the size will be fixed according to the first assignment. It can be changed afterwards.<\/li>\n<li><code>char* string = \"cool shit\"<\/code>, defining a <strong>string constant<\/strong>. it is a string literal! cannot be changed!! If you change the string, it will give a \u201cbus error\u201d. Main point here: <em> <strong>it makes string point to a read-only memory where string literal is stored, while the above two way are indeed allocating memory and copy string to them.<\/strong><\/em><\/li>\n<\/ul><\/li>\n<li><p>difference between <code>strlen<\/code> and <code>sizeof<\/code>. <code>strlen<\/code> will return the valid number of characters before null character, while <code>sizeof<\/code> will just give you the size of whole char array including null characters.<\/p>\n<\/li>\n<li><p>use <code>strncpy<\/code> as a stable counterpart of <code>strcpy<\/code>, the usage is like: <code>strncpy(s1, s2, sizeof(s1));<\/code> see the complete code below, s2 is a string literal. <\/p>\n<\/li>\n<\/ul><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><span>20<\/span><br><\/pre><\/td><td><pre><span><span>#<span>include<\/span> <span>&lt;stdio.h&gt;<\/span><\/span><\/span><br><span><span>#<span>include<\/span> <span>&lt;string.h&gt;<\/span><\/span><\/span><br><span><\/span><br><span><span><span>int<\/span> <span>main<\/span><span>()<\/span> <\/span>{<\/span><br><span>    <span>char<\/span> s1[<span>5<\/span>];<\/span><br><span>    <span>char<\/span> s2[<span>32<\/span>] = <span>\"University of\"<\/span>;<\/span><br><span><\/span><br><span>    <span>\/\/ This is unsafe because s1 may not have enough space<\/span><\/span><br><span>    <span>\/\/ to hold all the characters copied from s2.<\/span><\/span><br><span>    <span>\/\/strcpy(s1, s2);<\/span><\/span><br><span><\/span><br><span>    <span>\/\/ This doesn't necessarily null-terminate s1 if there isn't space.<\/span><\/span><br><span>    <span>strncpy<\/span>(s1, s2, <span>sizeof<\/span>(s1));<\/span><br><span>    <span>\/\/ So we explicitly terminate s1 by setting a null-terminator.<\/span><\/span><br><span>    s1[<span>4<\/span>] = <span>'\\0'<\/span>;<\/span><br><span><\/span><br><span>    <span>printf<\/span>(<span>\"%s\\n\"<\/span>, s1);<\/span><br><span>    <span>printf<\/span>(<span>\"%s\\n\"<\/span>, s2);<\/span><br><span>    <span>return<\/span> <span>0<\/span>;<\/span><br><span>}<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><blockquote>\n<p>Note that s1 is a character array, which means that there is no null characters at the end. if we want to do this way, we want to add null character at the end.<\/p>\n<\/blockquote>\n<ul><li>Similarly, <code>strncat(s1, s3, sizeof(s1)-strlen(s1)-1);<\/code> is the stable version of using strcpy.<\/li>\n<li><code>char * strchr(const char s, int c);<\/code> return the index at the first occurence of the character<\/li>\n<li><code>char * strstr(const char* s1, const char* s2);<\/code> find sub string. see the code example below:<\/li>\n<\/ul><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><span>20<\/span><br><span>21<\/span><br><span>22<\/span><br><span>23<\/span><br><span>24<\/span><br><\/pre><\/td><td><pre><span><span>#<span>include<\/span> <span>&lt;stdio.h&gt;<\/span><\/span><\/span><br><span><span>#<span>include<\/span> <span>&lt;string.h&gt;<\/span><\/span><\/span><br><span><\/span><br><span><span><span>int<\/span> <span>main<\/span><span>()<\/span> <\/span>{<\/span><br><span>    <span>char<\/span> s1[<span>30<\/span>] = <span>\"University of C Programming\"<\/span>;<\/span><br><span>    <span>char<\/span> *p;<\/span><br><span><\/span><br><span>    <span>\/\/ find the index of the first 'v'<\/span><\/span><br><span>    p = <span>strchr<\/span>(s1, <span>'v'<\/span>);<\/span><br><span>    <span>if<\/span> (p == <span>NULL<\/span>) {<\/span><br><span>        <span>printf<\/span>(<span>\"Character not found\\n\"<\/span>);<\/span><br><span>    } <span>else<\/span> {<\/span><br><span>        <span>printf<\/span>(<span>\"Character found at index %ld\\n\"<\/span>, p - s1);<\/span><br><span>    }<\/span><br><span><\/span><br><span>    <span>\/\/ find the first token (up to the first space)<\/span><\/span><br><span>    p = <span>strchr<\/span>(s1, <span>' '<\/span>);<\/span><br><span>    <span>if<\/span> (p != <span>NULL<\/span>) {<\/span><br><span>        *p = <span>'\\0'<\/span>;<\/span><br><span>    }<\/span><br><span>    <span>printf<\/span>(<span>\"%s\\n\"<\/span>, s1);<\/span><br><span><\/span><br><span>    <span>return<\/span> <span>0<\/span>;<\/span><br><span>}<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>if the character specified in the second argument cannot find the right place, then it will assign NULL to p in this case. We can use pointer subtraction to get the index. <\/p>\n<blockquote>\n<p>\u540e\u8bb0\uff1a \u6b22\u8fce\u52a0\u5165\u6211\u7684\u79c1\u4eba\u516c\u4f17\u53f7\uff0c \u548c\u4f60\u5206\u4eab\u6211\u601d\u8003\u7684\u89c2\u70b9\u548c\u6587\u7ae0\uff1a<br><img src=\"http:\/\/ww2.sinaimg.cn\/large\/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg\" alt=\"\u516c\u4f17\u53f7\u4e8c\u7ef4\u7801\"><\/p>\n<\/blockquote>"},{"title":"\u8c61\u5f81\u4e0e\u7b26\u53f7","link":"http:\/\/chocoluffy.com\/2016\/01\/23\/%E8%B1%A1%E5%BE%81%E4%B8%8E%E7%AC%A6%E5%8F%B7\/","guid":"http:\/\/chocoluffy.com\/2016\/01\/23\/\u8c61\u5f81\u4e0e\u7b26\u53f7\/","pubDate":"2016-01-24T04:05:53.000Z","categories":["\u793e\u4f1a\u4eba\u7269","\u8bfb\u4e66\u7b14\u8bb0","\u539f\u521b"],"author":"Shunzhe Yu","thumbnail":"","description":"<p>\u662f\u4ec0\u4e48\uff0c \u5728\u6d41\u8840\u3002<\/p>","content":"<p>\u662f\u4ec0\u4e48\uff0c \u5728\u6d41\u8840\u3002<\/p>\n<a><\/a>\n<p><img src=\"http:\/\/ww2.sinaimg.cn\/large\/c5ee78b5gw1f0agj99z92j20zk0zkajv.jpg\" alt=\"mirror\"><\/p>\n<p>\u6bcf\u4e00\u4e2a\u523a\u8033\u7684\u53cd\u5bf9\u58f0\u97f3\uff0c \u90fd\u5f88\u5bb9\u6613\u88ab\u770b\u4f5c\u662f\u4e00\u79cd\u8c61\u5f81\uff0c \u4e0e\u5176\u8bf4\u662f\u81ea\u613f\u5730\u8d70\u4e0a\u98ce\u53e3\u6d6a\u5c16\uff0c \u4e0d\u5982\u8bf4\uff0c \u662f\u5728\u5927\u4f17\u7684\u72c2\u6b22\u548c\u5e7b\u60f3\u610f\u6deb\u91cc\u6f14\u53d8\u4e3a\u4e00\u573a\u620f\u5267\u5f0f\u7684\u5251\u62d4\u5f29\u5f20\u3002 \u4eba\u4eec\u5a31\u4e50\u7740\uff0c \u6d88\u9063\u7740\uff0c \u50cf\u662f\u6709\u4e86\u5c06\u5e05\u6302\u9760\u7740\u7684\u5c0f\u5175\u8086\u610f\u5730\u6311\u9017\u7740\u5bf9\u624b\u7684\u795e\u7ecf\uff0c \u5168\u7136\u4e0d\u89c9\u8bed\u6c14\u91cc\u7684\u50b2\u6162\u4e0e\u80a4\u6d45\u3002 \u67aa\u53e3\u6700\u540e\u8fd8\u662f\u8d70\u706b\u4e86\uff0c \u4e0d\u8fc7\u770b\u70ed\u95f9\u7684\u5c0f\u5175\u65e9\u5df2\u4f5c\u9e1f\u517d\u6563\uff0c \u7559\u4e0b\u66fe\u7ecf\u5e02\u4e95\u8d77\u4e49\u9010\u6e10\u80cc\u79bb\u521d\u8877\u7684\u5c06\u5e05\uff0c \u5728\u4e00\u7247\u54c0\u53f9\u4e2d\uff0c \u4ed8\u51fa\u6c89\u91cd\u7684\u4ee3\u4ef7\u3002<\/p>\n<p>\u5173\u4e8e\u67e5\u7406\u5468\u520a\u7684\u4e8b\u60c5\uff0c \u6211\u60f3\u8bd5\u7740\u4ece\u4e00\u4e2a\u4e0d\u90a3\u4e48\u4e3b\u6d41\uff0c \u4f46\u662f\u4ecd\u7136\u5f88\u6709\u8da3\u7684\u89d2\u5ea6\u53bb\u60f3\uff0c \u7a76\u7adf\u4ec0\u4e48\u662f\u8c61\u5f81\uff0c \u662f\u4ec0\u4e48\u63a8\u52a8\u4e86\u51fa\u73b0\u8c61\u5f81\u6027\u3002\u662f\u4ec0\u4e48\u8ba9\u8fd9\u79cd\u5448\u73b0\u548c\u4ee3\u8868\u53d8\u5f97\u8e81\u52a8\u4e0d\u5b89\u53c8\u96be\u4ee5\u6297\u62d2\u3002 \u53c8\u662f\u4ec0\u4e48\uff0c \u5728\u6d41\u8840\u3002<\/p>\n<p>\u9996\u5148\u5f15\u8d77\u6211\u6ce8\u610f\u7684\u662f\u8fd9\u51e0\u53e5\u8bdd<\/p>\n<ul><li>\u201c\u4e00\u79cd\u6c89\u91cd\u7684\u8c61\u5f81\u4e3b\u4e49\u7684\u91cd\u91cf\u2014\u2014\u539f\u672c\u5e76\u4e0d\u5b58\u5728\u4e8e\u6211\u4eec\u7684\u6f2b\u753b\u4e2d\uff0c\u4e5f\u79bb\u6211\u4eec\u5f88\u8fdc\u7684\u4e1c\u897f\uff0c\u73b0\u5728\u843d\u5728\u4e86\u6211\u4eec\u7684\u80a9\u4e0a\u3002\u201d<\/li>\n<li>\u201c\u5b9e\u9645\u4e0a\uff0c\u300a\u67e5\u7406\u5468\u520a\u300b\u4e00\u76f4\u4ee5\u6765\u90fd\u81f4\u529b\u4e8e\u53cd\u5bf9\u8c61\u5f81\u4e3b\u4e49\uff1a\u6211\u4eec\u6467\u6bc1\u7b26\u53f7\uff0c\u6253\u7834\u7981\u5fcc\uff0c\u5c06\u90a3\u4e9b\u5e7b\u60f3\u7684\u6ce1\u6cab\u7834\u706d\u3002\u6211\u4eec\u5f88\u9ad8\u5174\u770b\u5230\u4eba\u4eec\u7ed9\u4e88\u300a\u67e5\u7406\u5468\u520a\u300b\u652f\u6301\uff0c\u4f46\u540c\u65f6\u4ed6\u4eec\u7684\u505a\u6cd5\u5374\u8ddf\u300a\u67e5\u7406\u5468\u520a\u300b\u7684\u521d\u8877\u80cc\u9053\u800c\u9a70\u3002\u201d<\/li>\n<li>\u201c\u4efb\u4f55\u610f\u4e49\u7684\u8c61\u5f81\u4e3b\u4e49\u90fd\u80fd\u88ab\u4efb\u4f55\u4eba\u5229\u7528\u8d77\u6765\u505a\u4ed6\u4eec\u60f3\u505a\u7684\u4e8b\u3002\u201d<\/li>\n<\/ul><p>\u6211\u63a5\u7740\u8054\u60f3\u5230\u7684\u662f\uff0c \u5f88\u4e45\u4e4b\u524d\u7684\u4e00\u4e2a\u5927\u65b0\u95fb\uff0c \u6234\u5b89\u5a1c\u738b\u5983\u4e4b\u6b7b\u3002 \u5982\u679c\u5927\u5bb6\u8fd8\u6709\u5370\u8c61\uff0c \u5f53\u65f6\u90a3\u4e2a\u8f66\u7978\u53d1\u751f\u4e4b\u540e\u7684\u51e0\u5929\uff0c \u662f\u63a5\u8e35\u800c\u6765\u7684\u94fa\u5929\u76d6\u5730\u5173\u4e8e\u90aa\u6076\u7684\u5c0f\u62a5\u8bb0\u8005\u7684\u8bc4\u8bba\uff0c \u5927\u5bb6\u6307\u8d23\u90a3\u4e9b\u8ffd\u9010\u5728\u738b\u5983\u8eab\u540e\u7684\u72d7\u4ed4\u8bb0\u8005\u4eec\uff0c \u8ba4\u4e3a\u4ed6\u4eec\u624b\u4e0a\u6cbe\u6ee1\u4e86\u9c9c\u8840\uff0c \u8981\u5bf9\u516c\u4f17\u5fc3\u4e2d\u90a3\u4e2a\u9ad8\u8d35\u4f18\u96c5\u7684\u6234\u5b89\u5a1c\u738b\u5983\u7684\u4e8b\u6545\u8d1f\u4e0a\u4e0d\u53ef\u63a8\u5378\u7684\u8d23\u4efb\u3002 \u7136\u800c\u5982\u679c\u4ed4\u7ec6\u63a8\u6572\uff0c \u6e34\u671b\u6ce8\u89c6\u6234\u5b89\u5a1c\u738b\u5983\u9ad8\u8d35\u800c\u4f18\u96c5\u7684\u5f62\u8c61\uff0c \u53c8\u5728\u5176\u9668\u706d\u4e4b\u65f6\u6e34\u6c42\u5b89\u6170\u7684\uff0c \u7a76\u7adf\u662f\u90a3\u4e9b\u52aa\u529b\u6316\u6398\u201c\u9690\u79c1\u201d\u7684\u5c0f\u62a5\uff0c \u8fd8\u662f\u62e5\u6709\u7740\u7aa5\u89c6\u4ed6\u4eba\u751f\u6d3b\u7684\u8fd9\u4e2a\u6216\u8bb8\u8c08\u4e0d\u4e0a\u5f31\u70b9\u7684\u672c\u80fd\u7684\u5927\u4f17\u5462\uff1f\u800c\u90a3\u4e9b\u72d7\u4ed4\u5c0f\u62a5\uff0c \u6216\u8bb8\u53ea\u662f\u5e02\u573a\u7684\u4ea7\u7269\uff0c \u53ea\u662f\u4eba\u4eec\u613f\u610f\u7aa5\u89c6\uff0c \u54ea\u6015\u53ea\u662f\u5bf9\u4ed6\u4eba\u751f\u6d3b\u7684\u4e00\u79cd\u4e0d\u6076\u610f\u7684\u5173\u5fc3\u7684\u8c61\u5f81\u3002 \u800c\u4e00\u65e6\u9876\u4e0a\u4e86\u8c61\u5f81\u7684\u5934\u8854\uff0c \u4e5f\u5bb9\u6613\u5728\u4e07\u4f17\u6ce8\u89c6\u4e0b\u6210\u4e3a\u7b14\u4f10\u53e3\u8bdb\u7684\u5bf9\u8c61\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c \u5f88\u53ef\u80fd\u662f\u4eba\u4eec\u8fd9\u79cd\u4e0d\u5fc5\u7136\u5177\u5907\u6076\u610f\u7684\u6b32\u671b\uff0c \u4fc3\u6210\u4e86\u90a3\u79cd\u201c\u6709\u5bb3\u201d\u7684\u5c0f\u62a5\u548c\u4ee4\u4eba\u4eec\u8ba8\u538c\u7684\u72d7\u4ed4\u8bb0\u8005\u3002<\/p>\n<p>\u542c\u4e0a\u53bb\u633a\u201c\u6096\u8bba\u201d\u7684\uff0c \u4e3a\u4ec0\u4e48\u660e\u660e\u662f\u4e0d\u5fc5\u7136\u6076\u610f\u7684\u4e1c\u897f\uff0c \u4f1a\u884d\u751f\u51fa\u6709\u5bb3\u7684\u7ed3\u679c\u3002 \u800c\u4e3a\u4ec0\u4e48\uff0c \u4e3b\u89d2\u90fd\u662f\u4f20\u5a92\u5a92\u4f53\uff0c \u90fd\u662f\u4f20\u64ad\u8005\u3002<\/p>\n<p>\u4eba\u4eec\u996d\u524d\u8336\u540e\u7684\u8c08\u8d44\uff0c \u81ea\u53e4\u653e\u8086\u5f97\u751a\u81f3\u6709\u70b9\u611a\u8822\u670b\u514b\u7684\u6cd5\u5f0f\u5e7d\u9ed8\uff0c \u53c8\u771f\u5f97\u80fd\u7ecf\u53d7\u5f97\u4f4f\u5a92\u4f53\u653e\u5927\u5668\u822c\u7684\u4f20\u64ad\u5417\uff1f\u5a92\u4f53\u5f80\u5f80\u662f\u8a00\u8bba\u81ea\u7531\u548c\u65b0\u95fb\u81ea\u7531\u7684\u8c61\u5f81\u548c\u7b26\u53f7\u3002 \u7f8e\u56fd\u5baa\u6cd5\u53f2\u4e0a\u597d\u51e0\u6b21\u6700\u7cbe\u5f69\u7684\u5224\u51b3\u548c\u5ba3\u5224\u90fd\u548c\u8a00\u8bba\u81ea\u7531\u6709\u5173\uff0c \u800c\u5173\u4e8e\u65b0\u95fb\u81ea\u7531\u548c\u6d89\u53ca\u201c\u6240\u8c13\u7684\u653f\u5e9c\u5185\u5e55\u7684\u95f4\u8c0d\u7f6a\u201d\u4e4b\u95f4\u7684\u4e89\u8bba\u4e5f\u4e00\u76f4\u4e0d\u4f1a\u505c\u6b62\u3002 \u4eba\u4eec\u4e0d\u5e0c\u671b\u53d7\u5230\u6076\u610f\u8a00\u8bba\u6240\u56f0\uff0c \u5374\u53c8\u754f\u60e7\u5728\u4efb\u4f55\u5f62\u5f0f\u4e0a\u7684\u7981\u6b62\u548c\u538b\u8feb\u4e0a\u8d70\u5f97\u66f4\u8fdc\u3002 \u800c\u5a92\u4f53\uff0c \u5219\u66f4\u50cf\u4e00\u4e2a\u6269\u97f3\u5668\uff0c \u65e0\u8bba\u662f\u79ef\u6781\u8fd8\u662f\u6d88\u6781\u7684\u5f71\u54cd\u90fd\u4f1a\u88ab\u65bd\u52a0\u4e0a\u4ee4\u4eba\u5598\u4e0d\u8fc7\u6c14\u7684\u538b\u8feb\u529b\u3002 \u4e00\u4e2a\u6211\u80fd\u60f3\u5230\u7684\u7406\u7531\uff0c \u7136\u800c\u5e76\u4e0d\u65b0\u9c9c\uff0c \u662f\u66f4\u591a\u7684\u4eba\u4eec\u504f\u7231\u5251\u62d4\u5f29\u5f20\u591a\u8fc7\u9c9c\u82b1\u638c\u58f0\uff0c \u53cd\u5bf9\u548c\u523a\u8033\uff0c \u5e26\u7740\u5f20\u7740\u8840\u6c14\u7684\u773c\u795e\uff0c \u6bd4\u51b7\u9759\u548c\u65e0\u4e3a\u66f4\u4e3a\u523a\u6fc0\u548c\u723d\u611f\u3002 \u800c\u5a92\u4f53\uff0c \u53ea\u662f\u4e00\u6b21\u6b21\u8f6c\u53d1\u4f20\u9012\u7684\u60c5\u611f\u7d2f\u79ef\uff0c \u53ea\u662f\u5728\u4e00\u573a\u573a\u4eba\u7fa4\u7684\u72c2\u6b22\u4e2d\u90a3\u4e2a\u70ed\u6c14\u671d\u5929\u7684\u5e7f\u573a\uff0c \u6ca1\u6709\u4e86\u4eba\u7fa4\uff0c \u6ca1\u6709\u4e86\u5486\u54ee\uff0c \u4e5f\u5c31\u6ca1\u6709\u5b83\u672c\u8eab\u5b58\u5728\u7684\u610f\u4e49\u3002<\/p>\n<p>\u4eba\u4eec\u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u672c\u80fd\u548c\u6b32\u671b\u4e2d\u6ce8\u89c6\u5230\u8bb8\u591a\u8c61\u5f81\u7684\u7f18\u7531\u3002 \u6216\u8bb8\u8c61\u5f81\u672c\u8eab\uff0c \u5c31\u662f\u4eba\u4eec\u6240\u529b\u6240\u4e0d\u53ca\u5374\u663c\u591c\u75f4\u72c2\u7684\u4e00\u79cd\u7fa4\u4f53\u8bb0\u5fc6\u5427\u3002\u800c\u6ca1\u6709\u4e86\u56de\u54cd\uff0c \u4e5f\u5c31\u6ca1\u6709\u4e86\u610f\u4e49\u3002<\/p>\n<blockquote>\n<p>\u540e\u8bb0\uff1a \u8fd9\u7bc7\u6587\u7ae0\u7684\u5927\u90e8\u5206\u6784\u67b6\u662f\u6211\u5728\u7b49\u5730\u94c1\u7684\u65f6\u5019\u5076\u7136\u60f3\u5230\u7684\u3002 \u7f18\u4e8e\u8bfb\u4e66\u5c0f\u7ec4\u7684\u4e00\u6b21\u4e3b\u9898\u8ba8\u8bba\uff0c \u770b\u5230\u670b\u53cb\u5206\u4eab\u7684\u4e00\u7bc7\u6587\u7ae0\uff0c \u7531\u4e00\u4e9b\u53ea\u8a00\u7247\u8bed\u6240\u542f\u53d1\u6240\u5f15\u6765\u7684\u4e00\u5806\u80e1\u601d\u4e71\u60f3\u3002 \u6216\u8bb8\u6211\u53ef\u4ee5\u5199\u5f97\u66f4\u52a0\u8be6\u7ec6\u4e00\u70b9\uff0c \u4f46\u662f\u53ef\u80fd\u5927\u5bb6\u5728\u81ea\u5df1\u601d\u8003\u7684\u65f6\u5019\u7684\u6240\u601d\u6240\u60f3\u4e5f\u5df2\u8fdc\u8d85\u8fc7\u6211\u7684\u6587\u7b14\u548c\u89c1\u89e3\uff0c \u591a\u4e00\u4e9b\u4f59\u5730\uff0c \u4e5f\u591a\u4e00\u4e9b\u56de\u54cd\u7684\u7a7a\u95f4\u561b\u3002\u8d81\u5468\u672b\u7684\u65f6\u5019\u5199\u70b9\u6587\u5b57\u7684\u611f\u89c9\u8fd8\u662f\u6781\u597d\u7684\uff0c \u671b\u575a\u6301\uff01\u6700\u540e\uff0c \u672c\u6587\u4e2d\u5173\u4e8e\u6234\u5b89\u5a1c\u738b\u5983\u7684\u4f8b\u5b50\u9610\u8ff0\uff0c \u4e5f\u662f\u542f\u53d1\u4e8e\u4ee5\u524d\u770b\u5230\u7684\u5317\u5927\u6cd5\u5b66\u7cfb\u82cf\u529b\u6559\u6388\u5173\u4e8e\u9690\u79c1\u6743\u7684\u63a2\u8ba8\uff0c \u800c\u90a3\u4e9b\u6458\u5f55\u7684\u53e5\u5b50\uff0c \u6765\u6e90\u4e8e\u4e0b\u9762\u8fd9\u7bc7\u670b\u53cb\u8f6c\u53d1\u7684\u6587\u7ae0\u3002\u9644\u4e0a\u6211\u6240\u53c2\u8003\u7684\u6587\u7ae0\u539f\u6587\u3002<\/p>\n<\/blockquote>\n<h2>\u300a\u67e5\u7406\u5468\u520a\u300b\u5e78\u5b58\u8005\u4e13\u8bbf\uff1a\u6211\u4eec\u4e0d\u662f\u4e00\u79cd\u8c61\u5f81\uff0c\u6211\u4eec\u53ea\u662f\u4e00\u672c\u7b80\u5355\u7684\u6f2b\u753b<\/h2><p>\u5f53\u5730\u65f6\u95f41\u67087\u65e5\uff0c\u6cd5\u56fd\u6f2b\u753b\u6742\u5fd7\u300a\u67e5\u7406\u5468\u520a\u300b\u7a81\u906d\u6050\u6016\u5206\u5b50\u6301\u67aa\u88ad\u51fb\uff0c\u9020\u621012\u4eba\u6b7b\u4ea1\uff0c11\u4eba\u53d7\u4f24\u3002\u9047\u96be\u8005\u4e2d\u5305\u62ec\u6742\u5fd7\u793e\u4e94\u540d\u91cd\u8981\u7684\u6f2b\u753b\u5bb6\u4ee5\u53ca\u4e24\u540d\u8b66\u5bdf\u3002\u9762\u5bf9\u8fd9\u6837\u7684\u66b4\u884c\uff0c\u201cJe suis Charlie\u201d\uff08\u6211\u662f\u67e5\u7406\uff09\u6210\u4e3a\u4e86\u4e00\u53e5\u53e3\u53f7\uff0c\u4e00\u9762\u5ba3\u626c\u4fdd\u62a4\u8a00\u8bba\u81ea\u7531\u3001\u62b5\u5236\u6050\u6016\u4e3b\u4e49\u7684\u65d7\u5e1c\u3002<\/p>\n<p>Luz\u5728\u300a\u67e5\u7406\u5468\u520a\u300b\u5de5\u4f5c\u4e8620\u5e74\u30021\u67087\u65e5\u662f\u4ed6\u7684\u751f\u65e5\uff0c\u56e0\u6b64\u4ed6\u5728\u5f53\u5929\u65e9\u4e0a\u5728\u300a\u67e5\u7406\u5468\u520a\u300b\u6742\u5fd7\u793e\u603b\u90e8\u53ec\u5f00\u7684\u6bcf\u5468\u7f16\u8f91\u4f1a\u8bae\u4e0a\u8fdf\u5230\u4e86\uff0c\u56e0\u6b64\u9003\u8fc7\u4e00\u52ab\u3002\u73b0\u5728\u4ed6\u540c\u5176\u4ed6\u7684\u5e78\u5b58\u8005\u4e00\u8d77\u5728\u4e3a1\u670814\u65e5\u53d1\u884c\u7684\u4e0b\u4e00\u671f\u300a\u67e5\u7406\u5468\u520a\u300b\u505a\u51c6\u5907\uff0c\u8fd9\u4e00\u671f\u6f2b\u753b\u5c06\u5370\u5237100\u4e07\u4efd\u3002\u5728\u8fd9\u4efd\u65b0\u7684\u6742\u5fd7\u4e2d\uff0cLuz\u548c\u4ed6\u7684\u540c\u4e8b\u4eec\u5c06\u5728\u6f2b\u753b\u4e2d\u63cf\u8ff0\u8fd9\u5468\u65e5\u7684\u5171\u548c\u56fd\u5927\u6e38\u884c\u3002\u5728\u6050\u6016\u5206\u5b50\u6740\u6b7b\u4e86\u4ed6\u7684\u670b\u53cb\uff0c\u4ed6\u7684\u5bfc\u5e08\uff0c\u4ed6\u7684\u4eb2\u4eba\u4e4b\u540e\uff0cLuz\u5411\u8bb0\u8005\u8bb2\u8ff0\u4e86\u4ed6\u7684\u6124\u6012\uff0c\u4ed6\u7684\u6050\u60e7\uff0c\u4ed6\u7684\u6000\u7591\u3002\u76ee\u524d\u60b2\u75db\u6b32\u7edd\u7684\u4ed6\u4e0d\u80fd\u786e\u5b9a\u57281\u67087\u65e5\u7684\u60b2\u5267\u4e4b\u540e\u4ed6\u662f\u5426\u8fd8\u80fd\u7ee7\u7eed\u753b\u4e0b\u53bb\u3002<\/p>\n<p>\u8bb0\u8005\uff1a\u4e0b\u5468\u4e09\u7684\u300a\u67e5\u7406\u5468\u520a\u300b\u7684\u5185\u5bb9\u5c06\u662f\u5f88\u654f\u611f\u7684\u56fd\u5bb6\u4e0e\u653f\u6cbb\u95ee\u9898\u3002\u5728\u76ee\u524d\u8fd9\u79cd\u4e0d\u7a33\u5b9a\u7684\u5c40\u52bf\u4e0b\uff0c\u4f60\u4eec\u4e3a\u4ec0\u4e48\u8981\u627f\u62c5\u8d77\u8fd9\u6837\u7684\u8d23\u4efb\u5462\uff1f<\/p>\n<p>Luz\uff1a\u5f53\u6211\u6700\u521d\u62ff\u8d77\u753b\u7b14\u7684\u65f6\u5019\uff0c\u6211\u5e76\u4e0d\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4ef6\u5371\u9669\u7684\u4e8b\uff0c\u6211\u4eec\u8ba4\u4e3a\u6211\u4eec\u53ea\u662f\u753b\u51fa\u7c7b\u4f3c\u6ed1\u7a3d\u7684\u7c73\u8001\u9f20\u7684\u4e1c\u897f\u800c\u5df2\u3002\u4f46\u73b0\u5728\uff0c\u5728\u6b7b\u4ea1\uff0c\u67aa\u51fb\uff0c\u66b4\u529b\u4e4b\u540e\uff0c\u4e00\u5207\u90fd\u6539\u53d8\u4e86\u3002\u6240\u4ee5\u7684\u76ee\u5149\u90fd\u805a\u7126\u5728\u6211\u4eec\u8eab\u4e0a\uff0c\u6211\u4eec\u73b0\u5728\u6210\u4e86\u4e00\u4e2a\u8c61\u5f81\uff0c\u5c31\u50cf\u6211\u4eec\u753b\u51fa\u6765\u7684\u6f2b\u753b\u4e00\u6837\u3002\u300a\u4eba\u9053\u62a5\u300bHumanit\u00e9 \u5c06\u300a\u67e5\u7406\u5468\u520a\u300b2015\u5e741\u67087\u53f7\u520a\u7684\u4f5c\u5bb6Houellebecq\u6f2b\u753b\u50cf\u4f5c\u4e3a\u5c01\u9762\uff0c\u5e76\u914d\u4e0a\u5934\u6761\u6807\u9898\u201c\u81ea\u7531\u5df2\u88ab\u8c0b\u6740\u201d\uff0c\u83ab\u5927\u7684\u8bbd\u523a\u3002\u4e00\u79cd\u6c89\u91cd\u7684\u8c61\u5f81\u4e3b\u4e49\u7684\u91cd\u91cf\u2014\u2014\u539f\u672c\u5e76\u4e0d\u5b58\u5728\u4e8e\u6211\u4eec\u7684\u6f2b\u753b\u4e2d\uff0c\u4e5f\u79bb\u6211\u4eec\u5f88\u8fdc\u7684\u4e1c\u897f\uff0c\u73b0\u5728\u843d\u5728\u4e86\u6211\u4eec\u7684\u80a9\u4e0a\u3002<\/p>\n<p>\u300a\u67e5\u7406\u5468\u520a\u300b1\u67087\u53f7\u520a\uff0c\u521a\u51fa\u65b0\u4f5c\u300a\u5c48\u670d\u300b\u7684Houellebecq\u767b\u4e0a\u5c01\u9762\uff0c\u4e66\u4e2d\u60f3\u8c61\u4e862022\u5e74\u4f0a\u65af\u5170\u5316\u4e86\u7684\u6cd5\u56fd\u3002<\/p>\n<p>\u8bb0\u8005\uff1a\u60a8\u6240\u8bf4\u7684\u201c\u8c61\u5f81\u4e3b\u4e49\u7684\u91cd\u91cf\u201d\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1f<\/p>\n<p>Luz: 2007\u5e74\uff0c\u5f53\u4e39\u9ea6\u62a5\u7eb8Jyllands-Posten\u628a\u4e00\u7cfb\u5217\u7a46\u7f55\u9ed8\u5fb7\u7684\u6f2b\u753b\u520a\u767b\u51fa\u6765\u4e4b\u540e\uff0c\u6211\u4eec\u88ab\u770b\u6210\u662f\u4e3a\u5a92\u4f53\u8a00\u8bba\u81ea\u7531\u6297\u4e89\u7684\u9ebb\u70e6\u5236\u9020\u8005\u6216\u662f\u52c7\u6562\u7684\u767d\u8863\u9a91\u58eb\u3002\u57282011\u5e74\uff0c\u5f53\u6211\u4eec\u7684\u529e\u516c\u5ba4\u88ab\u71c3\u70e7\u5f39\u653b\u51fb\u65f6\uff0c\u6211\u4eec\u518d\u4e00\u6b21\u88ab\u770b\u4f5c\u662f\u767d\u8863\u9a91\u58eb\u30022012\u5e74\uff0c\u4e00\u90e8\u5173\u4e8e\u7a46\u65af\u6797\u7684\u559c\u5267\u7535\u5f71\u4e0a\u6620\uff08\u7a46\u65af\u6797\u7684\u65e0\u77e5\uff09\uff0c\u5f53\u65f6\u6211\u4eec\u628a\u8fd9\u90e8\u7535\u5f71\u753b\u6210\u4e86\u76f8\u5173\u7684\u6f2b\u753b\uff0c\u5f97\u5230\u4e86\u76f8\u540c\u7684\u56de\u5e94\uff1a\u6211\u4eec\u518d\u4e00\u6b21\u6210\u4e3a\u4e86\u5371\u9669\u7684\u9ebb\u70e6\u5236\u9020\u8005\uff0c\u753b\u51fa\u5371\u9669\u7684\u6f2b\u753b\u5bfc\u81f4\u6cd5\u56fd\u9886\u4e8b\u9986\u5173\u95ed\u3001\u5bfc\u81f4\u5728\u56fd\u5916\u7684\u6cd5\u56fd\u4eba\u627f\u62c5\u6050\u60e7\u7684\u9ebb\u70e6\u5236\u9020\u8005\u3002\u5f53\u5168\u7403\u90fd\u56e0\u6b64\u5904\u4e8e\u6050\u614c\u4e4b\u4e2d\u65f6\uff0c\u6211\u4eec\u53ea\u662f\u8be5\u6b7b\u7684\u4e00\u672c\u53d7\u5927\u4f17\u559c\u7231\u7684\u6742\u5fd7\u800c\u5df2\u3002\u8fd9\u672c\u6742\u5fd7\u6210\u4e3a\u4e86\u56fd\u5bb6\u3001\u56fd\u9645\u7684\u8c61\u5f81\uff0c\u4f46\u662f\uff0c\u88ab\u6740\u6b7b\u7684\u662f\u201c\u4eba\u201d\uff0c\u4e0d\u662f\u201c\u8a00\u8bba\u81ea\u7531\u201d\uff01\u662f\u90a3\u4e9b\u5750\u5728\u529e\u516c\u5ba4\u91cc\u753b\u6f2b\u753b\u7684\u4eba\u3002<\/p>\n<p>\u8bb0\u8005\uff1a\u4f60\u7684\u610f\u601d\u662f\u8bf4\u6f2b\u753b\u7684\u672c\u8d28\u6539\u53d8\u4e86\u5417\uff1f<\/p>\n<p>Luz\uff1a\u81ea\u4ece\u6211\u4eec\u5f00\u59cb\u753b\u6709\u5173\u7a46\u7f55\u9ed8\u5fb7\u7684\u6f2b\u753b\u5f00\u59cb\uff0c\u6f2b\u753b\u201c\u4e0d\u627f\u62c5\u8d23\u4efb\u201d\u7684\u672c\u8d28\u5c31\u5f00\u59cb\u4e00\u70b9\u70b9\u6d88\u5931\u4e86\u3002\u4ece2007\u5e74\u5f00\u59cb\uff0c\u6211\u4eec\u7684\u6f2b\u753b\u88ab\u4eba\u4eec\u4ee5\u5b57\u9762\u4e0a\u7684\u610f\u601d\u6765\u7406\u89e3\u3002\u4eba\u4eec\uff0c\u5305\u62ec\u4e00\u4e9b\u50cfPlantu\u90a3\u6837\u7684\u6f2b\u753b\u5bb6\uff08Plantu\uff0c\u6cd5\u56fd\u653f\u6cbb\u8bbd\u523a\u6f2b\u753b\u5bb6\uff09\u90fd\u8ba4\u4e3a\u6211\u4eec\u4e0d\u8be5\u753b\u90a3\u4e9b\u5173\u4e8e\u7a46\u7f55\u9ed8\u5fb7\u7684\u6f2b\u753b\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u753b\u90fd\u5728\u7f51\u7edc\u4e0a\u75af\u4f20\u3002\u56e0\u6b64\u6211\u4eec\u5f97\u5904\u5904\u5c0f\u5fc3\u906d\u4eba\u62a5\u590d\uff0c\u8fd9\u79cd\u611f\u89c9\u8ba9\u4eba\u96be\u4ee5\u5fcd\u53d7\u3002<\/p>\n<p>\u8bb0\u8005\uff1a\u4e3a\u4ec0\u4e48\uff1f<\/p>\n<p>Luz\uff1a\u4ece2007\u5e74\u5f00\u59cb\uff0c\u300a\u67e5\u7406\u5468\u520a\u300b\u5c31\u53d7\u5230\u5ba1\u67e5\u5e76\u88ab\u8b66\u544a\u8981\u627f\u62c5\u8d23\u4efb\u3002\u6211\u4eec\u753b\u51fa\u7684\u6bcf\u4e00\u5e45\u6f2b\u753b\u90fd\u88ab\u89e3\u8bfb\u6210\u662f\u8ddf\u653f\u6cbb\u6709\u5173\u3002\u8fd9\u4e9b\u8d23\u4efb\u5c31\u843d\u5230\u4e86\u6211\u4eec\u80a9\u4e0a\u3002\u4f46\u6211\u4eec\u53ea\u662f\u4e00\u4efd\u6742\u5fd7\uff0c\u4e70\u4e86\uff0c\u6253\u5f00\u770b\u4e86\uff0c\u518d\u5408\u4e0a\uff0c\u5c31\u8fd9\u4e48\u7b80\u5355\u3002\u82e5\u662f\u4eba\u4eec\u628a\u6211\u4eec\u7684\u6f2b\u753b\u4f20\u5230\u7f51\u4e0a\uff0c\u82e5\u662f\u5a92\u4f53\u5f3a\u8c03\u6211\u4eec\u7684\u4e00\u4e9b\u6f2b\u753b\uff0c\u90a3\u662f\u4ed6\u4eec\u7684\u8d23\u4efb\uff0c\u4e0d\u662f\u6211\u4eec\u7684\u3002<\/p>\n<p>\u8bb0\u8005\uff1a\u4f46\u540c\u4f60\u4eec\u4e8b\u4e0e\u613f\u8fdd\u7684\u4e8b\u60c5\u53d1\u751f\u4e86\u3002<\/p>\n<p>Luz\uff1a\u6211\u4eec\u88ab\u52a0\u4e0a\u4e86\u8c61\u5f81\u4e3b\u4e49\u7684\u8d23\u4efb\uff0c\u800c\u8fd9\u672c\u4e0d\u662f\u300a\u67e5\u7406\u5468\u520a\u300b\u7684\u521d\u8877\u3002\u6211\u4eec\u8ddfPlantu\u4e0d\u540c\uff0c\u6211\u4eec\u53cd\u5bf9\u8c61\u5f81\u4e3b\u4e49\u3002\u201c\u6218\u4e89\u4e2d\u9e3d\u5b50\u8c61\u5f81\u7740\u548c\u5e73\u201d\u8fd9\u7c7b\u9690\u55bb\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u8868\u8fbe\u7684\u3002\u6211\u4eec\u662f\u5728\u7ec6\u8282\u4e0a\u4e0b\u529f\u592b\uff0c\u6211\u4eec\u6ce8\u91cd\u7684\u662f\u600e\u6837\u628a\u6211\u4eec\u753b\u7684\u4e1c\u897f\u7528\u6cd5\u5f0f\u5e7d\u9ed8\u8868\u8fbe\u51fa\u6765\u3002<\/p>\n<p>\u8bb0\u8005\uff1a\u6f2b\u753b\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4f1a\u88ab\u8ba4\u4e3a\u662f\u7c97\u9c81\u7684\uff0c\u6216\u662f\u5f88\u670b\u514b\u7684\u4e1c\u897f\u3002<\/p>\n<p>Luz\uff1a\u6709\u4e9b\u65f6\u5019\u611a\u8822\uff0c\u6709\u4e9b\u65f6\u5019\u7c97\u9c81\uff0c\u81f3\u4e8e\u670b\u514b\uff0c\u90a3\u662f\u80af\u5b9a\u7684\u3002\u6709\u65f6\u5019\u6f2b\u753b\u4e0d\u4f1a\u4ea7\u751f\u4efb\u4f55\u5f71\u54cd\uff0c\u53e6\u4e00\u4e9b\u65f6\u5019\u5b83\u5c31\u53ea\u662f\u4f9b\u4eba\u6d88\u9063\u7684\u5a31\u4e50\u3002\u300a\u67e5\u7406\u5468\u520a\u300b\u805a\u96c6\u4e86\u4e00\u7fa4\u601d\u60f3\u5dee\u5f02\u5f88\u5927\u7684\u6f2b\u753b\u5bb6\u3002\u6839\u636e\u4e0d\u540c\u7684\u6f2b\u753b\u5bb6\u7528\u4e0d\u540c\u7684\u98ce\u683c\u6765\u8868\u73b0\u4e00\u526f\u6f2b\u753b\u2014\u2014\u753b\u653f\u6cbb\u6216\u662f\u827a\u672f\uff0c\u6f2b\u753b\u7684\u672c\u8d28\u4e5f\u5728\u6539\u53d8\u3002\u4f46\u662f\u8fd9\u79cd\u591a\u6837\u6027\u7684\u8868\u8fbe\u65b9\u5f0f\u73b0\u5728\u5374\u4e0d\u590d\u5b58\u5728\u4e86\u3002\u6bcf\u4e00\u5e45\u6f2b\u753b\u90fd\u88ab\u770b\u4f5c\u662f\u6211\u4eec\u6240\u6709\u4eba\u4e00\u8d77\u5b8c\u6210\u7684\u3002\u5b9e\u9645\u4e0a\uff0c\u300a\u67e5\u7406\u5468\u520a\u300b\u4e00\u76f4\u4ee5\u6765\u90fd\u81f4\u529b\u4e8e\u53cd\u5bf9\u8c61\u5f81\u4e3b\u4e49\uff1a\u6211\u4eec\u6467\u6bc1\u7b26\u53f7\uff0c\u6253\u7834\u7981\u5fcc\uff0c\u5c06\u90a3\u4e9b\u5e7b\u60f3\u7684\u6ce1\u6cab\u7834\u706d\u3002\u6211\u4eec\u5f88\u9ad8\u5174\u770b\u5230\u4eba\u4eec\u7ed9\u4e88\u300a\u67e5\u7406\u5468\u520a\u300b\u652f\u6301\uff0c\u4f46\u540c\u65f6\u4ed6\u4eec\u7684\u505a\u6cd5\u5374\u8ddf\u300a\u67e5\u7406\u5468\u520a\u300b\u7684\u521d\u8877\u80cc\u9053\u800c\u9a70\u3002<\/p>\n<p>\u8bb0\u8005\uff1a\u4f60\u4eec\u73b0\u5728\u5df2\u7ecf\u6210\u4e3a\u5f15\u9886\u6c11\u65cf\u56e2\u7ed3\u7684\u65d7\u5e1c\u3002<\/p>\n<p>Luz\uff1a\u8fd9\u79cd\u56e2\u7ed3\u80fd\u5e2e\u52a9\u5965\u6717\u5fb7\u5de9\u56fa\u6574\u4e2a\u56fd\u5bb6\uff0c\u540c\u6837\u5bf9\u4e8e\u52d2\u5e9e\u63d0\u5021\u7684\u6062\u590d\u6b7b\u5211\u7684\u4e3b\u5f20\u4e5f\u6709\u5e2e\u52a9\u3002\u4efb\u4f55\u610f\u4e49\u7684\u8c61\u5f81\u4e3b\u4e49\u90fd\u80fd\u88ab\u4efb\u4f55\u4eba\u5229\u7528\u8d77\u6765\u505a\u4ed6\u4eec\u60f3\u505a\u7684\u4e8b\u3002\u800c\u8fd9\u6070\u6070\u8ddf\u300a\u67e5\u7406\u5468\u520a\u300b\u8ffd\u6c42\u7684\u4e0d\u540c\uff0c\u4f60\u4e0d\u80fd\u53bb\u505a\u4efb\u4f55\u4f60\u5e7b\u60f3\u51fa\u6765\u7684\u4e8b\u60c5\u3002\u5f53\u6211\u4eec\u5632\u8bbd\uff0c\u5f00\u653f\u6cbb\u7684\u73a9\u7b11\uff0c\u6216\u8005\u8bf4\u662f\u5a31\u4e50\u5927\u4f17\u7684\u65f6\u5019\uff0c\u6211\u4eec\u6ca1\u6709\u6210\u4e3a\u4e00\u79cd\u7b26\u53f7\u3002\u6211\u8ba4\u4e3aCharb\uff08\u300a\u67e5\u7406\u5468\u520a\u300b\u4e3b\u7f16\uff0c\u572811.7\u6050\u88ad\u6848\u4e2d\u9047\u96be\uff09\u662f20\u4e16\u7eaa\u672b\u300121\u4e16\u7eaa\u521d\u7684Jean-Marc Reiser\uff0c\u4ed6\u7528\u81ea\u5df1\u7684\u65b9\u5f0f\u5bf9\u8fd9\u4e2a\u793e\u4f1a\u505a\u51fa\u8bc4\u4ef7\u3002\u4ed6\u753b\u51fa\u85cf\u5728\u8868\u8c61\u4e0b\u7684\u9634\u5f71\uff0c\u90a3\u4e9b\u7231\u8bf4\u8c0e\u7684\u4e11\u964b\u7684\u4eba\u3002\u800c\u73b0\u5728\u6211\u4eec\u4e5f\u88ab\u63a9\u76d6\u5728\u8868\u8c61\u4e0b\u4e86\u3002<\/p>\n<p>\u8bb0\u8005\uff1a\u60a8\u7684\u610f\u601d\u662f\uff1f<\/p>\n<p>Luz\uff1a\u5728\u76ee\u524d\u4e00\u79cd\u60c5\u7eea\u72b6\u6001\u4e0b\u53d1\u5e03\u300a\u67e5\u7406\u5468\u520a\u300b\u662f\u4e00\u4e2a\u6b63\u786e\u7684\u65f6\u673a\u5417\uff1f\u8fd9\u6837\u5feb\u901f\u5730\u5bf9\u6240\u653b\u51fb\u7684\u8c61\u5f81\u4e3b\u4e49\u505a\u51fa\u56de\u5e94\u9002\u5408\u5417\uff1f\u6211\u5f88\u6000\u7591\u3002\u7528\u8c61\u5f81\u4e3b\u4e49\u6765\u56de\u5e94\u8c61\u5f81\u4e3b\u4e49\uff0c\u8fd9\u4e0d\u662f\u300a\u67e5\u7406\u5468\u520a\u300b\u505a\u7684\u4e8b\u3002\u6628\u5929\u665a\u4e0a\u6211\u5728\u8111\u6d77\u4e2d\u63cf\u7ed8\u51fa\u4e00\u5e45\u6f2b\u753b\uff0c\u4e0d\u8fc7\u6211\u53ef\u80fd\u4e0d\u4f1a\u628a\u5b83\u753b\u51fa\u6765\uff1a\u5730\u677f\u4e0a\u4e00\u6ee9\u6ee9\u6c61\u6e0d\u4ee3\u8868\u7740\u9047\u96be\u8005\u5012\u4e0b\u7684\u5730\u65b9\uff0c\u4e00\u5e45\u773c\u955c\u6563\u843d\u5728\u89d2\u843d\u8bf4\u201c\u54c8\u54c8\u54c8\u201d\uff0c\u80cc\u666f\u662f\u9ed1\u8272\u3002\u8fd9\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u4e3b\u610f\uff0c\u56e0\u4e3a\u5b83\u4f1a\u88ab\u6253\u4e0a\u8c61\u5f81\u4e3b\u4e49\u7684\u6807\u7b7e\u3002<\/p>\n<p>\u8bb0\u8005\uff1a\u6240\u4ee5\u60a8\u7684\u95ee\u9898\u65f6\u201c\u4e8b\u4ef6\u8fc7\u540e\u4f60\u4eec\u5c06\u4ee5\u4ec0\u4e48\u65b9\u5f0f\u7ee7\u7eed\u753b\u4e0b\u53bb\uff1f\u201d<\/p>\n<p>Luz\uff1a\u662f\u7684\uff0c\u4ee5\u53ca\u6211\u600e\u6837\u5728\u8fd9\u6837\u7684\u80cc\u666f\u4e0b\u753b\u753b\uff0c\u5728\u300a\u67e5\u7406\u5468\u520a\u300b\u88ab\u8d4b\u4e88\u4e86\u90a3\u4e48\u591a\u5e7b\u60f3\u4e4b\u540e\u3002<\/p>\n<p>\u8bb0\u8005\uff1a\u300a\u67e5\u7406\u5468\u520a\u300b\u5c06\u600e\u4e48\u7ee7\u7eed\u4e0b\u53bb\u5462\uff1f<\/p>\n<p>Luz\uff1a\u8fd9\u5c06\u4f1a\u5f88\u590d\u6742\u3002\u9664\u4e86\u6211\u4e4b\u524d\u63d0\u5230\u7684\u90a3\u4e9b\u539f\u56e0\u4e4b\u5916\uff0c\u6211\u4eec\u90a3\u51e0\u4e2a\u5584\u4e8e\u753b\u753b\u3001\u5584\u4e8e\u601d\u8003\u653f\u6cbb\u3001\u9053\u5fb7\u3001\u601d\u60f3\u6fc0\u8fdb\u7684\u540c\u4e8b\u2014\u2014 Charb, Tignous, Honor\u00e9\uff0c\u8fd8\u6709\u5176\u4ed6\u51e0\u4f4d\uff0c\u4e0d\u5728\u4e86\u3002\u5728\u8fd9\u79cd\u56f0\u96be\u7684\u65f6\u523b\uff0c\u6211\u4eec\u5269\u4e0b\u7684\u4eba\u627f\u62c5\u7740\u91cd\u4efb\u3002\u73b0\u5728\u53ea\u5269\u4e0bCatherine, Willem, Coco\u4ee5\u53ca\u6211\uff0c\u8fd8\u6709\u53d7\u4f24\u7684Riss\u3002\u5355\u51ed\u6211\u4eec\u51e0\u4e2a\u4eba\u7684\u529b\u91cf\u600e\u4e48\u624d\u80fd\u8d8a\u8fc7\u8fd9\u79cd\u8c61\u5f81\u4e3b\u4e49\u5462\uff1f\uff08\u65e9\u524d\u4ece\u300a\u67e5\u7406\u5468\u520a\u300b\u79bb\u804c\u7684Jul\u73b0\u5728\u524d\u6765\u5e2e\u52a9\u7b56\u5212\u4e0b\u4e00\u671f\u7684\u5185\u5bb9\u3002\uff09\u6bcf\u4e2a\u4eba\u90fd\u80fd\u6210\u4e3a\u6f2b\u753b\u5bb6\uff0c\u4f46\u4ed6\u4eec\u80fd\u6293\u4f4f\u67e5\u7406\u7684\u7cbe\u795e\u5417\uff1f\u6211\u4eec\u7684\u7cbe\u795e\u6d41\u4f20\u4e8622\u5e74\u4e86\uff0c\u73b0\u5728\u8fd9\u4efd\u6742\u5fd7\u5f97\u4ee5\u751f\u5b58\u81f3\u4eca\u90fd\u662f\u6742\u5fd7\u793e\u6240\u6709\u6210\u5458\u7684\u52aa\u529b\u3002<\/p>\n<p>\u8bb0\u8005\uff1a\u4f60\u4eec\u89c9\u5f97\u6709\u5fc5\u8981\u5c06\u5148\u77e5\u753b\u8fdb\u8bbd\u523a\u6f2b\u753b\u91cc\u5417\uff1f\u6291\u6216\u4f60\u4eec\u6709\u65f6\u5019\u4f1a\u89c9\u5f97\u81ea\u5df1\u6389\u8fdb\u4e86\u9677\u9631\u91cc\uff1f<\/p>\n<p>Luz\uff1a\u6709\u8da3\u7684\u662f\u57282007\u5e74\u7684\u4e8b\u4ef6\u8fc7\u540e\u6211\u4eec\u7ee7\u7eed\u753b\u4e86\u4e00\u4e9b\u6709\u5173\u7a46\u7f55\u9ed8\u5fb7\u7684\u6f2b\u753b\u3002\u57282007\u5e74\u30012011\u5e74\u4ee5\u53ca2012\u5e74\u4e09\u6b21\u753b\u7684\u9ed8\u7f55\u9ed8\u5fb7\u6f2b\u753b\u5f15\u8d77\u4e89\u8bae\u4e4b\u540e\uff0cCharb \u548c Zineb El-Rhazoui\uff08\u5728\u300a\u67e5\u7406\u5468\u520a\u300b\u5de5\u4f5c\u7684\u7a46\u65af\u6797\u5973\u8bb0\u8005\uff09 \u53c8\u51fa\u4e86\u4e24\u5377\u5173\u4e8e\u7a46\u7f55\u9ed8\u5fb7\u751f\u6d3b\u7684\u6f2b\u753b\uff0c\u4f46\u5e76\u6ca1\u6709\u5f15\u8d77\u8f70\u52a8\u3002\u6211\u4eec\u7684\u76ee\u7684\u8fbe\u5230\u4e86\u3002Charb \u60f3\u8981\u6309\u7167\u8fd9\u4e2a\u8bbe\u60f3\u4e00\u76f4\u8fdb\u884c\u4e0b\u53bb\uff0c\u7a7f\u7740\u4ed6\u7684\u767b\u5c71\u978b\uff0c\u548c\u4ed6\u559c\u6b22\u5f97\u4e0d\u5f97\u4e86\u7684\u5b9e\u9645\u4e0a\u5f88\u4e11\u7684\u519b\u88e4\uff0c\u7ad9\u5728\u9ad8\u5904\uff08\u7b11\uff09\u3002Charb\u76f8\u4fe1\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u514b\u670d\u7981\u5fcc\u548c\u7b26\u53f7\u6807\u51c6\u3002\u4f46\u73b0\u5728\uff0c\u6211\u4eec\u6210\u4e3a\u4e86\u4e00\u79cd\u7b26\u53f7\u3002\u5f53\u4e00\u79cd\u7b26\u53f7\u5c31\u662f\u4f60\u81ea\u5df1\u7684\u65f6\u5019\uff0c\u4f60\u80fd\u600e\u4e48\u6837\u53bb\u6467\u6bc1\u5b83\uff1f<\/p>\n<p>\u7ad9\u5728\u88ab\u70e7\u6bc1\u7684\u529e\u516c\u697c\u524d\u7684Charb\u3002<\/p>\n<p>\u8bb0\u8005\uff1a\u6211\u4e0d\u77e5\u9053\u3002<\/p>\n<p>Luz\uff1a\u6211\u4e5f\u4e0d\u77e5\u9053\u3002\u8fd9\u5468\u6211\u4e0d\u6253\u7b97\u53bb\u60f3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4e5f\u4e0d\u786e\u5b9a\u4ee5\u540e\u6211\u4f1a\u4e0d\u4f1a\u6765\u89e3\u51b3\u5b83\u3002\u6211\u4eec\u4f1a\u7ee7\u7eed\u53d1\u5e03\u300a\u67e5\u7406\u5468\u520a\u300b\u3002\u6211\u4f1a\u5f3a\u8feb\u6211\u81ea\u5df1\u7684\u3002\u6211\u4f1a\u53bb\u601d\u8003\u6211\u6b7b\u53bb\u7684\u670b\u53cb\u4eec\uff0c\u6211\u77e5\u9053\u4ed6\u4eec\u4e0d\u662f\u4e3a\u4e86\u6cd5\u56fd\u800c\u5012\u4e0b\u7684\uff01\u4eca\u5929\uff0c\u770b\u4e0a\u53bb\u4f3c\u4e4e\u662f\u300a\u67e5\u7406\u5468\u520a\u300b\u4e3a\u8a00\u8bba\u81ea\u7531\u800c\u6b7b\u4e86\u3002\u4f46\u4e8b\u5b9e\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u6211\u4eec\u7684\u670b\u53cb\u6b7b\u4e86\u3002\u6211\u4eec\u7231\u7684\u670b\u53cb\uff0c\u90a3\u4e9b\u6709\u7740\u8ba9\u6211\u4eec\u975e\u5e38\u6b23\u8d4f\u7684\u624d\u534e\u7684\u670b\u53cb\u6b7b\u4e86\u3002<\/p>\n<p>\u8bb0\u8005\uff1a\u5728BFMTV\u4e0a\uff0c\u6211\u4eec\u770b\u5230\u73b0\u5728\u5c40\u52bf\u5f88\u6df7\u4e71\u3002Charb\u7684\u5973\u53cbJeannette Bougrab \u8bf4\uff0c\u4ed6\u4eec\u503c\u5f97\u88ab\u57cb\u846c\u5728\u6cd5\u56fd\u7684\u5148\u8d24\u7960\u91cc\u3002<\/p>\n<p>Luz\uff1a\u300a\u67e5\u7406\u5468\u520a\u300b\u4e0d\u540c\u610f\u8fd9\u6837\u505a\u3002\u5728\u5148\u8d24\u7960\u91cc\u88ab\u706b\u846c\u5bf9\u4e8e\u5c45\u91cc\u592b\u4eba\u6765\u8bf4\u5e76\u6ca1\u6709\u6539\u53d8\u4efb\u4f55\u4e1c\u897f\uff01<\/p>\n<p>\u8bb0\u8005\uff1a\u8fd9\u5c06\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u7eaa\u5ff5\u65b9\u5f0f\u3002\u3002\u3002<\/p>\n<p>Luz\uff1a1\u67087\u65e5\u665a\u7684\u81ea\u53d1\u96c6\u4f1a\u6211\u6ca1\u6709\u53bb\u3002\u5728\u90a3\u91cc\u4eba\u4eec\u5531\u8d77\u4e86\u56fd\u6b4c\u3002\u6211\u4eec\u8c08\u8d77Charb, Tignous, Cabus, Honor\u00e9, Wolinski: \u4ed6\u4eec\u4e00\u5b9a\u4f1a\u5632\u7b11\u8fd9\u79cd\u884c\u4e3a\u6001\u5ea6\u3002\u4eba\u4eec\u7528\u4ed6\u4eec\u559c\u6b22\u7684\u65b9\u5f0f\u6765\u8868\u8fbe\u81ea\u5df1\uff0c\u4f46\u662f\u5171\u548c\u56fd\u4e0d\u5e94\u8be5\u4e5f\u53d8\u6210\u4e00\u4e2a\u6b47\u65af\u5e95\u91cc\u7684\u9001\u846c\u8005\u3002\u8fd9\u662f\u4e00\u79cd\u60b2\u54c0\u3002<\/p>\n<p>\u8bb0\u8005\uff1a\u6211\u60f3\u8fd9\u5c06\u6210\u4e3a\u4f60\u628a\u660e\u5929\u7684\u96c6\u4f1a\u8bb0\u5f55\u5728\u6f2b\u753b\u91cc\u7684\u7406\u7531\u5427\uff1f<\/p>\n<p>Luz\uff1a\u6211\u4e5f\u4e0d\u77e5\u9053\u3002\u6beb\u65e0\u7591\u95ee\uff0c\u660e\u5929\u5c06\u4f1a\u6709\u5404\u79cd\u7f8e\u597d\u7684\u573a\u9762\uff0c\u6cea\u6c34\uff0c\u5fae\u7b11\uff0c\u6216\u8bb8\u8fd8\u4f1a\u6709\u70b9\u8352\u8c2c\u3002\u540c\u65f6\u8fd9\u4e5f\u4f1a\u8868\u73b0\u51fa\u300a\u67e5\u7406\u5468\u520a\u300b\u672c\u8d28\u7684\u53d8\u5316\uff1a\u73b0\u5728\u6765\u652f\u6301\u6211\u4eec\u7684\u4eba\u4e2d\uff0c\u6709\u5f88\u591a\u90fd\u4ece\u6765\u6ca1\u8bfb\u8fc7\u6211\u4eec\u7684\u4f5c\u54c1\u3002\u6211\u5e76\u4e0d\u662f\u8ddf\u4ed6\u4eec\u751f\u6c14\u3002\u6211\u4eec\u7684\u76ee\u6807\u4ece\u6765\u90fd\u4e0d\u662f\u8bf4\u670d\u6240\u6709\u4eba\u3002<\/p>\n<p>\u8bb0\u8005\uff1a\u53bb\u5e7411\u6708\uff0cCharb\u53d1\u51fa\u58f0\u660e\u547c\u5401\u5927\u5bb6\u6765\u8ba2\u9605\u300a\u67e5\u7406\u5468\u520a\u300b\uff0c\u6765\u62ef\u6551\u8fd9\u672c\u6742\u5fd7\u3002\u90a3\u4e2a\u65f6\u5019\u8fd9\u672c\u6742\u5fd7\u5f88\u5b64\u72ec\u3002<\/p>\n<p>Luz\uff1a\u81ea\u4ece\u7b2c\u4e09\u6b21\u56e0\u4e3a\u753b\u9ed8\u7f55\u9ed8\u5fb7\u800c\u53d7\u5230\u4e89\u8bae\u4e4b\u540e\uff0c\u4e00\u4e9b\u65f6\u5019\u6211\u4eec\u611f\u5230\u5f88\u5b64\u72ec\u3002\u5f88\u591a\u5173\u4e8e\u300a\u67e5\u7406\u5468\u520a\u300b\u65e0\u795e\u8bba\u7684\u8bf4\u6cd5\u3001\u601d\u60f3\u90fd\u6d8c\u73b0\u4e86\u51fa\u6765\u3002\u4f46\u5b9e\u9645\u4e0a\u6211\u5c31\u5c31\u53ea\u662f\u7b80\u7b80\u5355\u5355\uff0c\u5feb\u4e50\u7684\u4e0d\u4fe1\u6559\u7684\u4eba\u800c\u5df2\u3002\u6b7b\u6389\u7684\u90a3\u4e9b\uff0c\u90fd\u662f\u5feb\u4e50\u7684\u65e0\u4fe1\u4ef0\u7684\u4eba\u3002\u73b0\u5728\u4ed6\u4eec\u6b7b\u4e86\uff0c\u4e0d\u5b58\u5728\u4e86\uff0c\u5c31\u8ddf\u5176\u4ed6\u6240\u6709\u4eba\u4e00\u6837\u3002<\/p>\n<p>\u8bb0\u8005\uff1a\u5bf9\u4e8e\u74e6\u5c14\u65af\u603b\u7406\u6ca1\u6709\u9080\u8bf7\u53f3\u6d3e\u7684\u52d2\u5e9e\u6765\u53c2\u52a0\u660e\u5929\u7684\u5171\u548c\u56fd\u5927\u6e38\u884c\u4e00\u4e8b\uff0c\u4f60\u600e\u4e48\u770b\uff1f<\/p>\n<p>Luz\uff1a\u6211\u6ca1\u6709\u4efb\u4f55\u770b\u6cd5\u3002<\/p>\n<p>\u8bb0\u8005\uff1a\u4f60\u8ba4\u4e3a\u73b0\u5728\u4eba\u4eec\u662f\u6709\u8981\u62ef\u6551\u300a\u67e5\u7406\u5468\u520a\u300b\u7684\u8d8b\u52bf\u5417\uff1f<\/p>\n<p>Luz\uff1a\u8bf4\u8001\u5b9e\u8bdd\uff0c\u53bb\u6551\u4ec0\u4e48\uff1f\u73b0\u5728\u5927\u5bb6\u8fd8\u5728\u52bf\u5934\u4e0a\uff0c\u6709\u6c14\u52bf\u3002\u800c\u5728\u4e00\u5e74\u7684\u65f6\u95f4\u91cc\uff0c\u8fd9\u4e9b\u4e3a\u8a00\u8bba\u81ea\u7531\u800c\u6218\u7684\u6c14\u52bf\u53c8\u4f1a\u5269\u4e0b\u591a\u5c11\uff1f\u4f1a\u7ed9\u4e88\u79c1\u4eba\u5a92\u4f53\u8d44\u91d1\u8d5e\u52a9\u5417\uff1f\u4eba\u4eec\u4f1a\u62b5\u5236\u7eb8\u5a92\u548c\u62a5\u520a\u4ead\u7684\u8870\u843d\u5417\uff1f\u4eba\u4eec\u8fd8\u4f1a\u4e70\u62a5\u7eb8\u6742\u5fd7\u5417\uff1f\u8fd9\u4e9b\u6c14\u52bf\u4f1a\u5269\u4e0b\u4ec0\u4e48\uff1f\u4e5f\u8bb8\u4f1a\u5269\u4e0b\uff0c\u4e5f\u8bb8\u4e0d\u4f1a\u3002<\/p>\n<p>\u8bb0\u8005\uff1a\u4f60\u4eec\u5c06\u5982\u4f55\u5de5\u4f5c\uff1f<\/p>\n<p>Luz\uff1a\u6211\u4eec\u5c06\u7ee7\u7eed\u753b\u90a3\u4e9b\u5feb\u4e50\u7684\u5c0f\u4eba\u513f\u3002\u4f5c\u4e3a\u6f2b\u753b\u5bb6\uff0c\u6211\u4eec\u7684\u5de5\u4f5c\u662f\u4ee5\u8fd9\u4e9b\u5feb\u4e50\u7684\u4eba\u4eec\u4e3a\u7d20\u6750\u6765\u753b\u6210\u6f2b\u753b\uff0c\u4ee5\u4f20\u8fbe\u4e00\u4e2a\u89c2\u70b9\uff0c\u5c31\u662f\u6211\u4eec\u6240\u6709\u4eba\u90fd\u662f\u5feb\u4e50\u7684\u5c0f\u4eba\u7269\uff0c\u6211\u4eec\u4f1a\u52aa\u529b\u628a\u6211\u4eec\u9700\u8981\u505a\u7684\u505a\u597d\u3002\u90a3\u4e9b\u88ab\u6740\u5bb3\u7684\u4eba\u90fd\u53ea\u662f\u753b\u51fa\u90a3\u4e9b\u6b22\u5feb\u7684\u5c0f\u4eba\u513f\u7684\u666e\u901a\u4eba\u3002<\/p>\n<p>\u8bb0\u8005\uff1a\u56e0\u6b64\u8ba9\u4f60\u4eec\u8fd9\u4e9b\u7b80\u5355\u5feb\u4e50\u7684\u5c0f\u4eba\u7269\u6765\u62ef\u6551\u6574\u4e2a\u6cd5\u56fd\uff0c\u672a\u514d\u592a\u6c89\u91cd\u4e86\uff1f<\/p>\n<p>Luz\uff1a\u662f\u7684\u3002<\/p>\n<p>\uff08\u6765\u6e90\uff1a\u6cd5\u5a92les in rocks\uff0c\u91c7\u8bbf\uff1aAnne Laffeter\uff09<\/p>\n<blockquote>\n<p>\u540e\u8bb0\uff1a \u6b22\u8fce\u52a0\u5165\u6211\u7684\u79c1\u4eba\u516c\u4f17\u53f7\uff0c \u548c\u4f60\u5206\u4eab\u6211\u601d\u8003\u7684\u89c2\u70b9\u548c\u6587\u7ae0\uff1a<br><img src=\"http:\/\/ww2.sinaimg.cn\/large\/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg\" alt=\"\u516c\u4f17\u53f7\u4e8c\u7ef4\u7801\"><\/p>\n<\/blockquote>"},{"title":"Responsive web design[\u7b2c\u4e8c\u671f]-position\/overlay","link":"http:\/\/chocoluffy.com\/2016\/01\/20\/Responsive-web-design-%E7%AC%AC%E4%BA%8C%E6%9C%9F-position-overlay\/","guid":"http:\/\/chocoluffy.com\/2016\/01\/20\/Responsive-web-design-\u7b2c\u4e8c\u671f-position-overlay\/","pubDate":"2016-01-20T20:50:19.000Z","categories":["web design","\u6280\u672f"],"author":"Shunzhe Yu","thumbnail":"","description":"<p>\u5728\u4f7f\u7528position\u7b49css\u5c5e\u6027\u7684\u65f6\u5019\u4f1a\u7ecf\u5e38\u5728\u2019absolute\u2019,\u2019relative\u2019\u548c\u2019static\u2019\u4e0a\u8fdb\u5751\u3002 \u672c\u6587\u4ece\u5b9e\u6218\u7684\u89d2\u5ea6\u4ecb\u7ecdposition\u7684\u5404\u79cd\u5e94\u7528\u548c\u5982\u4f55\u6dfb\u52a0\u4e00\u5c42\u4f18\u96c5\u7684\u6e10\u53d8\u80cc\u666f\u8fc7\u6e21\u5c42\u3002<\/p>","content":"<p>\u5728\u4f7f\u7528position\u7b49css\u5c5e\u6027\u7684\u65f6\u5019\u4f1a\u7ecf\u5e38\u5728\u2019absolute\u2019,\u2019relative\u2019\u548c\u2019static\u2019\u4e0a\u8fdb\u5751\u3002 \u672c\u6587\u4ece\u5b9e\u6218\u7684\u89d2\u5ea6\u4ecb\u7ecdposition\u7684\u5404\u79cd\u5e94\u7528\u548c\u5982\u4f55\u6dfb\u52a0\u4e00\u5c42\u4f18\u96c5\u7684\u6e10\u53d8\u80cc\u666f\u8fc7\u6e21\u5c42\u3002<\/p>\n<a><\/a>\n<h2>position: static<\/h2><p>when dealing with nested container, the parent div is usually set to be <code>position: relative<\/code> while child div is <code>position: absolute<\/code> so that the child element can be positioned to any pos within parent container, if the parent div is set to <code>position: static<\/code>, child element will ignore parent position.<\/p>\n<blockquote>\n<p>Note that <code>position: static<\/code> is CSS default setting, so if we want to use <code>position: absolute<\/code>, we should always set the parent element to <code>position: relative<\/code>. ReactNative set the default value back, so no worries.<\/p>\n<\/blockquote>\n<p>when use position properties like <code>top<\/code> and <code>left<\/code>, we usually set them to <code>50%<\/code>, but the result will be like the element\u2019s top left corner is sticked to the center, while the rest of it is not at the center, which is not what we want, we usually use <code>transform<\/code> property and get it to <code>-50%<\/code> to center the element.<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><\/pre><\/td><td><pre><span>top: <span>50<\/span>%;<\/span><br><span>left: <span>50<\/span>%;<\/span><br><span>transform: translate(-<span>50<\/span>%, -<span>50<\/span>%);<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>\u8fd9\u91cc\u6211\u4eec\u8981\u8bf4\u8bf4 static \u5143\u7d20\u7684\u53e6\u5916\u4e00\u4e2a\u5751\u3002<\/p>\n<p>absolute, relative: \u6709 z-index\u3002<br>static: \u6ca1\u6709 z-index\u3002<br>\u6ca1\u6709 z-index \u7684\u5143\u7d20\u9ed8\u8ba4\u5728\u6709 z-index \u7684\u5143\u7d20\u4e0b\u9762\u3002<\/p>\n<p>img \u548c h1 \u5143\u7d20\u90fd\u662f position: static\u3002z-index \u5bf9 static \u5143\u7d20\u4e0d\u8d77\u4f5c\u7528\uff0c\u56e0\u6b64\u5b83\u4eec\u90fd\u5728\u7edd\u5bf9\u5b9a\u4f4d\u7684\u5143\u7d20\u4e0b\u9762\u3002<\/p>\n<h2>position: relative<\/h2><p>\u63a5\u4e0b\u6765\u770b\u770b\u6211\u4eec\u5634\u7ecf\u5e38\u89c1\u5230\u7684<code>position: relative<\/code>\u3002<br>\u7b80\u5355\u5730\u8bf4\uff0c \u5c31\u662f\u5728\u8fd9\u4e2a\u5143\u7d20\u539f\u672c\u7684\u4f4d\u7f6e\u4e0a\u505a\u4f4d\u79fb\uff0c \u56e0\u4e3a\u6709\u4e86<code>position: relative<\/code>\u7684\u8bbe\u5b9a\uff0c \u6211\u4eec\u53ef\u4ee5\u7528<code>top``left<\/code>\u6765\u79fb\u52a8\u8fd9\u4e2a\u5143\u7d20\u3002<br>If you specify position:relative, then you can use top or bottom, and left or right to move the element relative to where it would normally occur in the document.<\/p>\n<p>Let\u2019s move div-1 down 20 pixels, and to the left 40 pixels:<br><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><\/pre><\/td><td><pre><span><span>#div-1<\/span> <span>{<\/span><br><span> <span><span>position<\/span>:<span>relative<\/span><\/span>;<\/span><br><span> <span><span>top<\/span>:<span><span>20px<\/span><\/span><\/span>;<\/span><br><span> <span><span>left<\/span>:<span>-<span>40px<\/span><\/span><\/span>;<\/span><br><span>}<\/span><\/span><br><\/pre><\/td><\/tr><\/table><\/figure><\/p>\n<p>Notice the space where div-1 normally would have been if we had not moved it: now it is an empty space. The next element (div-after) did not move when we moved div-1. That\u2019s because div-1 still occupies that original space in the document, even though we have moved it. \u6548\u679c\u53c2\u8003\uff1a<img src=\"http:\/\/ww3.sinaimg.cn\/large\/c5ee78b5gw1f08roukzilj20ry0lwjw8.jpg\" alt=\"position relative\"><\/p>\n<p>\u53e6\u5916\uff0c position:relative \u8fd8\u5e26\u6765\u4e86z-index\u7684\u5c5e\u6027\u3002<\/p>\n<ul><li>references from <a href=\"https:\/\/css-tricks.com\/absolute-relative-fixed-positioining-how-do-they-differ\/\" target=\"_blank\" rel=\"external\">Absolute, Relative, Fixed Positioning: How Do They Differ?<\/a><br>There are two other things that happen when you set position: relative; on an element that you should be aware of. One is that it introduces the ability to use z-index on that element, which doesn\u2019t really work with statically positioned elements. Even if you don\u2019t set a z-index value, this element will now appear on top of any other statically positioned element. You can\u2019t fight it by setting a higher z-index value on a statically positioned element. The other thing that happens is it limits the scope of absolutely positioned child elements. Any element that is a child of the relatively positioned element can be absolutely positioned within that block.<\/li>\n<\/ul><h2>position: absolute<\/h2><p>\u5982\u679c\u6211\u4eec\u4f7f\u7528<code>position: absolute<\/code>\u5462, \u8fd9\u4e2a\u5143\u7d20\u5c06\u4f1a\u8131\u79bb\u6587\u672c\uff0c \u6211\u4eec\u53ef\u4ee5\u4eba\u610f\u5c06\u5b83\u6446\u653e\u5230\u7684\u60f3\u53bb\u7684\u4f4d\u7f6e\uff0c \u6ce8\u610f\u548cstatic\u7684\u533a\u522b\u662f\uff0c \u8fd9\u4e2aabsolute\u662f\u76f8\u5bf9<em><strong>\u4e0a\u4e00\u4e2a\u5b9a\u4f4d\u4e3arelative<\/strong><\/em>\u7684\u5b9a\u4f4d\uff0c \u800cstatic\u662f\u76f8\u5bf9\u6d4f\u89c8\u5668\u7684\u5b9a\u4f4d\u3002<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><\/pre><\/td><td><pre><span><span>#div-<span>1<\/span> {<\/span><\/span><br><span> position:relative;<\/span><br><span>}<\/span><br><span><span>#div-<span>1<\/span>a {<\/span><\/span><br><span> position:absolute;<\/span><br><span> top:<span>0<\/span>;<\/span><br><span> right:<span>0<\/span>;<\/span><br><span> width:<span>200<\/span>px;<\/span><br><span>}<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>\u6548\u679c\u53c2\u8003\uff1a<img src=\"http:\/\/ww4.sinaimg.cn\/large\/c5ee78b5gw1f08rtih4o4j20pe0iadk1.jpg\" alt=\"relative and absolute\"><\/p>\n<blockquote>\n<p>\u6700\u540e\u4e00\u4e2a\u8865\u5145\uff1a\u6211\u4eec\u5e38\u5e38\u548c<code>float<\/code>\u642d\u914d\u4f7f\u7528\u7684<code>clear: both<\/code>, \u4f5c\u7528\u662f\u4f7f\u5f97\u5b9a\u4e49\u4e86\u8be5\u5c5e\u6027\u7684\u5143\u7d20\u7684\u5de6\u4fa7\u548c\u53f3\u4fa7\u5747\u4e0d\u5141\u8bb8\u51fa\u73b0\u6d6e\u52a8\u5143\u7d20\u3002<\/p>\n<\/blockquote>\n<h2>\u6eda\u52a8\u63a7\u5236<\/h2><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><\/pre><\/td><td><pre><span>&lt;div id=\"slider-control\"&gt;<\/span><br><span>  &lt;a href=\"#native\" class=\"active\"&gt;<\/span><br><span>    &lt;div class=\"dot\"&gt;&lt;\/div&gt;<\/span><br><span>  &lt;\/a&gt;<\/span><br><span><\/span><br><span>  &lt;a href=\"#touch\"&gt;<\/span><br><span>    &lt;div class=\"dot\"&gt;&lt;\/div&gt;<\/span><br><span>  &lt;\/a&gt;<\/span><br><span><\/span><br><span>  &lt;a href=\"#async\"&gt;<\/span><br><span>    &lt;div class=\"dot\"&gt;&lt;\/div&gt;<\/span><br><span>  &lt;\/a&gt;<\/span><br><span><\/span><br><span>  &lt;a href=\"#flex\"&gt;<\/span><br><span>    &lt;div class=\"dot\"&gt;&lt;\/div&gt;<\/span><br><span>  &lt;\/a&gt;<\/span><br><span>&lt;\/div&gt;<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>\u8ba9\u5b83\u4eecposition: fixed, \u6548\u679c\u53c2\u8003\uff1a<\/p>\n<p><img src=\"http:\/\/ww3.sinaimg.cn\/large\/c5ee78b5gw1f06g8ze3fhj20yo0pw76w.jpg\" alt=\"movement control\"><\/p>\n<h2>overlay \u5e73\u6ed1\u8fc7\u6e21<\/h2><figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><\/pre><\/td><td><pre><span>&lt;section&gt;<\/span><br><span>    &lt;div class=\"container\" id=\"intro-section\"&gt;<\/span><br><span>    &lt;div class=\"overlay\"&gt;&lt;\/div&gt;<\/span><br><span>    &lt;h1&gt;I Love React&lt;\/h1&gt;<\/span><br><span>    &lt;p&gt;I just want to see the so-called live-coding&lt;\/p&gt;<\/span><br><span>    &lt;\/div&gt;<\/span><br><span>&lt;\/section&gt;<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p>\u5c06\u6700\u4e0a\u9762\u7684container\u7684\u80cc\u666f\u8bbe\u7f6e\u4e3a\u56fe\u7247\u80cc\u666f\uff0c \u7136\u540e\u4e2d\u95f4\u52a0\u4e00\u4e2adiv.overlay\u7684div, \u7136\u540e\u901a\u8fc7\u6e10\u53d8\u8bbe\u7f6e\u5176\u80cc\u666f\u4e3a\u4e3b\u80cc\u666f\u989c\u8272\u3002<\/p>\n<figure><table><tr><td><pre><span>1<\/span><br><span>2<\/span><br><span>3<\/span><br><span>4<\/span><br><span>5<\/span><br><span>6<\/span><br><span>7<\/span><br><span>8<\/span><br><span>9<\/span><br><span>10<\/span><br><span>11<\/span><br><span>12<\/span><br><span>13<\/span><br><span>14<\/span><br><span>15<\/span><br><span>16<\/span><br><span>17<\/span><br><span>18<\/span><br><span>19<\/span><br><\/pre><\/td><td><pre><span><span>#intro-section{<\/span><\/span><br><span>  background-image: url(..\/image\/background.jpg);<\/span><br><span>  background-size: cover;<\/span><br><span>  background-position: center;<\/span><br><span>}<\/span><br><span><\/span><br><span><span>#intro-section h1, p{<\/span><\/span><br><span>  position: relative;<\/span><br><span>  z-index: <span>1<\/span>;<\/span><br><span>}<\/span><br><span><\/span><br><span>.overlay{<\/span><br><span>  position: absolute;<\/span><br><span>  top: <span>0<\/span>;<\/span><br><span>  left: <span>0<\/span>;<\/span><br><span>  width: <span>100<\/span>%;<\/span><br><span>  height: <span>100<\/span>%;<\/span><br><span>  background-image: linear-gradient(rgba(<span>0<\/span>,<span>0<\/span>,<span>0<\/span>,<span>0<\/span>),rgba(<span>22<\/span>, <span>21<\/span>, <span>37<\/span>, <span>1<\/span>));<\/span><br><span>}<\/span><br><\/pre><\/td><\/tr><\/table><\/figure><p><img src=\"http:\/\/ww4.sinaimg.cn\/large\/c5ee78b5gw1f06lr99d5xj21kw0q47cw.jpg\" alt=\"overlay\"><\/p>\n<h2>\u53c2\u8003\u8d44\u6599<\/h2><ul><li><a href=\"http:\/\/hex2rgba.devoth.com\/\" target=\"_blank\" rel=\"external\">hex to rgba online converter<\/a><\/li>\n<li><a href=\"https:\/\/github.com\/luckymore0520\/sike-react-ilovereact\" target=\"_blank\" rel=\"external\">ilovereact<\/a><\/li>\n<li><a href=\"http:\/\/gugugupan.github.io\/sike-react-ilovereact\/\" target=\"_blank\" rel=\"external\">\u6700\u540e\u6210\u54c1\u6548\u679cilovereact\uff0d\u6dfb\u52a0\u52a8\u753b<\/a><\/li>\n<li><a href=\"https:\/\/github.com\/gugugupan\/sike-react-ilovereact\/blob\/master\/index.html\" target=\"_blank\" rel=\"external\">\u4e0a\u9762github\u9879\u76ee\u7684index.html<\/a><\/li>\n<\/ul><blockquote>\n<p>\u540e\u8bb0\uff1a \u6b22\u8fce\u52a0\u5165\u6211\u7684\u79c1\u4eba\u516c\u4f17\u53f7\uff0c \u548c\u4f60\u5206\u4eab\u6211\u601d\u8003\u7684\u89c2\u70b9\u548c\u6587\u7ae0\uff1a<br><img src=\"http:\/\/ww2.sinaimg.cn\/large\/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg\" alt=\"\u516c\u4f17\u53f7\u4e8c\u7ef4\u7801\"><\/p>\n<\/blockquote>"},{"title":"\u65f6\u95f4\u77e5\u9053[\u6301\u7eed\u66f4\u65b0...]","link":"http:\/\/chocoluffy.com\/2016\/01\/12\/%E6%97%B6%E9%97%B4%E7%9F%A5%E9%81%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0\/","guid":"http:\/\/chocoluffy.com\/2016\/01\/12\/\u65f6\u95f4\u77e5\u9053-\u6301\u7eed\u66f4\u65b0\/","pubDate":"2016-01-12T17:46:57.000Z","categories":["\u6536\u85cf\u5e16","\u539f\u521b"],"author":"Shunzhe Yu","thumbnail":"","description":"<p>\u56e0\u4e3a\uff0c \u53ea\u6709\u65f6\u95f4\u77e5\u9053\u3002<\/p>","content":"<p>\u56e0\u4e3a\uff0c \u53ea\u6709\u65f6\u95f4\u77e5\u9053\u3002<\/p>\n<a><\/a>\n<h2>\u6280\u672f<\/h2><ul><li><a href=\"http:\/\/hanhailong.com\/\" target=\"_blank\" rel=\"external\">\u97e9\u6d77\u9f99\u7684\u6280\u672f\u535a\u5ba2(Android\\IOS)<\/a><\/li>\n<li><a href=\"http:\/\/jinglei.me\/\" target=\"_blank\" rel=\"external\">\u8346\u96f7\u7684\u6280\u672f\u535a\u5ba2(React\\Meteor)<\/a><\/li>\n<li><a href=\"http:\/\/ramiro.org\/vis\/hn-most-linked-books-unique-users\/\" target=\"_blank\" rel=\"external\">Hacker News\u4e0a\u8bc4\u4ef7\u6700\u9ad8\u7684\u4e66<\/a><\/li>\n<li><a href=\"http:\/\/www.yehbeats.com\/\" target=\"_blank\" rel=\"external\">YeHbeats\u7684\u6280\u672f\u535a\u5ba2(Python\\Hexo)<\/a><\/li>\n<li><a href=\"http:\/\/zyden.vicp.cc\/#blog\" target=\"_blank\" rel=\"external\">Den\u7684\u6280\u672f\u535a\u5ba2(Swift\\Design)<\/a><\/li>\n<li><a href=\"http:\/\/aljun.me\/\" target=\"_blank\" rel=\"external\">Aljun\u7684\u535a\u5ba2(Python)<\/a><\/li>\n<\/ul><h2>\u6587\u5b57<\/h2><ul><li><a href=\"http:\/\/think-different-8.lofter.com\/view\" target=\"_blank\" rel=\"external\">\u4f59\u821c\u54f2\u7684lofter\u8db3\u8ff9<\/a><\/li>\n<\/ul>"}]}
